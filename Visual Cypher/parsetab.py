
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAM ID VAR_INT VAR_FLOAT VAR_STRING VAR_BOOLEAN FLOAT INT STRING BOOLEAN CARET POINT COMA OP_PLUS OP_MINUS OP_TIMES OP_DIVISION OP_EQUALS_TWO OP_NOT_EQUALS OP_LPAREN OP_RPAREN OP_EQUALS OP_LESS_THAN OP_LESS_EQUALS_THAN OP_GREATER_THAN OP_GREATER_EQUALS_THAN AND OR PRINT QUOT_MARK SEMICOLON LCURLY_BRACKET RCURLY_BRACKET VAR IF ELSE OP_PLUS_EQUALS OP_MINUS_EQUALS RETURN FUNCTION MAIN FOR VOID\n\tprogram\t\t:\tPROGRAM  ID  LCURLY_BRACKET  vars   function \tmain_function\t RCURLY_BRACKET\t\n\n\t\n\tvars\t:\t\tINT\t \t ID\t\tOP_EQUALS\tVAR_INT\t \tSEMICOLON\tvars\n\t\t\t|\t\tFLOAT\t ID\t\tOP_EQUALS\tVAR_FLOAT \tSEMICOLON\tvars\n\t\t\t|\t\tSTRING\t ID\t\tOP_EQUALS\tVAR_STRING\tSEMICOLON\tvars\n\t\t\t|\t\tBOOLEAN\t ID\t\tOP_EQUALS\tVAR_BOOLEAN\tSEMICOLON\tvars\n\t\t\t|\t\tepsilon\n\t\n\tfunction\t:\tFUNCTION\ttype\tID\t\tOP_LPAREN\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tFUNCTION\tVOID\tID\t\tOP_LPAREN\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tepsilon\n\t\n\tmain_function\t:\tMAIN\tOP_LPAREN\tOP_RPAREN\tbloque\t\n\t\n\ttype\t:\tINT\n\t\t\t|\tFLOAT\n\t\t\t|\tSTRING\n\t\t\t|\tBOOLEAN\n\t\t\t\n\t\n\tparameters\t:\ttype\t\tID\t\t\tparameters\n\t\t\t\t|\tCOMA\t\ttype\t\tID\t\t\t\tparameters\n\t\t\t\t|\tepsilon\n\t\n\tbloque\t:\tLCURLY_BRACKET\tbloque_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_primo\t:\tbloque_primo\tstatement \n\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tstatement\t:\tassigment\n\t\t\t\t|\tif\n\t\t\t\t|\tprinter\n\t\t\t\t|\tincrement\n\t\t\t\t|\tvars\n\t\t\t\t|\tfor\n\t\t\t\t|\treturn\n\t\t\t\t|\tfunction_call\n\t\t\t\t\n\t\n\tassigment\t:\tID\tOP_EQUALS\tsingle_expression\tSEMICOLON\n\n\t\n\tif\t:\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\n\t\t|\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\t\tELSE\tbloque\t\n\t\t\t\n\t\n\tprinter\t:\tPRINT\tOP_LPAREN\timpression\tOP_RPAREN\t SEMICOLON\n\n\t\n\timpression\t:\tmega_expression\n\t\t\t\t|\tmega_expression\t\tOP_PLUS\t\timpression\n\t\n\t\n\tincrement\t:\tID\tOP_PLUS_EQUALS \t\tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS_EQUALS\t \tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_PLUS\t\t\t\tOP_PLUS\t\t\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS\t\t\tOP_MINUS\t\t\tSEMICOLON\n\t\n\tfor\t:\tFOR\t\tOP_LPAREN\tassigment\tcondition_super_expression\tSEMICOLON\tincrement\tOP_RPAREN\tbloque\t\n\t\n\treturn\t:\tRETURN \tmega_expression \tSEMICOLON\n\t\n\tfunction_call :\tID\tOP_LPAREN\tfunction_call_prime\t\tOP_RPAREN\tSEMICOLON\n\t\n\tfunction_call_prime\t:\tID\t\tfunction_call_prime\n\t\t\t\t\t\t|\tCOMA\tID\t\t\t\t\t\tfunction_call_prime\n\t\t\t\t\t\t|\tepsilon\n\t\n\tcondition_mega_expression\t:\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tAND\t\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tOR\t\tcondition_super_expression\n\t\n\tcondition_super_expression\t:\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\t\n\tsingle_expression \t:\tsingle_term\n\t\t\t\t\t\t|\tsingle_term\t\tOP_PLUS\t\tsingle_expression\t\n\t\t\t\t\t\t|\tsingle_term\t\tOP_MINUS\tsingle_expression\t\t\t\t\n\t\n\tsingle_term\t:\tsingle_fact\n\t\t\t\t|\tsingle_fact\tOP_DIVISION\t\tsingle_term\t\n\t\t\t\t|\tsingle_fact\tOP_TIMES\t\tsingle_term\t\n\n\t\n\tsingle_fact\t:\tvar_cte\n\t\t\t\t|\tOP_LPAREN\t\tsingle_expression\t\tOP_RPAREN\t\n\t\n\tmega_expression\t:\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tAND\t\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tOR\t\tsuper_expression\n\t\n\tsuper_expression\t:\texpression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\n\t\n\texpression :\tterm\n\t\t\t\t|\tterm\tOP_PLUS\t\texpression\t\n\t\t\t\t|\tterm\tOP_MINUS\texpression\t\n\t\t\t\t\n\t\n\tterm\t:\tfact\n\t\t\t|\tfact\tOP_DIVISION\t\tterm\t\n\t\t\t|\tfact\tOP_TIMES\t\tterm\t\n\n\t\n\tfact\t:\tvar_cte\n\t\t\t|\tOP_LPAREN\t\tmega_expression\t\tOP_RPAREN\t\n\t\n\tvar_cte : \tID\n\t\t\t| \tVAR_INT\n\t\t\t|\tVAR_FLOAT\n\t\t\t|\tVAR_STRING\n\tepsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,30,],[0,-1,]),'ID':([2,6,7,8,9,10,20,21,22,23,24,25,41,42,43,44,46,47,52,53,54,55,56,57,60,62,63,64,65,66,67,68,69,70,71,76,81,82,83,86,87,88,89,96,108,113,115,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,144,145,146,147,150,152,153,154,155,156,157,158,159,161,181,183,192,194,198,200,],[3,14,15,16,17,-6,32,33,-11,-12,-13,-14,-84,-84,-84,-84,-84,58,-2,-3,-4,-5,72,-20,79,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,97,97,97,97,113,97,97,123,97,97,113,150,97,-40,97,97,97,97,97,97,97,97,97,97,97,97,-29,97,97,97,97,-35,-36,-37,-38,113,97,97,97,97,97,97,97,97,97,-41,-30,-32,197,-31,-39,]),'LCURLY_BRACKET':([3,38,59,61,151,195,199,],[4,46,46,46,46,46,46,]),'INT':([4,10,12,39,40,41,42,43,44,46,49,52,53,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,79,124,138,144,145,146,147,181,183,192,198,200,],[6,-6,22,22,22,6,6,6,6,-84,22,-2,-3,-4,-5,6,-20,22,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,22,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'FLOAT':([4,10,12,39,40,41,42,43,44,46,49,52,53,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,79,124,138,144,145,146,147,181,183,192,198,200,],[7,-6,23,23,23,7,7,7,7,-84,23,-2,-3,-4,-5,7,-20,23,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,23,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'STRING':([4,10,12,39,40,41,42,43,44,46,49,52,53,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,79,124,138,144,145,146,147,181,183,192,198,200,],[8,-6,24,24,24,8,8,8,8,-84,24,-2,-3,-4,-5,8,-20,24,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,24,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'BOOLEAN':([4,10,12,39,40,41,42,43,44,46,49,52,53,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,79,124,138,144,145,146,147,181,183,192,198,200,],[9,-6,25,25,25,9,9,9,9,-84,25,-2,-3,-4,-5,9,-20,25,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,25,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'FUNCTION':([4,5,10,41,42,43,44,52,53,54,55,62,78,80,],[-84,12,-6,-84,-84,-84,-84,-2,-3,-4,-5,-18,12,12,]),'MAIN':([4,5,10,11,13,41,42,43,44,52,53,54,55,62,78,80,101,103,],[-84,-84,-6,19,-9,-84,-84,-84,-84,-2,-3,-4,-5,-18,-84,-84,-7,-8,]),'RCURLY_BRACKET':([10,18,41,42,43,44,45,46,52,53,54,55,56,57,62,63,64,65,66,67,68,69,70,71,124,138,144,145,146,147,181,183,192,198,200,],[-6,30,-84,-84,-84,-84,-10,-84,-2,-3,-4,-5,62,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'IF':([10,41,42,43,44,46,52,53,54,55,56,57,62,63,64,65,66,67,68,69,70,71,124,138,144,145,146,147,181,183,192,198,200,],[-6,-84,-84,-84,-84,-84,-2,-3,-4,-5,73,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'PRINT':([10,41,42,43,44,46,52,53,54,55,56,57,62,63,64,65,66,67,68,69,70,71,124,138,144,145,146,147,181,183,192,198,200,],[-6,-84,-84,-84,-84,-84,-2,-3,-4,-5,74,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'FOR':([10,41,42,43,44,46,52,53,54,55,56,57,62,63,64,65,66,67,68,69,70,71,124,138,144,145,146,147,181,183,192,198,200,],[-6,-84,-84,-84,-84,-84,-2,-3,-4,-5,75,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'RETURN':([10,41,42,43,44,46,52,53,54,55,56,57,62,63,64,65,66,67,68,69,70,71,124,138,144,145,146,147,181,183,192,198,200,],[-6,-84,-84,-84,-84,-84,-2,-3,-4,-5,76,-20,-18,-19,-21,-22,-23,-24,-25,-26,-27,-28,-40,-29,-35,-36,-37,-38,-41,-30,-32,-31,-39,]),'VOID':([12,],[21,]),'OP_EQUALS':([14,15,16,17,72,123,],[26,27,28,29,81,81,]),'OP_LPAREN':([19,32,33,72,73,74,75,76,81,82,83,87,88,96,108,122,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,152,153,154,155,156,157,158,159,161,],[31,39,40,86,87,88,89,96,108,108,108,96,96,96,108,96,96,96,96,96,96,96,96,96,96,96,96,96,-29,108,108,108,108,96,96,96,96,96,96,96,96,96,]),'VAR_INT':([26,76,81,82,83,87,88,96,108,122,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,152,153,154,155,156,157,158,159,161,],[34,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-29,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'VAR_FLOAT':([27,76,81,82,83,87,88,96,108,122,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,152,153,154,155,156,157,158,159,161,],[35,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-29,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'VAR_STRING':([28,76,81,82,83,87,88,96,108,122,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,152,153,154,155,156,157,158,159,161,],[36,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-29,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'VAR_BOOLEAN':([29,],[37,]),'OP_RPAREN':([31,39,40,48,50,51,58,77,79,86,91,92,93,94,95,97,98,99,100,102,105,106,107,113,114,116,117,118,120,121,137,143,144,145,146,147,148,150,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,184,185,186,187,188,189,190,191,193,196,],[38,-84,-84,59,-17,61,-84,-15,-84,-84,-62,-65,-72,-75,-78,-80,-81,-82,-83,-16,-54,-57,-60,-84,149,-44,151,-45,160,-33,175,180,-35,-36,-37,-38,-42,-84,-63,-64,-66,-67,-68,-69,-70,-71,-73,-74,-76,-77,-79,-55,-56,-58,-59,-61,-43,-46,-47,-48,-49,-50,-51,-52,-53,-34,199,]),'SEMICOLON':([34,35,36,37,90,91,92,93,94,95,97,98,99,100,104,105,106,107,109,110,111,112,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,186,187,188,189,190,191,],[41,42,43,44,124,-62,-65,-72,-75,-78,-80,-81,-82,-83,138,-54,-57,-60,144,145,146,147,181,192,194,-63,-64,-66,-67,-68,-69,-70,-71,-73,-74,-76,-77,-79,-55,-56,-58,-59,-61,-48,-49,-50,-51,-52,-53,]),'COMA':([39,40,58,79,86,113,150,],[49,49,49,49,115,115,115,]),'ELSE':([62,183,],[-18,195,]),'OP_PLUS_EQUALS':([72,197,],[82,82,]),'OP_MINUS_EQUALS':([72,197,],[83,83,]),'OP_PLUS':([72,84,91,92,93,94,95,97,98,99,100,105,106,107,121,163,164,165,166,167,168,169,170,171,172,173,174,175,178,179,180,197,],[84,111,-62,-65,133,-75,-78,-80,-81,-82,-83,139,-57,-60,161,-63,-64,-66,-67,-68,-69,-70,-71,-73,-74,-76,-77,-79,-58,-59,-61,84,]),'OP_MINUS':([72,85,93,94,95,97,98,99,100,105,106,107,173,174,175,178,179,180,197,],[85,112,134,-75,-78,-80,-81,-82,-83,140,-57,-60,-76,-77,-79,-58,-59,-61,85,]),'AND':([91,92,93,94,95,97,98,99,100,118,165,166,167,168,169,170,171,172,173,174,175,186,187,188,189,190,191,],[125,-65,-72,-75,-78,-80,-81,-82,-83,152,-66,-67,-68,-69,-70,-71,-73,-74,-76,-77,-79,-48,-49,-50,-51,-52,-53,]),'OR':([91,92,93,94,95,97,98,99,100,118,165,166,167,168,169,170,171,172,173,174,175,186,187,188,189,190,191,],[126,-65,-72,-75,-78,-80,-81,-82,-83,153,-66,-67,-68,-69,-70,-71,-73,-74,-76,-77,-79,-48,-49,-50,-51,-52,-53,]),'OP_GREATER_THAN':([92,93,94,95,97,98,99,100,119,171,172,173,174,175,],[127,-72,-75,-78,-80,-81,-82,-83,154,-73,-74,-76,-77,-79,]),'OP_LESS_THAN':([92,93,94,95,97,98,99,100,119,171,172,173,174,175,],[128,-72,-75,-78,-80,-81,-82,-83,155,-73,-74,-76,-77,-79,]),'OP_GREATER_EQUALS_THAN':([92,93,94,95,97,98,99,100,119,171,172,173,174,175,],[129,-72,-75,-78,-80,-81,-82,-83,156,-73,-74,-76,-77,-79,]),'OP_LESS_EQUALS_THAN':([92,93,94,95,97,98,99,100,119,171,172,173,174,175,],[130,-72,-75,-78,-80,-81,-82,-83,157,-73,-74,-76,-77,-79,]),'OP_EQUALS_TWO':([92,93,94,95,97,98,99,100,119,171,172,173,174,175,],[131,-72,-75,-78,-80,-81,-82,-83,158,-73,-74,-76,-77,-79,]),'OP_NOT_EQUALS':([92,93,94,95,97,98,99,100,119,171,172,173,174,175,],[132,-72,-75,-78,-80,-81,-82,-83,159,-73,-74,-76,-77,-79,]),'OP_DIVISION':([94,95,97,98,99,100,106,107,175,180,],[135,-78,-80,-81,-82,-83,141,-60,-79,-61,]),'OP_TIMES':([94,95,97,98,99,100,106,107,175,180,],[136,-78,-80,-81,-82,-83,142,-60,-79,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,41,42,43,44,56,],[5,52,53,54,55,68,]),'epsilon':([4,5,39,40,41,42,43,44,46,56,58,78,79,80,86,113,150,],[10,13,50,50,10,10,10,10,57,10,50,13,50,13,116,116,116,]),'function':([5,78,80,],[11,101,103,]),'main_function':([11,],[18,]),'type':([12,39,40,49,58,79,],[20,47,47,60,47,47,]),'bloque':([38,59,61,151,195,199,],[45,78,80,183,198,200,]),'parameters':([39,40,58,79,],[48,51,77,102,]),'bloque_primo':([46,],[56,]),'statement':([56,],[63,]),'assigment':([56,89,],[64,122,]),'if':([56,],[65,]),'printer':([56,],[66,]),'increment':([56,194,],[67,196,]),'for':([56,],[69,]),'return':([56,],[70,]),'function_call':([56,],[71,]),'mega_expression':([76,88,96,161,],[90,121,137,121,]),'super_expression':([76,88,96,125,126,161,],[91,91,91,163,164,91,]),'expression':([76,87,88,96,122,125,126,127,128,129,130,131,132,133,134,152,153,154,155,156,157,158,159,161,],[92,119,92,92,119,92,92,165,166,167,168,169,170,171,172,119,119,186,187,188,189,190,191,92,]),'term':([76,87,88,96,122,125,126,127,128,129,130,131,132,133,134,135,136,152,153,154,155,156,157,158,159,161,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,173,174,93,93,93,93,93,93,93,93,93,]),'fact':([76,87,88,96,122,125,126,127,128,129,130,131,132,133,134,135,136,152,153,154,155,156,157,158,159,161,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'var_cte':([76,81,82,83,87,88,96,108,122,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,152,153,154,155,156,157,158,159,161,],[95,107,107,107,95,95,95,107,95,95,95,95,95,95,95,95,95,95,95,95,95,107,107,107,107,95,95,95,95,95,95,95,95,95,]),'single_expression':([81,82,83,108,139,140,],[104,109,110,143,176,177,]),'single_term':([81,82,83,108,139,140,141,142,],[105,105,105,105,105,105,178,179,]),'single_fact':([81,82,83,108,139,140,141,142,],[106,106,106,106,106,106,106,106,]),'function_call_prime':([86,113,150,],[114,148,182,]),'condition_mega_expression':([87,],[117,]),'condition_super_expression':([87,122,152,153,],[118,162,184,185,]),'impression':([88,161,],[120,193,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET','program',7,'p_program','vcparser.py',9),
  ('vars -> INT ID OP_EQUALS VAR_INT SEMICOLON vars','vars',6,'p_vars','vcparser.py',16),
  ('vars -> FLOAT ID OP_EQUALS VAR_FLOAT SEMICOLON vars','vars',6,'p_vars','vcparser.py',17),
  ('vars -> STRING ID OP_EQUALS VAR_STRING SEMICOLON vars','vars',6,'p_vars','vcparser.py',18),
  ('vars -> BOOLEAN ID OP_EQUALS VAR_BOOLEAN SEMICOLON vars','vars',6,'p_vars','vcparser.py',19),
  ('vars -> epsilon','vars',1,'p_vars','vcparser.py',20),
  ('function -> FUNCTION type ID OP_LPAREN parameters OP_RPAREN bloque function','function',8,'p_function','vcparser.py',24),
  ('function -> FUNCTION VOID ID OP_LPAREN parameters OP_RPAREN bloque function','function',8,'p_function','vcparser.py',25),
  ('function -> epsilon','function',1,'p_function','vcparser.py',26),
  ('main_function -> MAIN OP_LPAREN OP_RPAREN bloque','main_function',4,'p_main_function','vcparser.py',30),
  ('type -> INT','type',1,'p_type','vcparser.py',34),
  ('type -> FLOAT','type',1,'p_type','vcparser.py',35),
  ('type -> STRING','type',1,'p_type','vcparser.py',36),
  ('type -> BOOLEAN','type',1,'p_type','vcparser.py',37),
  ('parameters -> type ID parameters','parameters',3,'p_parameters','vcparser.py',42),
  ('parameters -> COMA type ID parameters','parameters',4,'p_parameters','vcparser.py',43),
  ('parameters -> epsilon','parameters',1,'p_parameters','vcparser.py',44),
  ('bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET','bloque',3,'p_bloque','vcparser.py',50),
  ('bloque_primo -> bloque_primo statement','bloque_primo',2,'p_bloque_primo','vcparser.py',56),
  ('bloque_primo -> epsilon','bloque_primo',1,'p_bloque_primo','vcparser.py',57),
  ('statement -> assigment','statement',1,'p_statement','vcparser.py',62),
  ('statement -> if','statement',1,'p_statement','vcparser.py',63),
  ('statement -> printer','statement',1,'p_statement','vcparser.py',64),
  ('statement -> increment','statement',1,'p_statement','vcparser.py',65),
  ('statement -> vars','statement',1,'p_statement','vcparser.py',66),
  ('statement -> for','statement',1,'p_statement','vcparser.py',67),
  ('statement -> return','statement',1,'p_statement','vcparser.py',68),
  ('statement -> function_call','statement',1,'p_statement','vcparser.py',69),
  ('assigment -> ID OP_EQUALS single_expression SEMICOLON','assigment',4,'p_assigment','vcparser.py',75),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque','if',5,'p_if','vcparser.py',80),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque','if',7,'p_if','vcparser.py',81),
  ('printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON','printer',5,'p_printer','vcparser.py',88),
  ('impression -> mega_expression','impression',1,'p_impression','vcparser.py',93),
  ('impression -> mega_expression OP_PLUS impression','impression',3,'p_impression','vcparser.py',94),
  ('increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',99),
  ('increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',100),
  ('increment -> ID OP_PLUS OP_PLUS SEMICOLON','increment',4,'p_increment','vcparser.py',101),
  ('increment -> ID OP_MINUS OP_MINUS SEMICOLON','increment',4,'p_increment','vcparser.py',102),
  ('for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque','for',8,'p_for','vcparser.py',108),
  ('return -> RETURN mega_expression SEMICOLON','return',3,'p_return','vcparser.py',113),
  ('function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON','function_call',5,'p_function_call','vcparser.py',117),
  ('function_call_prime -> ID function_call_prime','function_call_prime',2,'p_function_call_prime','vcparser.py',121),
  ('function_call_prime -> COMA ID function_call_prime','function_call_prime',3,'p_function_call_prime','vcparser.py',122),
  ('function_call_prime -> epsilon','function_call_prime',1,'p_function_call_prime','vcparser.py',123),
  ('condition_mega_expression -> condition_super_expression','condition_mega_expression',1,'p_condition_mega_expression','vcparser.py',127),
  ('condition_mega_expression -> condition_super_expression AND condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',128),
  ('condition_mega_expression -> condition_super_expression OR condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',129),
  ('condition_super_expression -> expression OP_GREATER_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',133),
  ('condition_super_expression -> expression OP_LESS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',134),
  ('condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',135),
  ('condition_super_expression -> expression OP_LESS_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',136),
  ('condition_super_expression -> expression OP_EQUALS_TWO expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',137),
  ('condition_super_expression -> expression OP_NOT_EQUALS expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',138),
  ('single_expression -> single_term','single_expression',1,'p_single_expression','vcparser.py',143),
  ('single_expression -> single_term OP_PLUS single_expression','single_expression',3,'p_single_expression','vcparser.py',144),
  ('single_expression -> single_term OP_MINUS single_expression','single_expression',3,'p_single_expression','vcparser.py',145),
  ('single_term -> single_fact','single_term',1,'p_single_term','vcparser.py',149),
  ('single_term -> single_fact OP_DIVISION single_term','single_term',3,'p_single_term','vcparser.py',150),
  ('single_term -> single_fact OP_TIMES single_term','single_term',3,'p_single_term','vcparser.py',151),
  ('single_fact -> var_cte','single_fact',1,'p_single_fact','vcparser.py',156),
  ('single_fact -> OP_LPAREN single_expression OP_RPAREN','single_fact',3,'p_single_fact','vcparser.py',157),
  ('mega_expression -> super_expression','mega_expression',1,'p_mega_expression','vcparser.py',161),
  ('mega_expression -> super_expression AND super_expression','mega_expression',3,'p_mega_expression','vcparser.py',162),
  ('mega_expression -> super_expression OR super_expression','mega_expression',3,'p_mega_expression','vcparser.py',163),
  ('super_expression -> expression','super_expression',1,'p_super_expression','vcparser.py',168),
  ('super_expression -> expression OP_GREATER_THAN expression','super_expression',3,'p_super_expression','vcparser.py',169),
  ('super_expression -> expression OP_LESS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',170),
  ('super_expression -> expression OP_GREATER_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',171),
  ('super_expression -> expression OP_LESS_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',172),
  ('super_expression -> expression OP_EQUALS_TWO expression','super_expression',3,'p_super_expression','vcparser.py',173),
  ('super_expression -> expression OP_NOT_EQUALS expression','super_expression',3,'p_super_expression','vcparser.py',174),
  ('expression -> term','expression',1,'p_expression','vcparser.py',179),
  ('expression -> term OP_PLUS expression','expression',3,'p_expression','vcparser.py',180),
  ('expression -> term OP_MINUS expression','expression',3,'p_expression','vcparser.py',181),
  ('term -> fact','term',1,'p_term','vcparser.py',187),
  ('term -> fact OP_DIVISION term','term',3,'p_term','vcparser.py',188),
  ('term -> fact OP_TIMES term','term',3,'p_term','vcparser.py',189),
  ('fact -> var_cte','fact',1,'p_fact','vcparser.py',194),
  ('fact -> OP_LPAREN mega_expression OP_RPAREN','fact',3,'p_fact','vcparser.py',195),
  ('var_cte -> ID','var_cte',1,'p_var_cte','vcparser.py',199),
  ('var_cte -> VAR_INT','var_cte',1,'p_var_cte','vcparser.py',200),
  ('var_cte -> VAR_FLOAT','var_cte',1,'p_var_cte','vcparser.py',201),
  ('var_cte -> VAR_STRING','var_cte',1,'p_var_cte','vcparser.py',202),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','vcparser.py',206),
]
