
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAM ID VAR_INT VAR_FLOAT VAR_STRING VAR_BOOLEAN FLOAT INT STRING BOOLEAN CARET COMA OP_PLUS OP_MINUS OP_TIMES OP_DIVISION OP_EQUALS_TWO OP_NOT_EQUALS OP_LPAREN OP_RPAREN OP_EQUALS OP_TWO_POINTS OP_LESS_THAN OP_LESS_EQUALS_THAN OP_GREATER_THAN OP_GREATER_EQUALS_THAN AND OR PRINT QUOT_MARK SEMICOLON LCURLY_BRACKET RCURLY_BRACKET VAR IF ELSE OP_PLUS_EQUALS OP_MINUS_EQUALS RETURN FUNCTION MAIN FOR VOID VECTOR POINT LINE SQUARE RECTANGLE TRIANGLE CIRCLE FIGURE POSSESS COLOR SIZE\n\tprogram\t\t:\tPROGRAM  ID  LCURLY_BRACKET  vars   function \tmain_function\t RCURLY_BRACKET\t\n\n\t\n\tvars\t:\ttype\tID\t\tvars_prime\t\tSEMICOLON\tvars\t\n\t\t\t|\tepsilon\n\t\n\tvars_prime\t:\tOP_EQUALS\t\tvar_cte\t\tvars_prime1\n\t\t\t\t|\tvars_prime1\n\t\t\t\t|\tepsilon\n\t\n\tvars_prime1\t:\tCOMA\t\t\tID\t\t\tvars_prime2\t\tvars_prime1\n\t\t\t\t|\tepsilon\n\t\n\tvars_prime2\t:\tOP_EQUALS\tvar_cte\t\t\n\t\t\t\t|\tepsilon\n\t\n\tfunction\t:\tFUNCTION\ttype\tID\t\tpushTo_FunctionDir\t\tOP_LPAREN\t\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tFUNCTION\tVOID\tID\t\tpushTo_FunctionDir\t\tOP_LPAREN\t\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tepsilon\n\t\n\tpushTo_FunctionDir\t:\tepsilon\n\t\n\tmain_function\t:\tMAIN\tpushTo_FunctionDir OP_LPAREN\tOP_RPAREN\tbloque\t\n\t\n\ttype\t:\tINT\n\t\t\t|\tFLOAT\n\t\t\t|\tSTRING\n\t\t\t|\tBOOLEAN\n\t\t\t\n\t\n\tparameters\t:\ttype\t\tID\t\t\tparameters\n\t\t\t\t|\tCOMA\t\ttype\t\tID\t\t\t\tparameters\n\t\t\t\t|\tepsilon\n\t\n\tbloque\t:\tLCURLY_BRACKET\tbloque_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_primo\t:\tbloque_primo\tstatement \n\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tstatement\t:\tassigment\n\t\t\t\t|\tif\n\t\t\t\t|\tprinter\n\t\t\t\t|\tincrement\n\t\t\t\t|\tfor\n\t\t\t\t|\treturn\n\t\t\t\t|\tfunction_call\n\t\t\t\t|\tfun_esp\n\t\t\t\t\n\t\n\tassigment\t:\tID\tOP_EQUALS\tsingle_expression\tSEMICOLON\n\n\t\n\tif\t:\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\n\t\t|\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\t\tELSE\tbloque\t\n\t\t\t\n\t\n\tprinter\t:\tPRINT\tOP_LPAREN\timpression\tOP_RPAREN\t SEMICOLON\n\n\t\n\timpression\t:\tmega_expression\n\t\t\t\t|\tmega_expression\t\tOP_PLUS\t\timpression\n\t\n\t\n\tincrement\t:\tID\tOP_PLUS_EQUALS \t\tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS_EQUALS\t \tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_PLUS\t\t\t\tOP_PLUS\t\t\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS\t\t\tOP_MINUS\t\t\tSEMICOLON\n\t\n\tfor\t:\tFOR\t\tOP_LPAREN\tassigment\tcondition_super_expression\tSEMICOLON\tincrement\tOP_RPAREN\tbloque\t\n\t\n\treturn\t:\tRETURN \tsingle_expression \tSEMICOLON\n\t\n\tfunction_call :\tID\tOP_LPAREN\tfunction_call_prime\t\tOP_RPAREN\tSEMICOLON\n\t\n\tfunction_call_prime\t:\tID\t\tfunction_call_prime\n\t\t\t\t\t\t|\tCOMA\tID\t\t\t\t\t\tfunction_call_prime\n\t\t\t\t\t\t|\tepsilon\n\t\n\tcondition_mega_expression\t:\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tAND\t\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tOR\t\tcondition_super_expression\n\t\n\tcondition_super_expression\t:\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\t\n\tsingle_expression \t:\tsingle_term\n\t\t\t\t\t\t|\tsingle_term\t\tOP_PLUS\t\tsingle_expression\t\n\t\t\t\t\t\t|\tsingle_term\t\tOP_MINUS\tsingle_expression\t\t\t\t\n\t\n\tsingle_term\t:\tsingle_fact\n\t\t\t\t|\tsingle_fact\tOP_DIVISION\t\tsingle_term\t\n\t\t\t\t|\tsingle_fact\tOP_TIMES\t\tsingle_term\t\n\n\t\n\tsingle_fact\t:\tvar_cte\n\t\t\t\t|\tOP_LPAREN\t\tsingle_expression\t\tOP_RPAREN\t\n\t\n\tmega_expression\t:\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tAND\t\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tOR\t\tsuper_expression\n\t\n\tsuper_expression\t:\texpression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\n\t\n\texpression :\tterm\n\t\t\t\t|\tterm\tOP_PLUS\t\texpression\t\n\t\t\t\t|\tterm\tOP_MINUS\texpression\t\n\t\t\t\t\n\t\n\tterm\t:\tfact\n\t\t\t|\tfact\tOP_DIVISION\t\tterm\t\n\t\t\t|\tfact\tOP_TIMES\t\tterm\t\n\n\t\n\tfact\t:\tvar_cte\n\t\t\t|\tOP_LPAREN\t\tmega_expression\t\tOP_RPAREN\t\n\t\n\tvar_cte : \tID\n\t\t\t| \tVAR_INT\n\t\t\t|\tVAR_FLOAT\n\t\t\t|\tVAR_STRING\n\t\n\tfun_esp\t\t:\tfigure_creation\n\t\n\tfigure_creation\t\t:\tFIGURE\tID\tOP_TWO_POINTS\tfigure\tPOSSESS\t\tbloque_figura\n\t\n\tfigure\t:\tPOINT\n\t\t\t|\tLINE\n\t\t\t|\tSQUARE\n\t\t\t|\tRECTANGLE\n\t\t\t|\tTRIANGLE\n\t\t\t|\tCIRCLE\n\t\n\tbloque_figura\t:\tLCURLY_BRACKET\tbloque_figura_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_figura_primo\t:\tbloque_figura_primo\t\tfigura_attr\n\t\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tfigura_attr\t:\tvector\n\t\t\t\t|\tCOLOR\tOP_TWO_POINTS\tID\tSEMICOLON\n\t\t\t\t|\tSIZE\tOP_TWO_POINTS\tsingle_expression\tSEMICOLON\n\t\n\tvector\t:\tVECTOR\t\tID\t\tOP_TWO_POINTS\t\tOP_LPAREN\tsingle_expression\tCOMA\tsingle_expression\tOP_RPAREN\tSEMICOLON\n\tepsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,25,],[0,-1,]),'ID':([2,6,8,9,10,11,18,19,21,24,44,52,53,58,59,62,64,65,66,67,68,69,70,71,72,73,78,79,80,85,86,87,90,91,92,93,98,108,110,112,123,125,126,127,128,129,132,133,134,135,136,139,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,177,180,193,203,208,210,214,215,220,221,222,229,231,],[3,15,-16,-17,-18,-19,28,29,32,36,32,-104,60,74,-25,83,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,32,-89,99,32,32,32,108,32,32,124,32,108,139,32,32,-45,32,32,32,32,-34,-40,-41,-42,-43,108,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-46,-35,-37,207,-90,-36,-44,-97,223,224,32,32,32,]),'LCURLY_BRACKET':([3,46,61,63,141,204,205,211,],[4,52,52,52,52,209,52,52,]),'INT':([4,13,30,47,48,55,60,83,],[8,8,8,8,8,8,8,8,]),'FLOAT':([4,13,30,47,48,55,60,83,],[9,9,9,9,9,9,9,9,]),'STRING':([4,13,30,47,48,55,60,83,],[10,10,10,10,10,10,10,10,]),'BOOLEAN':([4,13,30,47,48,55,60,83,],[11,11,11,11,11,11,11,11,]),'FUNCTION':([4,5,7,30,40,64,82,84,],[-104,13,-3,-104,-2,-23,13,13,]),'MAIN':([4,5,7,12,14,30,40,64,82,84,100,102,],[-104,-104,-3,17,-13,-104,-2,-23,-104,-104,-11,-12,]),'VOID':([13,],[19,]),'OP_EQUALS':([15,36,74,124,],[21,44,85,85,]),'COMA':([15,31,32,33,34,35,36,43,45,47,48,50,60,83,90,95,96,97,108,139,165,166,167,168,169,230,],[24,24,-85,-86,-87,-88,-104,24,-10,55,55,-9,55,55,110,-59,-62,-65,110,110,-60,-61,-63,-64,-66,231,]),'SEMICOLON':([15,20,22,23,31,32,33,34,35,36,41,42,43,45,49,50,94,95,96,97,103,104,105,106,107,116,117,118,138,154,164,165,166,167,168,169,179,183,184,185,186,187,188,189,190,191,192,224,225,233,],[-104,30,-5,-6,-104,-85,-86,-87,-88,-104,-4,-8,-104,-10,-7,-9,125,-59,-62,-65,132,133,134,135,136,-77,-80,-83,177,193,203,-60,-61,-63,-64,-66,-84,-53,-54,-55,-56,-57,-58,-78,-79,-81,-82,227,228,234,]),'RCURLY_BRACKET':([16,51,52,58,59,64,65,66,67,68,69,70,71,72,73,79,125,132,133,134,135,136,177,180,193,208,209,210,212,213,214,215,216,217,227,228,234,],[25,-15,-104,64,-25,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-89,-45,-34,-40,-41,-42,-43,-46,-35,-37,-90,-104,-36,215,-99,-44,-97,-98,-100,-101,-102,-103,]),'OP_LPAREN':([17,26,27,28,29,38,39,74,75,76,77,78,85,86,87,91,92,98,112,123,126,127,128,129,132,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,222,226,229,231,],[-104,37,-14,-104,-104,47,48,90,91,92,93,98,98,98,98,112,112,98,112,112,98,98,98,98,-34,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,98,229,98,98,]),'VAR_INT':([21,44,78,85,86,87,91,92,98,112,123,126,127,128,129,132,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,222,229,231,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-34,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'VAR_FLOAT':([21,44,78,85,86,87,91,92,98,112,123,126,127,128,129,132,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,222,229,231,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'VAR_STRING':([21,44,78,85,86,87,91,92,98,112,123,126,127,128,129,132,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,222,229,231,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'OP_DIVISION':([32,33,34,35,96,97,117,118,169,179,],[-85,-86,-87,-88,128,-65,152,-83,-66,-84,]),'OP_TIMES':([32,33,34,35,96,97,117,118,169,179,],[-85,-86,-87,-88,129,-65,153,-83,-66,-84,]),'OP_PLUS':([32,33,34,35,74,88,95,96,97,116,117,118,120,121,122,167,168,169,179,189,190,191,192,195,196,197,198,199,200,201,202,207,],[-85,-86,-87,-88,88,106,126,-62,-65,150,-80,-83,155,-67,-70,-63,-64,-66,-84,-78,-79,-81,-82,-68,-69,-71,-72,-73,-74,-75,-76,88,]),'OP_MINUS':([32,33,34,35,74,89,95,96,97,116,117,118,167,168,169,179,191,192,207,],[-85,-86,-87,-88,89,107,127,-62,-65,151,-80,-83,-63,-64,-66,-84,-81,-82,89,]),'OP_GREATER_THAN':([32,33,34,35,115,116,117,118,122,179,189,190,191,192,],[-85,-86,-87,-88,144,-77,-80,-83,158,-84,-78,-79,-81,-82,]),'OP_LESS_THAN':([32,33,34,35,115,116,117,118,122,179,189,190,191,192,],[-85,-86,-87,-88,145,-77,-80,-83,159,-84,-78,-79,-81,-82,]),'OP_GREATER_EQUALS_THAN':([32,33,34,35,115,116,117,118,122,179,189,190,191,192,],[-85,-86,-87,-88,146,-77,-80,-83,160,-84,-78,-79,-81,-82,]),'OP_LESS_EQUALS_THAN':([32,33,34,35,115,116,117,118,122,179,189,190,191,192,],[-85,-86,-87,-88,147,-77,-80,-83,161,-84,-78,-79,-81,-82,]),'OP_EQUALS_TWO':([32,33,34,35,115,116,117,118,122,179,189,190,191,192,],[-85,-86,-87,-88,148,-77,-80,-83,162,-84,-78,-79,-81,-82,]),'OP_NOT_EQUALS':([32,33,34,35,115,116,117,118,122,179,189,190,191,192,],[-85,-86,-87,-88,149,-77,-80,-83,163,-84,-78,-79,-81,-82,]),'AND':([32,33,34,35,114,116,117,118,121,122,179,183,184,185,186,187,188,189,190,191,192,197,198,199,200,201,202,],[-85,-86,-87,-88,142,-77,-80,-83,156,-70,-84,-53,-54,-55,-56,-57,-58,-78,-79,-81,-82,-71,-72,-73,-74,-75,-76,]),'OR':([32,33,34,35,114,116,117,118,121,122,179,183,184,185,186,187,188,189,190,191,192,197,198,199,200,201,202,],[-85,-86,-87,-88,143,-77,-80,-83,157,-70,-84,-53,-54,-55,-56,-57,-58,-78,-79,-81,-82,-71,-72,-73,-74,-75,-76,]),'OP_RPAREN':([32,33,34,35,37,47,48,54,56,57,60,81,83,90,95,96,97,101,108,109,111,113,114,116,117,118,119,120,121,122,130,133,134,135,136,137,139,140,165,166,167,168,169,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,206,232,],[-85,-86,-87,-88,46,-104,-104,61,-22,63,-104,-20,-104,-104,-59,-62,-65,-21,-104,138,-49,141,-50,-77,-80,-83,154,-38,-67,-70,169,-40,-41,-42,-43,-47,-104,179,-60,-61,-63,-64,-66,-48,-84,-51,-52,-53,-54,-55,-56,-57,-58,-78,-79,-81,-82,-39,-68,-69,-71,-72,-73,-74,-75,-76,211,233,]),'IF':([52,58,59,64,65,66,67,68,69,70,71,72,73,79,125,132,133,134,135,136,177,180,193,208,210,214,215,],[-104,75,-25,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-89,-45,-34,-40,-41,-42,-43,-46,-35,-37,-90,-36,-44,-97,]),'PRINT':([52,58,59,64,65,66,67,68,69,70,71,72,73,79,125,132,133,134,135,136,177,180,193,208,210,214,215,],[-104,76,-25,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-89,-45,-34,-40,-41,-42,-43,-46,-35,-37,-90,-36,-44,-97,]),'FOR':([52,58,59,64,65,66,67,68,69,70,71,72,73,79,125,132,133,134,135,136,177,180,193,208,210,214,215,],[-104,77,-25,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-89,-45,-34,-40,-41,-42,-43,-46,-35,-37,-90,-36,-44,-97,]),'RETURN':([52,58,59,64,65,66,67,68,69,70,71,72,73,79,125,132,133,134,135,136,177,180,193,208,210,214,215,],[-104,78,-25,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-89,-45,-34,-40,-41,-42,-43,-46,-35,-37,-90,-36,-44,-97,]),'FIGURE':([52,58,59,64,65,66,67,68,69,70,71,72,73,79,125,132,133,134,135,136,177,180,193,208,210,214,215,],[-104,80,-25,-23,-24,-26,-27,-28,-29,-30,-31,-32,-33,-89,-45,-34,-40,-41,-42,-43,-46,-35,-37,-90,-36,-44,-97,]),'ELSE':([64,180,],[-23,205,]),'OP_PLUS_EQUALS':([74,207,],[86,86,]),'OP_MINUS_EQUALS':([74,207,],[87,87,]),'OP_TWO_POINTS':([99,218,219,223,],[131,221,222,226,]),'POINT':([131,],[171,]),'LINE':([131,],[172,]),'SQUARE':([131,],[173,]),'RECTANGLE':([131,],[174,]),'TRIANGLE':([131,],[175,]),'CIRCLE':([131,],[176,]),'POSSESS':([170,171,172,173,174,175,176,],[204,-91,-92,-93,-94,-95,-96,]),'COLOR':([209,212,213,216,217,227,228,234,],[-104,218,-99,-98,-100,-101,-102,-103,]),'SIZE':([209,212,213,216,217,227,228,234,],[-104,219,-99,-98,-100,-101,-102,-103,]),'VECTOR':([209,212,213,216,217,227,228,234,],[-104,220,-99,-98,-100,-101,-102,-103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,30,],[5,40,]),'type':([4,13,30,47,48,55,60,83,],[6,18,6,53,53,62,53,53,]),'epsilon':([4,5,15,17,28,29,30,31,36,43,47,48,52,60,82,83,84,90,108,139,209,],[7,14,23,27,27,27,7,42,45,42,56,56,59,56,14,56,14,111,111,111,213,]),'function':([5,82,84,],[12,100,102,]),'main_function':([12,],[16,]),'vars_prime':([15,],[20,]),'vars_prime1':([15,31,43,],[22,41,49,]),'pushTo_FunctionDir':([17,28,29,],[26,38,39,]),'var_cte':([21,44,78,85,86,87,91,92,98,112,123,126,127,128,129,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,222,229,231,],[31,50,97,97,97,97,118,118,97,118,118,97,97,97,97,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,97,97,97,]),'vars_prime2':([36,],[43,]),'bloque':([46,61,63,141,205,211,],[51,82,84,180,210,214,]),'parameters':([47,48,60,83,],[54,57,81,101,]),'bloque_primo':([52,],[58,]),'statement':([58,],[65,]),'assigment':([58,93,],[66,123,]),'if':([58,],[67,]),'printer':([58,],[68,]),'increment':([58,203,],[69,206,]),'for':([58,],[70,]),'return':([58,],[71,]),'function_call':([58,],[72,]),'fun_esp':([58,],[73,]),'figure_creation':([58,],[79,]),'single_expression':([78,85,86,87,98,126,127,222,229,231,],[94,103,104,105,130,165,166,225,230,232,]),'single_term':([78,85,86,87,98,126,127,128,129,222,229,231,],[95,95,95,95,95,95,95,167,168,95,95,95,]),'single_fact':([78,85,86,87,98,126,127,128,129,222,229,231,],[96,96,96,96,96,96,96,96,96,96,96,96,]),'function_call_prime':([90,108,139,],[109,137,178,]),'condition_mega_expression':([91,],[113,]),'condition_super_expression':([91,123,142,143,],[114,164,181,182,]),'expression':([91,92,112,123,142,143,144,145,146,147,148,149,150,151,155,156,157,158,159,160,161,162,163,],[115,122,122,115,115,115,183,184,185,186,187,188,189,190,122,122,122,197,198,199,200,201,202,]),'term':([91,92,112,123,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,191,192,116,116,116,116,116,116,116,116,116,]),'fact':([91,92,112,123,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'impression':([92,155,],[119,194,]),'mega_expression':([92,112,155,],[120,140,120,]),'super_expression':([92,112,155,156,157,],[121,121,121,195,196,]),'figure':([131,],[170,]),'bloque_figura':([204,],[208,]),'bloque_figura_primo':([209,],[212,]),'figura_attr':([212,],[216,]),'vector':([212,],[217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET','program',7,'p_program','vcparser.py',10),
  ('vars -> type ID vars_prime SEMICOLON vars','vars',5,'p_vars','vcparser.py',17),
  ('vars -> epsilon','vars',1,'p_vars','vcparser.py',18),
  ('vars_prime -> OP_EQUALS var_cte vars_prime1','vars_prime',3,'p_vars_prime','vcparser.py',22),
  ('vars_prime -> vars_prime1','vars_prime',1,'p_vars_prime','vcparser.py',23),
  ('vars_prime -> epsilon','vars_prime',1,'p_vars_prime','vcparser.py',24),
  ('vars_prime1 -> COMA ID vars_prime2 vars_prime1','vars_prime1',4,'p_vars_prime1','vcparser.py',28),
  ('vars_prime1 -> epsilon','vars_prime1',1,'p_vars_prime1','vcparser.py',29),
  ('vars_prime2 -> OP_EQUALS var_cte','vars_prime2',2,'p_vars_prime2','vcparser.py',33),
  ('vars_prime2 -> epsilon','vars_prime2',1,'p_vars_prime2','vcparser.py',34),
  ('function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN bloque function','function',9,'p_function','vcparser.py',40),
  ('function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN bloque function','function',9,'p_function','vcparser.py',41),
  ('function -> epsilon','function',1,'p_function','vcparser.py',42),
  ('pushTo_FunctionDir -> epsilon','pushTo_FunctionDir',1,'p_pushTo_FunctionDir','vcparser.py',46),
  ('main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN bloque','main_function',5,'p_main_function','vcparser.py',51),
  ('type -> INT','type',1,'p_type','vcparser.py',55),
  ('type -> FLOAT','type',1,'p_type','vcparser.py',56),
  ('type -> STRING','type',1,'p_type','vcparser.py',57),
  ('type -> BOOLEAN','type',1,'p_type','vcparser.py',58),
  ('parameters -> type ID parameters','parameters',3,'p_parameters','vcparser.py',63),
  ('parameters -> COMA type ID parameters','parameters',4,'p_parameters','vcparser.py',64),
  ('parameters -> epsilon','parameters',1,'p_parameters','vcparser.py',65),
  ('bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET','bloque',3,'p_bloque','vcparser.py',71),
  ('bloque_primo -> bloque_primo statement','bloque_primo',2,'p_bloque_primo','vcparser.py',77),
  ('bloque_primo -> epsilon','bloque_primo',1,'p_bloque_primo','vcparser.py',78),
  ('statement -> assigment','statement',1,'p_statement','vcparser.py',83),
  ('statement -> if','statement',1,'p_statement','vcparser.py',84),
  ('statement -> printer','statement',1,'p_statement','vcparser.py',85),
  ('statement -> increment','statement',1,'p_statement','vcparser.py',86),
  ('statement -> for','statement',1,'p_statement','vcparser.py',87),
  ('statement -> return','statement',1,'p_statement','vcparser.py',88),
  ('statement -> function_call','statement',1,'p_statement','vcparser.py',89),
  ('statement -> fun_esp','statement',1,'p_statement','vcparser.py',90),
  ('assigment -> ID OP_EQUALS single_expression SEMICOLON','assigment',4,'p_assigment','vcparser.py',96),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque','if',5,'p_if','vcparser.py',101),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque','if',7,'p_if','vcparser.py',102),
  ('printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON','printer',5,'p_printer','vcparser.py',109),
  ('impression -> mega_expression','impression',1,'p_impression','vcparser.py',114),
  ('impression -> mega_expression OP_PLUS impression','impression',3,'p_impression','vcparser.py',115),
  ('increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',120),
  ('increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',121),
  ('increment -> ID OP_PLUS OP_PLUS SEMICOLON','increment',4,'p_increment','vcparser.py',122),
  ('increment -> ID OP_MINUS OP_MINUS SEMICOLON','increment',4,'p_increment','vcparser.py',123),
  ('for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque','for',8,'p_for','vcparser.py',128),
  ('return -> RETURN single_expression SEMICOLON','return',3,'p_return','vcparser.py',133),
  ('function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON','function_call',5,'p_function_call','vcparser.py',137),
  ('function_call_prime -> ID function_call_prime','function_call_prime',2,'p_function_call_prime','vcparser.py',141),
  ('function_call_prime -> COMA ID function_call_prime','function_call_prime',3,'p_function_call_prime','vcparser.py',142),
  ('function_call_prime -> epsilon','function_call_prime',1,'p_function_call_prime','vcparser.py',143),
  ('condition_mega_expression -> condition_super_expression','condition_mega_expression',1,'p_condition_mega_expression','vcparser.py',147),
  ('condition_mega_expression -> condition_super_expression AND condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',148),
  ('condition_mega_expression -> condition_super_expression OR condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',149),
  ('condition_super_expression -> expression OP_GREATER_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',153),
  ('condition_super_expression -> expression OP_LESS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',154),
  ('condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',155),
  ('condition_super_expression -> expression OP_LESS_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',156),
  ('condition_super_expression -> expression OP_EQUALS_TWO expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',157),
  ('condition_super_expression -> expression OP_NOT_EQUALS expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',158),
  ('single_expression -> single_term','single_expression',1,'p_single_expression','vcparser.py',163),
  ('single_expression -> single_term OP_PLUS single_expression','single_expression',3,'p_single_expression','vcparser.py',164),
  ('single_expression -> single_term OP_MINUS single_expression','single_expression',3,'p_single_expression','vcparser.py',165),
  ('single_term -> single_fact','single_term',1,'p_single_term','vcparser.py',169),
  ('single_term -> single_fact OP_DIVISION single_term','single_term',3,'p_single_term','vcparser.py',170),
  ('single_term -> single_fact OP_TIMES single_term','single_term',3,'p_single_term','vcparser.py',171),
  ('single_fact -> var_cte','single_fact',1,'p_single_fact','vcparser.py',176),
  ('single_fact -> OP_LPAREN single_expression OP_RPAREN','single_fact',3,'p_single_fact','vcparser.py',177),
  ('mega_expression -> super_expression','mega_expression',1,'p_mega_expression','vcparser.py',181),
  ('mega_expression -> super_expression AND super_expression','mega_expression',3,'p_mega_expression','vcparser.py',182),
  ('mega_expression -> super_expression OR super_expression','mega_expression',3,'p_mega_expression','vcparser.py',183),
  ('super_expression -> expression','super_expression',1,'p_super_expression','vcparser.py',188),
  ('super_expression -> expression OP_GREATER_THAN expression','super_expression',3,'p_super_expression','vcparser.py',189),
  ('super_expression -> expression OP_LESS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',190),
  ('super_expression -> expression OP_GREATER_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',191),
  ('super_expression -> expression OP_LESS_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',192),
  ('super_expression -> expression OP_EQUALS_TWO expression','super_expression',3,'p_super_expression','vcparser.py',193),
  ('super_expression -> expression OP_NOT_EQUALS expression','super_expression',3,'p_super_expression','vcparser.py',194),
  ('expression -> term','expression',1,'p_expression','vcparser.py',199),
  ('expression -> term OP_PLUS expression','expression',3,'p_expression','vcparser.py',200),
  ('expression -> term OP_MINUS expression','expression',3,'p_expression','vcparser.py',201),
  ('term -> fact','term',1,'p_term','vcparser.py',207),
  ('term -> fact OP_DIVISION term','term',3,'p_term','vcparser.py',208),
  ('term -> fact OP_TIMES term','term',3,'p_term','vcparser.py',209),
  ('fact -> var_cte','fact',1,'p_fact','vcparser.py',214),
  ('fact -> OP_LPAREN mega_expression OP_RPAREN','fact',3,'p_fact','vcparser.py',215),
  ('var_cte -> ID','var_cte',1,'p_var_cte','vcparser.py',219),
  ('var_cte -> VAR_INT','var_cte',1,'p_var_cte','vcparser.py',220),
  ('var_cte -> VAR_FLOAT','var_cte',1,'p_var_cte','vcparser.py',221),
  ('var_cte -> VAR_STRING','var_cte',1,'p_var_cte','vcparser.py',222),
  ('fun_esp -> figure_creation','fun_esp',1,'p_fun_esp','vcparser.py',226),
  ('figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura','figure_creation',6,'p_figure_creation','vcparser.py',230),
  ('figure -> POINT','figure',1,'p_figure','vcparser.py',234),
  ('figure -> LINE','figure',1,'p_figure','vcparser.py',235),
  ('figure -> SQUARE','figure',1,'p_figure','vcparser.py',236),
  ('figure -> RECTANGLE','figure',1,'p_figure','vcparser.py',237),
  ('figure -> TRIANGLE','figure',1,'p_figure','vcparser.py',238),
  ('figure -> CIRCLE','figure',1,'p_figure','vcparser.py',239),
  ('bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET','bloque_figura',3,'p_bloque_figura','vcparser.py',243),
  ('bloque_figura_primo -> bloque_figura_primo figura_attr','bloque_figura_primo',2,'p_bloque_figura_primo','vcparser.py',249),
  ('bloque_figura_primo -> epsilon','bloque_figura_primo',1,'p_bloque_figura_primo','vcparser.py',250),
  ('figura_attr -> vector','figura_attr',1,'p_figura_attr','vcparser.py',255),
  ('figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON','figura_attr',4,'p_figura_attr','vcparser.py',256),
  ('figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON','figura_attr',4,'p_figura_attr','vcparser.py',257),
  ('vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON','vector',9,'p_vector','vcparser.py',261),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','vcparser.py',264),
]
