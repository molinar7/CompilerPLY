
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAM ID VAR_INT VAR_FLOAT VAR_STRING VAR_BOOLEAN FLOAT INT STRING BOOLEAN CARET COMA OP_PLUS OP_MINUS OP_TIMES OP_DIVISION OP_EQUALS_TWO OP_NOT_EQUALS OP_LPAREN OP_RPAREN OP_EQUALS OP_TWO_POINTS OP_LESS_THAN OP_LESS_EQUALS_THAN OP_GREATER_THAN OP_GREATER_EQUALS_THAN AND OR PRINT QUOT_MARK SEMICOLON LCURLY_BRACKET RCURLY_BRACKET VAR IF ELSE OP_PLUS_EQUALS OP_MINUS_EQUALS RETURN FUNCTION MAIN FOR VOID VECTOR POINT LINE SQUARE RECTANGLE TRIANGLE CIRCLE FIGURE POSSESS COLOR SIZE\n\tprogram\t\t:\tPROGRAM  ID  LCURLY_BRACKET  vars   function \tmain_function\t RCURLY_BRACKET\t\n\n\t\n\tvars\t:\ttype\tID\t\tvars_prime\t\tSEMICOLON\tvars\t\n\t\t\t|\tepsilon\n\t\n\tvars_prime\t:\tOP_EQUALS\t\tvar_cte\t\tvars_prime1\n\t\t\t\t|\tvars_prime1\n\t\t\t\t|\tepsilon\n\t\n\tvars_prime1\t:\tCOMA\t\t\tID\t\t\tvars_prime2\t\tvars_prime1\n\t\t\t\t|\tepsilon\n\t\n\tvars_prime2\t:\tOP_EQUALS\tvar_cte\t\t\n\t\t\t\t|\tepsilon\n\t\n\tfunction\t:\tFUNCTION\ttype\tID\t\tOP_LPAREN\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tFUNCTION\tVOID\tID\t\tOP_LPAREN\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tepsilon\n\t\n\tmain_function\t:\tMAIN\tOP_LPAREN\tOP_RPAREN\tbloque\t\n\t\n\ttype\t:\tINT\n\t\t\t|\tFLOAT\n\t\t\t|\tSTRING\n\t\t\t|\tBOOLEAN\n\t\t\t\n\t\n\tparameters\t:\ttype\t\tID\t\t\tparameters\n\t\t\t\t|\tCOMA\t\ttype\t\tID\t\t\t\tparameters\n\t\t\t\t|\tepsilon\n\t\n\tbloque\t:\tLCURLY_BRACKET\tbloque_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_primo\t:\tbloque_primo\tstatement \n\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tstatement\t:\tassigment\n\t\t\t\t|\tif\n\t\t\t\t|\tprinter\n\t\t\t\t|\tincrement\n\t\t\t\t|\tfor\n\t\t\t\t|\treturn\n\t\t\t\t|\tfunction_call\n\t\t\t\t|\tfun_esp\n\t\t\t\t\n\t\n\tassigment\t:\tID\tOP_EQUALS\tsingle_expression\tSEMICOLON\n\n\t\n\tif\t:\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\n\t\t|\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\t\tELSE\tbloque\t\n\t\t\t\n\t\n\tprinter\t:\tPRINT\tOP_LPAREN\timpression\tOP_RPAREN\t SEMICOLON\n\n\t\n\timpression\t:\tmega_expression\n\t\t\t\t|\tmega_expression\t\tOP_PLUS\t\timpression\n\t\n\t\n\tincrement\t:\tID\tOP_PLUS_EQUALS \t\tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS_EQUALS\t \tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_PLUS\t\t\t\tOP_PLUS\t\t\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS\t\t\tOP_MINUS\t\t\tSEMICOLON\n\t\n\tfor\t:\tFOR\t\tOP_LPAREN\tassigment\tcondition_super_expression\tSEMICOLON\tincrement\tOP_RPAREN\tbloque\t\n\t\n\treturn\t:\tRETURN \tsingle_expression \tSEMICOLON\n\t\n\tfunction_call :\tID\tOP_LPAREN\tfunction_call_prime\t\tOP_RPAREN\tSEMICOLON\n\t\n\tfunction_call_prime\t:\tID\t\tfunction_call_prime\n\t\t\t\t\t\t|\tCOMA\tID\t\t\t\t\t\tfunction_call_prime\n\t\t\t\t\t\t|\tepsilon\n\t\n\tcondition_mega_expression\t:\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tAND\t\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tOR\t\tcondition_super_expression\n\t\n\tcondition_super_expression\t:\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\t\n\tsingle_expression \t:\tsingle_term\n\t\t\t\t\t\t|\tsingle_term\t\tOP_PLUS\t\tsingle_expression\t\n\t\t\t\t\t\t|\tsingle_term\t\tOP_MINUS\tsingle_expression\t\t\t\t\n\t\n\tsingle_term\t:\tsingle_fact\n\t\t\t\t|\tsingle_fact\tOP_DIVISION\t\tsingle_term\t\n\t\t\t\t|\tsingle_fact\tOP_TIMES\t\tsingle_term\t\n\n\t\n\tsingle_fact\t:\tvar_cte\n\t\t\t\t|\tOP_LPAREN\t\tsingle_expression\t\tOP_RPAREN\t\n\t\n\tmega_expression\t:\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tAND\t\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tOR\t\tsuper_expression\n\t\n\tsuper_expression\t:\texpression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\n\t\n\texpression :\tterm\n\t\t\t\t|\tterm\tOP_PLUS\t\texpression\t\n\t\t\t\t|\tterm\tOP_MINUS\texpression\t\n\t\t\t\t\n\t\n\tterm\t:\tfact\n\t\t\t|\tfact\tOP_DIVISION\t\tterm\t\n\t\t\t|\tfact\tOP_TIMES\t\tterm\t\n\n\t\n\tfact\t:\tvar_cte\n\t\t\t|\tOP_LPAREN\t\tmega_expression\t\tOP_RPAREN\t\n\t\n\tvar_cte : \tID\n\t\t\t| \tVAR_INT\n\t\t\t|\tVAR_FLOAT\n\t\t\t|\tVAR_STRING\n\t\n\tfun_esp\t\t:\tfigure_creation\n\t\n\tfigure_creation\t\t:\tFIGURE\tID\tOP_TWO_POINTS\tfigure\tPOSSESS\t\tbloque_figura\n\t\n\tfigure\t:\tPOINT\n\t\t\t|\tLINE\n\t\t\t|\tSQUARE\n\t\t\t|\tRECTANGLE\n\t\t\t|\tTRIANGLE\n\t\t\t|\tCIRCLE\n\t\n\tbloque_figura\t:\tLCURLY_BRACKET\tbloque_figura_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_figura_primo\t:\tbloque_figura_primo\t\tfigura_attr\n\t\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tfigura_attr\t:\tvector\n\t\t\t\t|\tCOLOR\tOP_TWO_POINTS\tID\tSEMICOLON\n\t\t\t\t|\tSIZE\tOP_TWO_POINTS\tsingle_expression\tSEMICOLON\n\t\n\tvector\t:\tVECTOR\t\tID\t\tOP_TWO_POINTS\t\tOP_LPAREN\tsingle_expression\tCOMA\tsingle_expression\tOP_RPAREN\tSEMICOLON\n\tepsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,25,],[0,-1,]),'ID':([2,6,8,9,10,11,18,19,21,24,43,46,47,54,55,58,60,61,62,63,64,65,66,67,68,69,74,75,76,81,82,83,86,87,88,89,94,104,106,108,119,121,122,123,124,125,128,129,130,131,132,135,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,173,176,189,199,204,206,210,211,216,217,218,225,227,],[3,15,-15,-16,-17,-18,27,28,31,35,31,-103,56,70,-24,79,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,31,-88,95,31,31,31,104,31,31,120,31,104,135,31,31,-44,31,31,31,31,-33,-39,-40,-41,-42,104,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-45,-34,-36,203,-89,-35,-43,-96,219,220,31,31,31,]),'LCURLY_BRACKET':([3,36,57,59,137,200,201,207,],[4,46,46,46,46,205,46,46,]),'INT':([4,13,29,37,38,49,56,79,],[8,8,8,8,8,8,8,8,]),'FLOAT':([4,13,29,37,38,49,56,79,],[9,9,9,9,9,9,9,9,]),'STRING':([4,13,29,37,38,49,56,79,],[10,10,10,10,10,10,10,10,]),'BOOLEAN':([4,13,29,37,38,49,56,79,],[11,11,11,11,11,11,11,11,]),'FUNCTION':([4,5,7,29,39,60,78,80,],[-103,13,-3,-103,-2,-22,13,13,]),'MAIN':([4,5,7,12,14,29,39,60,78,80,96,98,],[-103,-103,-3,17,-13,-103,-2,-22,-103,-103,-11,-12,]),'VOID':([13,],[19,]),'OP_EQUALS':([15,35,70,120,],[21,43,81,81,]),'COMA':([15,30,31,32,33,34,35,37,38,42,44,53,56,79,86,91,92,93,104,135,161,162,163,164,165,226,],[24,24,-84,-85,-86,-87,-103,49,49,24,-10,-9,49,49,106,-58,-61,-64,106,106,-59,-60,-62,-63,-65,227,]),'SEMICOLON':([15,20,22,23,30,31,32,33,34,35,40,41,42,44,52,53,90,91,92,93,99,100,101,102,103,112,113,114,134,150,160,161,162,163,164,165,175,179,180,181,182,183,184,185,186,187,188,220,221,229,],[-103,29,-5,-6,-103,-84,-85,-86,-87,-103,-4,-8,-103,-10,-7,-9,121,-58,-61,-64,128,129,130,131,132,-76,-79,-82,173,189,199,-59,-60,-62,-63,-65,-83,-52,-53,-54,-55,-56,-57,-77,-78,-80,-81,223,224,230,]),'RCURLY_BRACKET':([16,45,46,54,55,60,61,62,63,64,65,66,67,68,69,75,121,128,129,130,131,132,173,176,189,204,205,206,208,209,210,211,212,213,223,224,230,],[25,-14,-103,60,-24,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-88,-44,-33,-39,-40,-41,-42,-45,-34,-36,-89,-103,-35,211,-98,-43,-96,-97,-99,-100,-101,-102,]),'OP_LPAREN':([17,27,28,70,71,72,73,74,81,82,83,87,88,94,108,119,122,123,124,125,128,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,218,222,225,227,],[26,37,38,86,87,88,89,94,94,94,94,108,108,94,108,108,94,94,94,94,-33,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,94,225,94,94,]),'VAR_INT':([21,43,74,81,82,83,87,88,94,108,119,122,123,124,125,128,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,218,225,227,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'VAR_FLOAT':([21,43,74,81,82,83,87,88,94,108,119,122,123,124,125,128,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,218,225,227,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'VAR_STRING':([21,43,74,81,82,83,87,88,94,108,119,122,123,124,125,128,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,218,225,227,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'OP_RPAREN':([26,31,32,33,34,37,38,48,50,51,56,77,79,86,91,92,93,97,104,105,107,109,110,112,113,114,115,116,117,118,126,129,130,131,132,133,135,136,161,162,163,164,165,174,175,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,202,228,],[36,-84,-85,-86,-87,-103,-103,57,-21,59,-103,-19,-103,-103,-58,-61,-64,-20,-103,134,-48,137,-49,-76,-79,-82,150,-37,-66,-69,165,-39,-40,-41,-42,-46,-103,175,-59,-60,-62,-63,-65,-47,-83,-50,-51,-52,-53,-54,-55,-56,-57,-77,-78,-80,-81,-38,-67,-68,-70,-71,-72,-73,-74,-75,207,229,]),'OP_DIVISION':([31,32,33,34,92,93,113,114,165,175,],[-84,-85,-86,-87,124,-64,148,-82,-65,-83,]),'OP_TIMES':([31,32,33,34,92,93,113,114,165,175,],[-84,-85,-86,-87,125,-64,149,-82,-65,-83,]),'OP_PLUS':([31,32,33,34,70,84,91,92,93,112,113,114,116,117,118,163,164,165,175,185,186,187,188,191,192,193,194,195,196,197,198,203,],[-84,-85,-86,-87,84,102,122,-61,-64,146,-79,-82,151,-66,-69,-62,-63,-65,-83,-77,-78,-80,-81,-67,-68,-70,-71,-72,-73,-74,-75,84,]),'OP_MINUS':([31,32,33,34,70,85,91,92,93,112,113,114,163,164,165,175,187,188,203,],[-84,-85,-86,-87,85,103,123,-61,-64,147,-79,-82,-62,-63,-65,-83,-80,-81,85,]),'OP_GREATER_THAN':([31,32,33,34,111,112,113,114,118,175,185,186,187,188,],[-84,-85,-86,-87,140,-76,-79,-82,154,-83,-77,-78,-80,-81,]),'OP_LESS_THAN':([31,32,33,34,111,112,113,114,118,175,185,186,187,188,],[-84,-85,-86,-87,141,-76,-79,-82,155,-83,-77,-78,-80,-81,]),'OP_GREATER_EQUALS_THAN':([31,32,33,34,111,112,113,114,118,175,185,186,187,188,],[-84,-85,-86,-87,142,-76,-79,-82,156,-83,-77,-78,-80,-81,]),'OP_LESS_EQUALS_THAN':([31,32,33,34,111,112,113,114,118,175,185,186,187,188,],[-84,-85,-86,-87,143,-76,-79,-82,157,-83,-77,-78,-80,-81,]),'OP_EQUALS_TWO':([31,32,33,34,111,112,113,114,118,175,185,186,187,188,],[-84,-85,-86,-87,144,-76,-79,-82,158,-83,-77,-78,-80,-81,]),'OP_NOT_EQUALS':([31,32,33,34,111,112,113,114,118,175,185,186,187,188,],[-84,-85,-86,-87,145,-76,-79,-82,159,-83,-77,-78,-80,-81,]),'AND':([31,32,33,34,110,112,113,114,117,118,175,179,180,181,182,183,184,185,186,187,188,193,194,195,196,197,198,],[-84,-85,-86,-87,138,-76,-79,-82,152,-69,-83,-52,-53,-54,-55,-56,-57,-77,-78,-80,-81,-70,-71,-72,-73,-74,-75,]),'OR':([31,32,33,34,110,112,113,114,117,118,175,179,180,181,182,183,184,185,186,187,188,193,194,195,196,197,198,],[-84,-85,-86,-87,139,-76,-79,-82,153,-69,-83,-52,-53,-54,-55,-56,-57,-77,-78,-80,-81,-70,-71,-72,-73,-74,-75,]),'IF':([46,54,55,60,61,62,63,64,65,66,67,68,69,75,121,128,129,130,131,132,173,176,189,204,206,210,211,],[-103,71,-24,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-88,-44,-33,-39,-40,-41,-42,-45,-34,-36,-89,-35,-43,-96,]),'PRINT':([46,54,55,60,61,62,63,64,65,66,67,68,69,75,121,128,129,130,131,132,173,176,189,204,206,210,211,],[-103,72,-24,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-88,-44,-33,-39,-40,-41,-42,-45,-34,-36,-89,-35,-43,-96,]),'FOR':([46,54,55,60,61,62,63,64,65,66,67,68,69,75,121,128,129,130,131,132,173,176,189,204,206,210,211,],[-103,73,-24,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-88,-44,-33,-39,-40,-41,-42,-45,-34,-36,-89,-35,-43,-96,]),'RETURN':([46,54,55,60,61,62,63,64,65,66,67,68,69,75,121,128,129,130,131,132,173,176,189,204,206,210,211,],[-103,74,-24,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-88,-44,-33,-39,-40,-41,-42,-45,-34,-36,-89,-35,-43,-96,]),'FIGURE':([46,54,55,60,61,62,63,64,65,66,67,68,69,75,121,128,129,130,131,132,173,176,189,204,206,210,211,],[-103,76,-24,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-88,-44,-33,-39,-40,-41,-42,-45,-34,-36,-89,-35,-43,-96,]),'ELSE':([60,176,],[-22,201,]),'OP_PLUS_EQUALS':([70,203,],[82,82,]),'OP_MINUS_EQUALS':([70,203,],[83,83,]),'OP_TWO_POINTS':([95,214,215,219,],[127,217,218,222,]),'POINT':([127,],[167,]),'LINE':([127,],[168,]),'SQUARE':([127,],[169,]),'RECTANGLE':([127,],[170,]),'TRIANGLE':([127,],[171,]),'CIRCLE':([127,],[172,]),'POSSESS':([166,167,168,169,170,171,172,],[200,-90,-91,-92,-93,-94,-95,]),'COLOR':([205,208,209,212,213,223,224,230,],[-103,214,-98,-97,-99,-100,-101,-102,]),'SIZE':([205,208,209,212,213,223,224,230,],[-103,215,-98,-97,-99,-100,-101,-102,]),'VECTOR':([205,208,209,212,213,223,224,230,],[-103,216,-98,-97,-99,-100,-101,-102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,29,],[5,39,]),'type':([4,13,29,37,38,49,56,79,],[6,18,6,47,47,58,47,47,]),'epsilon':([4,5,15,29,30,35,37,38,42,46,56,78,79,80,86,104,135,205,],[7,14,23,7,41,44,50,50,41,55,50,14,50,14,107,107,107,209,]),'function':([5,78,80,],[12,96,98,]),'main_function':([12,],[16,]),'vars_prime':([15,],[20,]),'vars_prime1':([15,30,42,],[22,40,52,]),'var_cte':([21,43,74,81,82,83,87,88,94,108,119,122,123,124,125,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,218,225,227,],[30,53,93,93,93,93,114,114,93,114,114,93,93,93,93,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,93,93,93,]),'vars_prime2':([35,],[42,]),'bloque':([36,57,59,137,201,207,],[45,78,80,176,206,210,]),'parameters':([37,38,56,79,],[48,51,77,97,]),'bloque_primo':([46,],[54,]),'statement':([54,],[61,]),'assigment':([54,89,],[62,119,]),'if':([54,],[63,]),'printer':([54,],[64,]),'increment':([54,199,],[65,202,]),'for':([54,],[66,]),'return':([54,],[67,]),'function_call':([54,],[68,]),'fun_esp':([54,],[69,]),'figure_creation':([54,],[75,]),'single_expression':([74,81,82,83,94,122,123,218,225,227,],[90,99,100,101,126,161,162,221,226,228,]),'single_term':([74,81,82,83,94,122,123,124,125,218,225,227,],[91,91,91,91,91,91,91,163,164,91,91,91,]),'single_fact':([74,81,82,83,94,122,123,124,125,218,225,227,],[92,92,92,92,92,92,92,92,92,92,92,92,]),'function_call_prime':([86,104,135,],[105,133,174,]),'condition_mega_expression':([87,],[109,]),'condition_super_expression':([87,119,138,139,],[110,160,177,178,]),'expression':([87,88,108,119,138,139,140,141,142,143,144,145,146,147,151,152,153,154,155,156,157,158,159,],[111,118,118,111,111,111,179,180,181,182,183,184,185,186,118,118,118,193,194,195,196,197,198,]),'term':([87,88,108,119,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,187,188,112,112,112,112,112,112,112,112,112,]),'fact':([87,88,108,119,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'impression':([88,151,],[115,190,]),'mega_expression':([88,108,151,],[116,136,116,]),'super_expression':([88,108,151,152,153,],[117,117,117,191,192,]),'figure':([127,],[166,]),'bloque_figura':([200,],[204,]),'bloque_figura_primo':([205,],[208,]),'figura_attr':([208,],[212,]),'vector':([208,],[213,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET','program',7,'p_program','vcparser.py',9),
  ('vars -> type ID vars_prime SEMICOLON vars','vars',5,'p_vars','vcparser.py',16),
  ('vars -> epsilon','vars',1,'p_vars','vcparser.py',17),
  ('vars_prime -> OP_EQUALS var_cte vars_prime1','vars_prime',3,'p_vars_prime','vcparser.py',21),
  ('vars_prime -> vars_prime1','vars_prime',1,'p_vars_prime','vcparser.py',22),
  ('vars_prime -> epsilon','vars_prime',1,'p_vars_prime','vcparser.py',23),
  ('vars_prime1 -> COMA ID vars_prime2 vars_prime1','vars_prime1',4,'p_vars_prime1','vcparser.py',27),
  ('vars_prime1 -> epsilon','vars_prime1',1,'p_vars_prime1','vcparser.py',28),
  ('vars_prime2 -> OP_EQUALS var_cte','vars_prime2',2,'p_vars_prime2','vcparser.py',32),
  ('vars_prime2 -> epsilon','vars_prime2',1,'p_vars_prime2','vcparser.py',33),
  ('function -> FUNCTION type ID OP_LPAREN parameters OP_RPAREN bloque function','function',8,'p_function','vcparser.py',39),
  ('function -> FUNCTION VOID ID OP_LPAREN parameters OP_RPAREN bloque function','function',8,'p_function','vcparser.py',40),
  ('function -> epsilon','function',1,'p_function','vcparser.py',41),
  ('main_function -> MAIN OP_LPAREN OP_RPAREN bloque','main_function',4,'p_main_function','vcparser.py',45),
  ('type -> INT','type',1,'p_type','vcparser.py',49),
  ('type -> FLOAT','type',1,'p_type','vcparser.py',50),
  ('type -> STRING','type',1,'p_type','vcparser.py',51),
  ('type -> BOOLEAN','type',1,'p_type','vcparser.py',52),
  ('parameters -> type ID parameters','parameters',3,'p_parameters','vcparser.py',57),
  ('parameters -> COMA type ID parameters','parameters',4,'p_parameters','vcparser.py',58),
  ('parameters -> epsilon','parameters',1,'p_parameters','vcparser.py',59),
  ('bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET','bloque',3,'p_bloque','vcparser.py',65),
  ('bloque_primo -> bloque_primo statement','bloque_primo',2,'p_bloque_primo','vcparser.py',71),
  ('bloque_primo -> epsilon','bloque_primo',1,'p_bloque_primo','vcparser.py',72),
  ('statement -> assigment','statement',1,'p_statement','vcparser.py',77),
  ('statement -> if','statement',1,'p_statement','vcparser.py',78),
  ('statement -> printer','statement',1,'p_statement','vcparser.py',79),
  ('statement -> increment','statement',1,'p_statement','vcparser.py',80),
  ('statement -> for','statement',1,'p_statement','vcparser.py',81),
  ('statement -> return','statement',1,'p_statement','vcparser.py',82),
  ('statement -> function_call','statement',1,'p_statement','vcparser.py',83),
  ('statement -> fun_esp','statement',1,'p_statement','vcparser.py',84),
  ('assigment -> ID OP_EQUALS single_expression SEMICOLON','assigment',4,'p_assigment','vcparser.py',90),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque','if',5,'p_if','vcparser.py',95),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque','if',7,'p_if','vcparser.py',96),
  ('printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON','printer',5,'p_printer','vcparser.py',103),
  ('impression -> mega_expression','impression',1,'p_impression','vcparser.py',108),
  ('impression -> mega_expression OP_PLUS impression','impression',3,'p_impression','vcparser.py',109),
  ('increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',114),
  ('increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',115),
  ('increment -> ID OP_PLUS OP_PLUS SEMICOLON','increment',4,'p_increment','vcparser.py',116),
  ('increment -> ID OP_MINUS OP_MINUS SEMICOLON','increment',4,'p_increment','vcparser.py',117),
  ('for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque','for',8,'p_for','vcparser.py',122),
  ('return -> RETURN single_expression SEMICOLON','return',3,'p_return','vcparser.py',127),
  ('function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON','function_call',5,'p_function_call','vcparser.py',131),
  ('function_call_prime -> ID function_call_prime','function_call_prime',2,'p_function_call_prime','vcparser.py',135),
  ('function_call_prime -> COMA ID function_call_prime','function_call_prime',3,'p_function_call_prime','vcparser.py',136),
  ('function_call_prime -> epsilon','function_call_prime',1,'p_function_call_prime','vcparser.py',137),
  ('condition_mega_expression -> condition_super_expression','condition_mega_expression',1,'p_condition_mega_expression','vcparser.py',141),
  ('condition_mega_expression -> condition_super_expression AND condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',142),
  ('condition_mega_expression -> condition_super_expression OR condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',143),
  ('condition_super_expression -> expression OP_GREATER_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',147),
  ('condition_super_expression -> expression OP_LESS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',148),
  ('condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',149),
  ('condition_super_expression -> expression OP_LESS_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',150),
  ('condition_super_expression -> expression OP_EQUALS_TWO expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',151),
  ('condition_super_expression -> expression OP_NOT_EQUALS expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',152),
  ('single_expression -> single_term','single_expression',1,'p_single_expression','vcparser.py',157),
  ('single_expression -> single_term OP_PLUS single_expression','single_expression',3,'p_single_expression','vcparser.py',158),
  ('single_expression -> single_term OP_MINUS single_expression','single_expression',3,'p_single_expression','vcparser.py',159),
  ('single_term -> single_fact','single_term',1,'p_single_term','vcparser.py',163),
  ('single_term -> single_fact OP_DIVISION single_term','single_term',3,'p_single_term','vcparser.py',164),
  ('single_term -> single_fact OP_TIMES single_term','single_term',3,'p_single_term','vcparser.py',165),
  ('single_fact -> var_cte','single_fact',1,'p_single_fact','vcparser.py',170),
  ('single_fact -> OP_LPAREN single_expression OP_RPAREN','single_fact',3,'p_single_fact','vcparser.py',171),
  ('mega_expression -> super_expression','mega_expression',1,'p_mega_expression','vcparser.py',175),
  ('mega_expression -> super_expression AND super_expression','mega_expression',3,'p_mega_expression','vcparser.py',176),
  ('mega_expression -> super_expression OR super_expression','mega_expression',3,'p_mega_expression','vcparser.py',177),
  ('super_expression -> expression','super_expression',1,'p_super_expression','vcparser.py',182),
  ('super_expression -> expression OP_GREATER_THAN expression','super_expression',3,'p_super_expression','vcparser.py',183),
  ('super_expression -> expression OP_LESS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',184),
  ('super_expression -> expression OP_GREATER_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',185),
  ('super_expression -> expression OP_LESS_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',186),
  ('super_expression -> expression OP_EQUALS_TWO expression','super_expression',3,'p_super_expression','vcparser.py',187),
  ('super_expression -> expression OP_NOT_EQUALS expression','super_expression',3,'p_super_expression','vcparser.py',188),
  ('expression -> term','expression',1,'p_expression','vcparser.py',193),
  ('expression -> term OP_PLUS expression','expression',3,'p_expression','vcparser.py',194),
  ('expression -> term OP_MINUS expression','expression',3,'p_expression','vcparser.py',195),
  ('term -> fact','term',1,'p_term','vcparser.py',201),
  ('term -> fact OP_DIVISION term','term',3,'p_term','vcparser.py',202),
  ('term -> fact OP_TIMES term','term',3,'p_term','vcparser.py',203),
  ('fact -> var_cte','fact',1,'p_fact','vcparser.py',208),
  ('fact -> OP_LPAREN mega_expression OP_RPAREN','fact',3,'p_fact','vcparser.py',209),
  ('var_cte -> ID','var_cte',1,'p_var_cte','vcparser.py',213),
  ('var_cte -> VAR_INT','var_cte',1,'p_var_cte','vcparser.py',214),
  ('var_cte -> VAR_FLOAT','var_cte',1,'p_var_cte','vcparser.py',215),
  ('var_cte -> VAR_STRING','var_cte',1,'p_var_cte','vcparser.py',216),
  ('fun_esp -> figure_creation','fun_esp',1,'p_fun_esp','vcparser.py',220),
  ('figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura','figure_creation',6,'p_figure_creation','vcparser.py',224),
  ('figure -> POINT','figure',1,'p_figure','vcparser.py',228),
  ('figure -> LINE','figure',1,'p_figure','vcparser.py',229),
  ('figure -> SQUARE','figure',1,'p_figure','vcparser.py',230),
  ('figure -> RECTANGLE','figure',1,'p_figure','vcparser.py',231),
  ('figure -> TRIANGLE','figure',1,'p_figure','vcparser.py',232),
  ('figure -> CIRCLE','figure',1,'p_figure','vcparser.py',233),
  ('bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET','bloque_figura',3,'p_bloque_figura','vcparser.py',237),
  ('bloque_figura_primo -> bloque_figura_primo figura_attr','bloque_figura_primo',2,'p_bloque_figura_primo','vcparser.py',243),
  ('bloque_figura_primo -> epsilon','bloque_figura_primo',1,'p_bloque_figura_primo','vcparser.py',244),
  ('figura_attr -> vector','figura_attr',1,'p_figura_attr','vcparser.py',249),
  ('figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON','figura_attr',4,'p_figura_attr','vcparser.py',250),
  ('figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON','figura_attr',4,'p_figura_attr','vcparser.py',251),
  ('vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON','vector',9,'p_vector','vcparser.py',255),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','vcparser.py',258),
]
