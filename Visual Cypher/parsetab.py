
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAM ID VAR_INT VAR_FLOAT VAR_STRING VAR_BOOLEAN FLOAT INT STRING BOOLEAN CARET POINT COMA OP_PLUS OP_MINUS OP_TIMES OP_DIVISION OP_EQUALS_TWO OP_NOT_EQUALS OP_LPAREN OP_RPAREN OP_EQUALS OP_LESS_THAN OP_LESS_EQUALS_THAN OP_GREATER_THAN OP_GREATER_EQUALS_THAN AND OR PRINT QUOT_MARK SEMICOLON LCURLY_BRACKET RCURLY_BRACKET VAR IF ELSE OP_PLUS_EQUALS OP_MINUS_EQUALS RETURN FUNCTION MAIN FOR\n\tprogram\t\t:\tPROGRAM  ID  LCURLY_BRACKET  vars   function \tmain_function\t RCURLY_BRACKET\t\n\n\t\n\tvars\t:\t\tINT\t \t ID\t\tOP_EQUALS\tVAR_INT\t \tSEMICOLON\tvars\n\t\t\t|\t\tFLOAT\t ID\t\tOP_EQUALS\tVAR_FLOAT \tSEMICOLON\tvars\n\t\t\t|\t\tSTRING\t ID\t\tOP_EQUALS\tVAR_STRING\tSEMICOLON\tvars\n\t\t\t|\t\tBOOLEAN\t ID\t\tOP_EQUALS\tVAR_BOOLEAN\tSEMICOLON\tvars\n\t\t\t|\t\tepsilon\n\t\n\tfunction\t:\tFUNCTION\ttype\tID\t\tOP_LPAREN\tparameters OP_RPAREN\tbloque\tfunction\n\t\t\t\t|\tepsilon\n\t\n\tmain_function\t:\tMAIN\tOP_LPAREN\tOP_RPAREN\tbloque\t\n\t\n\ttype\t:\tINT\n\t\t\t|\tFLOAT\n\t\t\t|\tSTRING\n\t\t\t|\tBOOLEAN\n\t\n\tparameters\t:\ttype\tID\tparameters\n\t\t\t\t|\tCOMA\ttype\tID\t\tparameters\n\t\t\t\t|\tepsilon\n\t\n\tbloque\t:\tLCURLY_BRACKET\tbloque_temp\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_temp\t:\tbloque_temp\tstatement\n\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tstatement\t:\tassigment\n\t\t\t\t|\tif\n\t\t\t\t|\tprinter\n\t\t\t\t|\tincrement\n\t\t\t\t|\tvars\n\t\t\t\t|\tfor\n\t\t\t\t|\treturn\n\t\t\t\t\n\t\n\tassigment\t:\tID\tOP_EQUALS\tmega_expression\t\tSEMICOLON\n\n\t\n\tif\t:\tIF\tOP_LPAREN\tmega_expression\tOP_RPAREN\tbloque\n\t\t|\tIF\tOP_LPAREN\tmega_expression\tOP_RPAREN\tbloque\tELSE\tbloque\t\n\t\t\t\n\t\n\tprinter\t:\tPRINT\tOP_LPAREN\timpresion\tOP_RPAREN\t SEMICOLON\n\n\t\n\timpresion\t:\tvar_cte\n\t\t\t\t|\tvar_cte\t\tOP_PLUS\t\timpresion\n\t\n\t\n\tincrement\t:\tID\tOP_PLUS_EQUALS mega_expression\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS_EQUALS mega_expression\tSEMICOLON\n\t\t\t\t|\tID\tOP_PLUS\t\tOP_PLUS\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS\tOP_MINUS\tSEMICOLON\n\t\n\tfor\t:\tFOR\t\tOP_LPAREN\tvars\tmega_expression\t\tSEMICOLON\tincrement\tOP_RPAREN\tbloque\t\n\t\n\treturn\t:\tRETURN\tID SEMICOLON\n\t\t\t|\tRETURN mega_expression SEMICOLON\n\t\n\tmega_expression\t:\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tAND\t\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tOR\t\tsuper_expression\n\t\n\tsuper_expression\t:\texpression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\n\t\n\texpression :\tterm\n\t\t\t\t|\tterm\tOP_PLUS\t\texpression\t\n\t\t\t\t|\tterm\tOP_MINUS\texpression\t\n\t\t\t\t\n\t\n\tterm\t:\tfact\n\t\t\t|\tfact\tOP_DIVISION\t\tterm\t\n\t\t\t|\tfact\tOP_TIMES\t\tterm\t\n\n\t\n\tfact\t:\tvar_cte\n\t\t\t|\tOP_LPAREN\tmega_expression\tOP_RPAREN\t\n\t\n\tvar_cte : \tID\n\t\t\t| \tVAR_INT\n\t\t\t|\tVAR_FLOAT\n\t\t\t|\tVAR_STRING\n\tepsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,29,],[0,-1,]),'ID':([2,6,7,8,9,10,20,21,22,23,24,38,39,40,41,43,44,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,70,74,75,76,79,80,81,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,127,142,143,145,149,151,],[3,14,15,16,17,-6,31,-10,-11,-12,-13,-62,-62,-62,-62,-62,54,-2,-3,-4,-5,66,-19,73,-17,-18,-20,-21,-22,-23,-24,-25,-26,82,95,95,95,95,95,-62,95,95,-38,-39,95,95,95,95,95,95,95,95,95,95,95,95,-27,-33,-34,-35,-36,95,-28,-30,148,-29,-37,]),'LCURLY_BRACKET':([3,36,55,125,146,150,],[4,43,43,43,43,43,]),'INT':([4,10,12,37,38,39,40,41,43,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,73,81,105,106,120,121,122,123,124,142,143,149,151,],[6,-6,21,21,6,6,6,6,-62,21,-2,-3,-4,-5,6,-19,21,-17,-18,-20,-21,-22,-23,-24,-25,-26,21,6,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'FLOAT':([4,10,12,37,38,39,40,41,43,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,73,81,105,106,120,121,122,123,124,142,143,149,151,],[7,-6,22,22,7,7,7,7,-62,22,-2,-3,-4,-5,7,-19,22,-17,-18,-20,-21,-22,-23,-24,-25,-26,22,7,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'STRING':([4,10,12,37,38,39,40,41,43,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,73,81,105,106,120,121,122,123,124,142,143,149,151,],[8,-6,23,23,8,8,8,8,-62,23,-2,-3,-4,-5,8,-19,23,-17,-18,-20,-21,-22,-23,-24,-25,-26,23,8,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'BOOLEAN':([4,10,12,37,38,39,40,41,43,46,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,73,81,105,106,120,121,122,123,124,142,143,149,151,],[9,-6,24,24,9,9,9,9,-62,24,-2,-3,-4,-5,9,-19,24,-17,-18,-20,-21,-22,-23,-24,-25,-26,24,9,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'FUNCTION':([4,5,10,38,39,40,41,48,49,50,51,57,72,],[-62,12,-6,-62,-62,-62,-62,-2,-3,-4,-5,-17,12,]),'MAIN':([4,5,10,11,13,38,39,40,41,48,49,50,51,57,72,93,],[-62,-62,-6,19,-8,-62,-62,-62,-62,-2,-3,-4,-5,-17,-62,-7,]),'RCURLY_BRACKET':([10,18,38,39,40,41,42,43,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,105,106,120,121,122,123,124,142,143,149,151,],[-6,29,-62,-62,-62,-62,-9,-62,-2,-3,-4,-5,57,-19,-17,-18,-20,-21,-22,-23,-24,-25,-26,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'IF':([10,38,39,40,41,43,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,105,106,120,121,122,123,124,142,143,149,151,],[-6,-62,-62,-62,-62,-62,-2,-3,-4,-5,67,-19,-17,-18,-20,-21,-22,-23,-24,-25,-26,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'PRINT':([10,38,39,40,41,43,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,105,106,120,121,122,123,124,142,143,149,151,],[-6,-62,-62,-62,-62,-62,-2,-3,-4,-5,68,-19,-17,-18,-20,-21,-22,-23,-24,-25,-26,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'FOR':([10,38,39,40,41,43,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,105,106,120,121,122,123,124,142,143,149,151,],[-6,-62,-62,-62,-62,-62,-2,-3,-4,-5,69,-19,-17,-18,-20,-21,-22,-23,-24,-25,-26,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'RETURN':([10,38,39,40,41,43,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,105,106,120,121,122,123,124,142,143,149,151,],[-6,-62,-62,-62,-62,-62,-2,-3,-4,-5,70,-19,-17,-18,-20,-21,-22,-23,-24,-25,-26,-38,-39,-27,-33,-34,-35,-36,-28,-30,-29,-37,]),'OP_LPAREN':([10,19,31,38,39,40,41,48,49,50,51,67,68,69,70,74,75,76,79,81,89,104,107,108,109,110,111,112,113,114,115,116,117,118,],[-6,30,37,-62,-62,-62,-62,-2,-3,-4,-5,79,80,81,89,89,89,89,89,-62,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'VAR_INT':([10,25,38,39,40,41,48,49,50,51,70,74,75,76,79,80,81,89,104,107,108,109,110,111,112,113,114,115,116,117,118,127,],[-6,32,-62,-62,-62,-62,-2,-3,-4,-5,90,90,90,90,90,90,-62,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'VAR_FLOAT':([10,26,38,39,40,41,48,49,50,51,70,74,75,76,79,80,81,89,104,107,108,109,110,111,112,113,114,115,116,117,118,127,],[-6,33,-62,-62,-62,-62,-2,-3,-4,-5,91,91,91,91,91,91,-62,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'VAR_STRING':([10,27,38,39,40,41,48,49,50,51,70,74,75,76,79,80,81,89,104,107,108,109,110,111,112,113,114,115,116,117,118,127,],[-6,34,-62,-62,-62,-62,-2,-3,-4,-5,92,92,92,92,92,92,-62,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'OP_EQUALS':([14,15,16,17,66,],[25,26,27,28,74,]),'VAR_BOOLEAN':([28,],[35,]),'OP_RPAREN':([30,37,45,47,54,71,73,84,85,86,87,88,90,91,92,94,95,101,102,103,119,121,122,123,124,129,130,131,132,133,134,135,136,137,138,139,140,141,144,147,],[36,-62,55,-16,-62,-14,-62,-40,-43,-50,-53,-56,-59,-60,-61,-15,-58,125,126,-31,141,-33,-34,-35,-36,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-54,-55,-57,-32,150,]),'SEMICOLON':([32,33,34,35,82,83,84,85,86,87,88,90,91,92,95,96,97,98,99,100,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,],[38,39,40,41,105,106,-40,-43,-50,-53,-56,-59,-60,-61,-58,120,121,122,123,124,143,145,-41,-42,-44,-45,-46,-47,-48,-49,-51,-52,-54,-55,-57,]),'COMA':([37,54,73,],[46,46,46,]),'ELSE':([57,142,],[-17,146,]),'OP_PLUS_EQUALS':([66,148,],[75,75,]),'OP_MINUS_EQUALS':([66,148,],[76,76,]),'OP_PLUS':([66,77,82,86,87,88,90,91,92,95,103,139,140,141,148,],[77,99,-58,115,-53,-56,-59,-60,-61,-58,127,-54,-55,-57,77,]),'OP_MINUS':([66,78,82,86,87,88,90,91,92,95,139,140,141,148,],[78,100,-58,116,-53,-56,-59,-60,-61,-58,-54,-55,-57,78,]),'OP_DIVISION':([82,87,88,90,91,92,95,141,],[-58,117,-56,-59,-60,-61,-58,-57,]),'OP_TIMES':([82,87,88,90,91,92,95,141,],[-58,118,-56,-59,-60,-61,-58,-57,]),'OP_GREATER_THAN':([82,85,86,87,88,90,91,92,95,137,138,139,140,141,],[-58,109,-50,-53,-56,-59,-60,-61,-58,-51,-52,-54,-55,-57,]),'OP_LESS_THAN':([82,85,86,87,88,90,91,92,95,137,138,139,140,141,],[-58,110,-50,-53,-56,-59,-60,-61,-58,-51,-52,-54,-55,-57,]),'OP_GREATER_EQUALS_THAN':([82,85,86,87,88,90,91,92,95,137,138,139,140,141,],[-58,111,-50,-53,-56,-59,-60,-61,-58,-51,-52,-54,-55,-57,]),'OP_LESS_EQUALS_THAN':([82,85,86,87,88,90,91,92,95,137,138,139,140,141,],[-58,112,-50,-53,-56,-59,-60,-61,-58,-51,-52,-54,-55,-57,]),'OP_EQUALS_TWO':([82,85,86,87,88,90,91,92,95,137,138,139,140,141,],[-58,113,-50,-53,-56,-59,-60,-61,-58,-51,-52,-54,-55,-57,]),'OP_NOT_EQUALS':([82,85,86,87,88,90,91,92,95,137,138,139,140,141,],[-58,114,-50,-53,-56,-59,-60,-61,-58,-51,-52,-54,-55,-57,]),'AND':([82,84,85,86,87,88,90,91,92,95,131,132,133,134,135,136,137,138,139,140,141,],[-58,107,-43,-50,-53,-56,-59,-60,-61,-58,-44,-45,-46,-47,-48,-49,-51,-52,-54,-55,-57,]),'OR':([82,84,85,86,87,88,90,91,92,95,131,132,133,134,135,136,137,138,139,140,141,],[-58,108,-43,-50,-53,-56,-59,-60,-61,-58,-44,-45,-46,-47,-48,-49,-51,-52,-54,-55,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,38,39,40,41,52,81,],[5,48,49,50,51,63,104,]),'epsilon':([4,5,37,38,39,40,41,43,52,54,72,73,81,],[10,13,47,10,10,10,10,53,10,47,13,47,10,]),'function':([5,72,],[11,93,]),'main_function':([11,],[18,]),'type':([12,37,46,54,73,],[20,44,56,44,44,]),'bloque':([36,55,125,146,150,],[42,72,142,149,151,]),'parameters':([37,54,73,],[45,71,94,]),'bloque_temp':([43,],[52,]),'statement':([52,],[58,]),'assigment':([52,],[59,]),'if':([52,],[60,]),'printer':([52,],[61,]),'increment':([52,145,],[62,147,]),'for':([52,],[64,]),'return':([52,],[65,]),'mega_expression':([70,74,75,76,79,89,104,],[83,96,97,98,101,119,128,]),'super_expression':([70,74,75,76,79,89,104,107,108,],[84,84,84,84,84,84,84,129,130,]),'expression':([70,74,75,76,79,89,104,107,108,109,110,111,112,113,114,115,116,],[85,85,85,85,85,85,85,85,85,131,132,133,134,135,136,137,138,]),'term':([70,74,75,76,79,89,104,107,108,109,110,111,112,113,114,115,116,117,118,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,139,140,]),'fact':([70,74,75,76,79,89,104,107,108,109,110,111,112,113,114,115,116,117,118,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'var_cte':([70,74,75,76,79,80,89,104,107,108,109,110,111,112,113,114,115,116,117,118,127,],[88,88,88,88,88,103,88,88,88,88,88,88,88,88,88,88,88,88,88,88,103,]),'impresion':([80,127,],[102,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET','program',7,'p_program','vcparser.py',9),
  ('vars -> INT ID OP_EQUALS VAR_INT SEMICOLON vars','vars',6,'p_vars','vcparser.py',16),
  ('vars -> FLOAT ID OP_EQUALS VAR_FLOAT SEMICOLON vars','vars',6,'p_vars','vcparser.py',17),
  ('vars -> STRING ID OP_EQUALS VAR_STRING SEMICOLON vars','vars',6,'p_vars','vcparser.py',18),
  ('vars -> BOOLEAN ID OP_EQUALS VAR_BOOLEAN SEMICOLON vars','vars',6,'p_vars','vcparser.py',19),
  ('vars -> epsilon','vars',1,'p_vars','vcparser.py',20),
  ('function -> FUNCTION type ID OP_LPAREN parameters OP_RPAREN bloque function','function',8,'p_function','vcparser.py',24),
  ('function -> epsilon','function',1,'p_function','vcparser.py',25),
  ('main_function -> MAIN OP_LPAREN OP_RPAREN bloque','main_function',4,'p_main_function','vcparser.py',29),
  ('type -> INT','type',1,'p_type','vcparser.py',33),
  ('type -> FLOAT','type',1,'p_type','vcparser.py',34),
  ('type -> STRING','type',1,'p_type','vcparser.py',35),
  ('type -> BOOLEAN','type',1,'p_type','vcparser.py',36),
  ('parameters -> type ID parameters','parameters',3,'p_parameters','vcparser.py',40),
  ('parameters -> COMA type ID parameters','parameters',4,'p_parameters','vcparser.py',41),
  ('parameters -> epsilon','parameters',1,'p_parameters','vcparser.py',42),
  ('bloque -> LCURLY_BRACKET bloque_temp RCURLY_BRACKET','bloque',3,'p_bloque','vcparser.py',48),
  ('bloque_temp -> bloque_temp statement','bloque_temp',2,'p_bloque_temp','vcparser.py',53),
  ('bloque_temp -> epsilon','bloque_temp',1,'p_bloque_temp','vcparser.py',54),
  ('statement -> assigment','statement',1,'p_statement','vcparser.py',59),
  ('statement -> if','statement',1,'p_statement','vcparser.py',60),
  ('statement -> printer','statement',1,'p_statement','vcparser.py',61),
  ('statement -> increment','statement',1,'p_statement','vcparser.py',62),
  ('statement -> vars','statement',1,'p_statement','vcparser.py',63),
  ('statement -> for','statement',1,'p_statement','vcparser.py',64),
  ('statement -> return','statement',1,'p_statement','vcparser.py',65),
  ('assigment -> ID OP_EQUALS mega_expression SEMICOLON','assigment',4,'p_assigment','vcparser.py',71),
  ('if -> IF OP_LPAREN mega_expression OP_RPAREN bloque','if',5,'p_if','vcparser.py',76),
  ('if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque','if',7,'p_if','vcparser.py',77),
  ('printer -> PRINT OP_LPAREN impresion OP_RPAREN SEMICOLON','printer',5,'p_printer','vcparser.py',84),
  ('impresion -> var_cte','impresion',1,'p_impresion','vcparser.py',89),
  ('impresion -> var_cte OP_PLUS impresion','impresion',3,'p_impresion','vcparser.py',90),
  ('increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON','increment',4,'p_increment','vcparser.py',95),
  ('increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON','increment',4,'p_increment','vcparser.py',96),
  ('increment -> ID OP_PLUS OP_PLUS SEMICOLON','increment',4,'p_increment','vcparser.py',97),
  ('increment -> ID OP_MINUS OP_MINUS SEMICOLON','increment',4,'p_increment','vcparser.py',98),
  ('for -> FOR OP_LPAREN vars mega_expression SEMICOLON increment OP_RPAREN bloque','for',8,'p_for','vcparser.py',102),
  ('return -> RETURN ID SEMICOLON','return',3,'p_return','vcparser.py',107),
  ('return -> RETURN mega_expression SEMICOLON','return',3,'p_return','vcparser.py',108),
  ('mega_expression -> super_expression','mega_expression',1,'p_mega_expression','vcparser.py',112),
  ('mega_expression -> super_expression AND super_expression','mega_expression',3,'p_mega_expression','vcparser.py',113),
  ('mega_expression -> super_expression OR super_expression','mega_expression',3,'p_mega_expression','vcparser.py',114),
  ('super_expression -> expression','super_expression',1,'p_super_expression','vcparser.py',119),
  ('super_expression -> expression OP_GREATER_THAN expression','super_expression',3,'p_super_expression','vcparser.py',120),
  ('super_expression -> expression OP_LESS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',121),
  ('super_expression -> expression OP_GREATER_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',122),
  ('super_expression -> expression OP_LESS_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',123),
  ('super_expression -> expression OP_EQUALS_TWO expression','super_expression',3,'p_super_expression','vcparser.py',124),
  ('super_expression -> expression OP_NOT_EQUALS expression','super_expression',3,'p_super_expression','vcparser.py',125),
  ('expression -> term','expression',1,'p_expression','vcparser.py',130),
  ('expression -> term OP_PLUS expression','expression',3,'p_expression','vcparser.py',131),
  ('expression -> term OP_MINUS expression','expression',3,'p_expression','vcparser.py',132),
  ('term -> fact','term',1,'p_term','vcparser.py',138),
  ('term -> fact OP_DIVISION term','term',3,'p_term','vcparser.py',139),
  ('term -> fact OP_TIMES term','term',3,'p_term','vcparser.py',140),
  ('fact -> var_cte','fact',1,'p_fact','vcparser.py',145),
  ('fact -> OP_LPAREN mega_expression OP_RPAREN','fact',3,'p_fact','vcparser.py',146),
  ('var_cte -> ID','var_cte',1,'p_var_cte','vcparser.py',150),
  ('var_cte -> VAR_INT','var_cte',1,'p_var_cte','vcparser.py',151),
  ('var_cte -> VAR_FLOAT','var_cte',1,'p_var_cte','vcparser.py',152),
  ('var_cte -> VAR_STRING','var_cte',1,'p_var_cte','vcparser.py',153),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','vcparser.py',157),
]
