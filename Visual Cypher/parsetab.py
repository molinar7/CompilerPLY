
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAM ID VAR_INT VAR_FLOAT VAR_STRING VAR_BOOLEAN FLOAT INT STRING BOOLEAN CARET COMA OP_PLUS OP_MINUS OP_TIMES OP_DIVISION OP_EQUALS_TWO OP_NOT_EQUALS OP_LPAREN OP_RPAREN OP_EQUALS OP_TWO_POINTS OP_LESS_THAN OP_LESS_EQUALS_THAN OP_GREATER_THAN OP_GREATER_EQUALS_THAN AND OR PRINT QUOT_MARK SEMICOLON LCURLY_BRACKET RCURLY_BRACKET VAR IF ELSE OP_PLUS_EQUALS OP_MINUS_EQUALS RETURN FUNCTION MAIN FOR VOID VECTOR POINT LINE SQUARE RECTANGLE TRIANGLE CIRCLE FIGURE POSSESS COLOR SIZE OP_LSQUARE_PAREN OP_RSQUARE_PAREN ARC\n\tprogram\t\t:\tPROGRAM  ID  LCURLY_BRACKET  vars   function \tmain_function\t RCURLY_BRACKET\t\n\n\t\n\tvars\t:\ttype\tsave_type\tID\t\tOP_EQUALS\t\t\tvar_cte\t\t\tpushTo_varsTable_WithCTE\tSEMICOLON\t\tvars\n\t\t\t|\ttype\tsave_type\tID\t\tpushTo_varsTable\tvars_prime\t\tSEMICOLON\t\t\t\t\tvars\n\t\t\t|\tepsilon\n\t\n\tvars_prime\t\t:\tCOMA\tID\tpushTo_varsTable\tvars_prime\n\t\t\t\t\t|\tepsilon\n\tpushTo_varsTable_WithCTE\t:\tepsilonpushTo_varsTable\t:\tepsilonsave_type\t:\tepsilon\n\tfunction\t:\tFUNCTION\ttype\tID\t\tpushTo_FunctionDir\t\tOP_LPAREN\t\tparameters OP_RPAREN\tfunction_bloque\tfunction\n\t\t\t\t|\tFUNCTION\tVOID\tID\t\tpushTo_FunctionDir\t\tOP_LPAREN\t\tparameters OP_RPAREN\tfunction_bloque\tfunction\n\t\t\t\t|\tepsilon\n\t\n\tpushTo_FunctionDir\t:\tepsilon\n\t\n\tmain_function\t:\tMAIN\tpushTo_FunctionDir OP_LPAREN\tOP_RPAREN\tfunction_bloque\t\n\t\n\ttype\t:\tINT\n\t\t\t|\tFLOAT\n\t\t\t|\tSTRING\n\t\t\t|\tBOOLEAN\n\t\t\t\n\t\n\tparameters\t:\ttype\t\tID\t\t\tparameters\n\t\t\t\t|\tCOMA\t\ttype\t\tID\t\t\t\tparameters\n\t\t\t\t|\tepsilon\n\t\n\tfunction_bloque\t:\tLCURLY_BRACKET\tfunction_bloque_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tfunction_bloque_primo\t:\tfunction_bloque_primo\tfunction_statement \n\t\t\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tfunction_statement\t:\tassigment\n\t\t\t\t\t\t|\tif\n\t\t\t\t\t\t|\tprinter\n\t\t\t\t\t\t|\tincrement\n\t\t\t\t\t\t|\tfor\n\t\t\t\t\t\t|\treturn\n\t\t\t\t\t\t|\tfunction_call\n\t\t\t\t\t\t|\tfun_esp\n\t\t\t\t\t\t|\tvars\n\t\t\t\t\n\t\n\tbloque\t:\tLCURLY_BRACKET\tbloque_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_primo\t:\tbloque_primo\tstatement \n\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tstatement\t:\tassigment\n\t\t\t\t|\tif\n\t\t\t\t|\tprinter\n\t\t\t\t|\tincrement\n\t\t\t\t|\tfor\n\t\t\t\t|\treturn\n\t\t\t\t|\tfunction_call\n\t\t\t\t|\tfun_esp\n\t\t\t\t\n\t\n\tassigment\t:\tID\tOP_EQUALS\tsingle_expression\tSEMICOLON\n\t\t\t\t|\tID\tOP_LSQUARE_PAREN\tVAR_INT\t\tOP_RSQUARE_PAREN\tOP_EQUALS\tsingle_expression\t\n\n\t\n\tif\t:\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\n\t\t|\tIF\tOP_LPAREN\tcondition_mega_expression\tOP_RPAREN\tbloque\t\tELSE\tbloque\t\n\t\t\t\n\t\n\tprinter\t:\tPRINT\tOP_LPAREN\timpression\tOP_RPAREN\t SEMICOLON\n\n\t\n\timpression\t:\tmega_expression\n\t\t\t\t|\tmega_expression\t\tOP_PLUS\t\timpression\n\t\n\t\n\tincrement\t:\tID\tOP_PLUS_EQUALS \t\tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS_EQUALS\t \tsingle_expression\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_PLUS\t\t\t\tOP_PLUS\t\t\t\tSEMICOLON\n\t\t\t\t|\tID\tOP_MINUS\t\t\tOP_MINUS\t\t\tSEMICOLON\n\t\n\tfor\t:\tFOR\t\tOP_LPAREN\tassigment\tcondition_super_expression\tSEMICOLON\tincrement\tOP_RPAREN\tbloque\t\n\t\n\treturn\t:\tRETURN \tsingle_expression \tSEMICOLON\n\t\n\tfunction_call :\tID\tOP_LPAREN\tfunction_call_prime\t\tOP_RPAREN\tSEMICOLON\n\t\n\tfunction_call_prime\t:\tID\t\tfunction_call_prime\n\t\t\t\t\t\t|\tCOMA\tID\t\t\t\t\t\tfunction_call_prime\n\t\t\t\t\t\t|\tepsilon\n\t\n\tcondition_mega_expression\t:\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tAND\t\tcondition_super_expression\n\t\t\t\t\t\t\t\t|\tcondition_super_expression\tOR\t\tcondition_super_expression\n\t\n\tcondition_super_expression\t:\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\t\n\tsingle_expression \t:\tsingle_term\n\t\t\t\t\t\t|\tsingle_term\t\tOP_PLUS\t\tsingle_expression\t\n\t\t\t\t\t\t|\tsingle_term\t\tOP_MINUS\tsingle_expression\t\t\t\t\n\t\n\tsingle_term\t:\tsingle_fact\n\t\t\t\t|\tsingle_fact\tOP_DIVISION\t\tsingle_term\t\n\t\t\t\t|\tsingle_fact\tOP_TIMES\t\tsingle_term\t\n\n\t\n\tsingle_fact\t:\tvar_cte\n\t\t\t\t|\tOP_LPAREN\t\tsingle_expression\t\tOP_RPAREN\t\n\t\n\tmega_expression\t:\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tAND\t\tsuper_expression\n\t\t\t\t\t|\tsuper_expression\tOR\t\tsuper_expression\n\t\n\tsuper_expression\t:\texpression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_THAN\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_GREATER_EQUALS_THAN\t expression\n\t\t\t\t\t\t|\texpression\tOP_LESS_EQUALS_THAN\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_EQUALS_TWO\t\t\t expression\n\t\t\t\t\t\t|\texpression\tOP_NOT_EQUALS\t\t\t expression\n\n\t\n\texpression :\tterm\n\t\t\t\t|\tterm\tOP_PLUS\t\texpression\t\n\t\t\t\t|\tterm\tOP_MINUS\texpression\t\n\t\t\t\t\n\t\n\tterm\t:\tfact\n\t\t\t|\tfact\tOP_DIVISION\t\tterm\t\n\t\t\t|\tfact\tOP_TIMES\t\tterm\t\n\n\t\n\tfact\t:\tvar_cte\n\t\t\t|\tOP_LPAREN\t\tmega_expression\t\tOP_RPAREN\t\n\t\n\tvar_cte : \tID\n\t\t\t| \tVAR_INT\n\t\t\t|\tVAR_FLOAT\n\t\t\t|\tVAR_STRING\n\t\n\tfun_esp\t\t:\tfigure_creation\n\t\n\tfigure_creation\t\t:\tFIGURE\tID\tOP_TWO_POINTS\tfigure\tPOSSESS\t\tbloque_figura\n\t\n\tfigure\t:\tPOINT\n\t\t\t|\tLINE\n\t\t\t|\tSQUARE\n\t\t\t|\tRECTANGLE\n\t\t\t|\tTRIANGLE\n\t\t\t|\tCIRCLE\n\t\t\t|\tARC\n\t\n\tbloque_figura\t:\tLCURLY_BRACKET\tbloque_figura_primo\tRCURLY_BRACKET\t\n\t\n\t\n\tbloque_figura_primo\t:\tbloque_figura_primo\t\tfigura_attr\n\t\t\t\t\t\t|\tepsilon\n\t\t\t\n\t\n\tfigura_attr\t:\tvector\n\t\t\t\t|\tCOLOR\tOP_TWO_POINTS\tID\tSEMICOLON\n\t\t\t\t|\tSIZE\tOP_TWO_POINTS\tsingle_expression\tSEMICOLON\n\t\n\tvector\t:\tVECTOR\t\tID\t\tOP_TWO_POINTS\t\tOP_LPAREN\tsingle_expression\tCOMA\tsingle_expression\tOP_RPAREN\tSEMICOLON\n\tepsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,22,],[0,-1,]),'ID':([2,6,7,8,9,10,11,15,16,19,20,27,33,35,36,37,39,46,49,50,55,56,58,59,62,64,67,68,69,70,71,72,73,74,75,76,81,82,83,88,90,91,94,95,96,97,99,100,101,102,113,115,117,128,130,131,132,133,134,137,139,140,141,142,145,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,171,172,173,174,175,184,185,188,189,202,212,214,216,217,220,222,223,224,225,226,227,228,229,230,231,232,236,237,242,243,244,251,253,],[3,-117,-4,-15,-16,-17,-18,21,-9,25,26,33,-97,-98,-99,-100,47,-117,-117,60,-117,-3,77,-24,86,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,33,-101,103,33,33,33,113,33,33,129,-71,-74,-77,33,113,145,33,33,-57,33,33,33,33,-45,-52,-53,-54,-55,113,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-72,-73,-75,-76,-78,33,-58,-47,-117,-49,219,-46,77,-36,-102,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-56,-110,245,246,33,33,33,]),'LCURLY_BRACKET':([3,41,61,63,147,213,215,233,],[4,49,49,49,189,221,189,189,]),'INT':([4,7,13,33,35,36,37,42,43,46,49,52,55,56,58,59,60,64,67,68,69,70,71,72,73,74,75,76,82,86,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,202,214,220,222,223,236,237,],[8,-4,8,-97,-98,-99,-100,8,8,8,-117,8,8,-3,8,-24,8,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,8,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-49,-46,-102,-48,-34,-56,-110,]),'FLOAT':([4,7,13,33,35,36,37,42,43,46,49,52,55,56,58,59,60,64,67,68,69,70,71,72,73,74,75,76,82,86,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,202,214,220,222,223,236,237,],[9,-4,9,-97,-98,-99,-100,9,9,9,-117,9,9,-3,9,-24,9,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,9,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-49,-46,-102,-48,-34,-56,-110,]),'STRING':([4,7,13,33,35,36,37,42,43,46,49,52,55,56,58,59,60,64,67,68,69,70,71,72,73,74,75,76,82,86,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,202,214,220,222,223,236,237,],[10,-4,10,-97,-98,-99,-100,10,10,10,-117,10,10,-3,10,-24,10,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,10,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-49,-46,-102,-48,-34,-56,-110,]),'BOOLEAN':([4,7,13,33,35,36,37,42,43,46,49,52,55,56,58,59,60,64,67,68,69,70,71,72,73,74,75,76,82,86,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,202,214,220,222,223,236,237,],[11,-4,11,-97,-98,-99,-100,11,11,11,-117,11,11,-3,11,-24,11,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,11,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-49,-46,-102,-48,-34,-56,-110,]),'FUNCTION':([4,5,7,46,55,56,64,66,85,87,],[-117,13,-4,-117,-117,-3,-2,-22,13,13,]),'MAIN':([4,5,7,12,14,46,55,56,64,66,85,87,104,106,],[-117,-117,-4,18,-12,-117,-117,-3,-2,-22,-117,-117,-10,-11,]),'RCURLY_BRACKET':([7,17,33,35,36,37,46,48,49,55,56,58,59,64,66,67,68,69,70,71,72,73,74,75,76,82,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,189,202,214,216,217,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,249,250,256,],[-4,22,-97,-98,-99,-100,-117,-14,-117,-117,-3,66,-24,-2,-22,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-117,-49,-46,223,-36,-102,-117,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,237,-112,-56,-110,-111,-113,-114,-115,-116,]),'IF':([7,33,35,36,37,46,49,55,56,58,59,64,67,68,69,70,71,72,73,74,75,76,82,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,189,202,214,216,217,220,222,223,224,225,226,227,228,229,230,231,232,236,237,],[-4,-97,-98,-99,-100,-117,-117,-117,-3,78,-24,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-117,-49,-46,78,-36,-102,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-56,-110,]),'PRINT':([7,33,35,36,37,46,49,55,56,58,59,64,67,68,69,70,71,72,73,74,75,76,82,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,189,202,214,216,217,220,222,223,224,225,226,227,228,229,230,231,232,236,237,],[-4,-97,-98,-99,-100,-117,-117,-117,-3,79,-24,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-117,-49,-46,79,-36,-102,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-56,-110,]),'FOR':([7,33,35,36,37,46,49,55,56,58,59,64,67,68,69,70,71,72,73,74,75,76,82,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,189,202,214,216,217,220,222,223,224,225,226,227,228,229,230,231,232,236,237,],[-4,-97,-98,-99,-100,-117,-117,-117,-3,80,-24,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-117,-49,-46,80,-36,-102,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-56,-110,]),'RETURN':([7,33,35,36,37,46,49,55,56,58,59,64,67,68,69,70,71,72,73,74,75,76,82,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,189,202,214,216,217,220,222,223,224,225,226,227,228,229,230,231,232,236,237,],[-4,-97,-98,-99,-100,-117,-117,-117,-3,81,-24,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-117,-49,-46,81,-36,-102,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-56,-110,]),'FIGURE':([7,33,35,36,37,46,49,55,56,58,59,64,67,68,69,70,71,72,73,74,75,76,82,99,100,101,130,137,139,140,141,142,171,172,173,174,175,185,188,189,202,214,216,217,220,222,223,224,225,226,227,228,229,230,231,232,236,237,],[-4,-97,-98,-99,-100,-117,-117,-117,-3,83,-24,-2,-23,-25,-26,-27,-28,-29,-30,-31,-32,-33,-101,-71,-74,-77,-57,-45,-52,-53,-54,-55,-72,-73,-75,-76,-78,-58,-47,-117,-49,-46,83,-36,-102,-48,-34,-35,-37,-38,-39,-40,-41,-42,-43,-44,-56,-110,]),'VOID':([13,],[20,]),'OP_LPAREN':([18,23,24,25,26,31,32,33,35,36,37,77,78,79,80,81,88,90,91,95,96,99,100,101,102,117,128,131,132,133,134,137,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,171,172,173,174,175,184,214,244,248,251,253,],[-117,30,-13,-117,-117,42,43,-97,-98,-99,-100,94,95,96,97,102,102,102,102,117,117,-71,-74,-77,102,117,117,102,102,102,102,-45,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-72,-73,-75,-76,-78,102,-46,102,251,102,102,]),'OP_EQUALS':([21,77,129,138,],[27,88,88,184,]),'COMA':([21,28,29,33,35,36,37,42,43,47,57,60,86,94,99,100,101,113,145,171,172,173,174,175,252,],[-117,39,-8,-97,-98,-99,-100,52,52,-117,39,52,52,115,-71,-74,-77,115,115,-72,-73,-75,-76,-78,253,]),'SEMICOLON':([21,28,29,33,34,35,36,37,38,40,44,45,47,57,65,98,99,100,101,107,109,110,111,112,121,122,123,144,160,170,171,172,173,174,175,187,192,193,194,195,196,197,198,199,200,201,246,247,255,],[-117,-117,-8,-97,-117,-98,-99,-100,46,-6,55,-7,-117,-117,-5,130,-71,-74,-77,137,139,140,141,142,-89,-92,-95,185,202,212,-72,-73,-75,-76,-78,-96,-65,-66,-67,-68,-69,-70,-90,-91,-93,-94,249,250,256,]),'VAR_INT':([27,33,35,36,37,81,88,89,90,91,95,96,99,100,101,102,117,128,131,132,133,134,137,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,171,172,173,174,175,184,214,244,251,253,],[35,-97,-98,-99,-100,35,35,108,35,35,35,35,-71,-74,-77,35,35,35,35,35,35,35,-45,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-72,-73,-75,-76,-78,35,-46,35,35,35,]),'VAR_FLOAT':([27,33,35,36,37,81,88,90,91,95,96,99,100,101,102,117,128,131,132,133,134,137,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,171,172,173,174,175,184,214,244,251,253,],[36,-97,-98,-99,-100,36,36,36,36,36,36,-71,-74,-77,36,36,36,36,36,36,36,-45,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-72,-73,-75,-76,-78,36,-46,36,36,36,]),'VAR_STRING':([27,33,35,36,37,81,88,90,91,95,96,99,100,101,102,117,128,131,132,133,134,137,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,171,172,173,174,175,184,214,244,251,253,],[37,-97,-98,-99,-100,37,37,37,37,37,37,-71,-74,-77,37,37,37,37,37,37,37,-45,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-72,-73,-75,-76,-78,37,-46,37,37,37,]),'OP_RPAREN':([30,33,35,36,37,42,43,51,53,54,60,84,86,94,99,100,101,105,113,114,116,118,119,121,122,123,124,125,126,127,135,139,140,141,142,143,145,146,171,172,173,174,175,186,187,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,218,254,],[41,-97,-98,-99,-100,-117,-117,61,-21,63,-117,-19,-117,-117,-71,-74,-77,-20,-117,144,-61,147,-62,-89,-92,-95,160,-50,-79,-82,175,-52,-53,-54,-55,-59,-117,187,-72,-73,-75,-76,-78,-60,-96,-63,-64,-65,-66,-67,-68,-69,-70,-90,-91,-93,-94,-51,-80,-81,-83,-84,-85,-86,-87,-88,233,255,]),'OP_DIVISION':([33,35,36,37,100,101,122,123,175,187,],[-97,-98,-99,-100,133,-77,158,-95,-78,-96,]),'OP_TIMES':([33,35,36,37,100,101,122,123,175,187,],[-97,-98,-99,-100,134,-77,159,-95,-78,-96,]),'OP_PLUS':([33,35,36,37,77,92,99,100,101,121,122,123,125,126,127,173,174,175,187,198,199,200,201,204,205,206,207,208,209,210,211,219,],[-97,-98,-99,-100,92,111,131,-74,-77,156,-92,-95,161,-79,-82,-75,-76,-78,-96,-90,-91,-93,-94,-80,-81,-83,-84,-85,-86,-87,-88,92,]),'OP_MINUS':([33,35,36,37,77,93,99,100,101,121,122,123,173,174,175,187,200,201,219,],[-97,-98,-99,-100,93,112,132,-74,-77,157,-92,-95,-75,-76,-78,-96,-93,-94,93,]),'OP_GREATER_THAN':([33,35,36,37,120,121,122,123,127,187,198,199,200,201,],[-97,-98,-99,-100,150,-89,-92,-95,164,-96,-90,-91,-93,-94,]),'OP_LESS_THAN':([33,35,36,37,120,121,122,123,127,187,198,199,200,201,],[-97,-98,-99,-100,151,-89,-92,-95,165,-96,-90,-91,-93,-94,]),'OP_GREATER_EQUALS_THAN':([33,35,36,37,120,121,122,123,127,187,198,199,200,201,],[-97,-98,-99,-100,152,-89,-92,-95,166,-96,-90,-91,-93,-94,]),'OP_LESS_EQUALS_THAN':([33,35,36,37,120,121,122,123,127,187,198,199,200,201,],[-97,-98,-99,-100,153,-89,-92,-95,167,-96,-90,-91,-93,-94,]),'OP_EQUALS_TWO':([33,35,36,37,120,121,122,123,127,187,198,199,200,201,],[-97,-98,-99,-100,154,-89,-92,-95,168,-96,-90,-91,-93,-94,]),'OP_NOT_EQUALS':([33,35,36,37,120,121,122,123,127,187,198,199,200,201,],[-97,-98,-99,-100,155,-89,-92,-95,169,-96,-90,-91,-93,-94,]),'AND':([33,35,36,37,119,121,122,123,126,127,187,192,193,194,195,196,197,198,199,200,201,206,207,208,209,210,211,],[-97,-98,-99,-100,148,-89,-92,-95,162,-82,-96,-65,-66,-67,-68,-69,-70,-90,-91,-93,-94,-83,-84,-85,-86,-87,-88,]),'OR':([33,35,36,37,119,121,122,123,126,127,187,192,193,194,195,196,197,198,199,200,201,206,207,208,209,210,211,],[-97,-98,-99,-100,149,-89,-92,-95,163,-82,-96,-65,-66,-67,-68,-69,-70,-90,-91,-93,-94,-83,-84,-85,-86,-87,-88,]),'OP_LSQUARE_PAREN':([77,129,],[89,89,]),'OP_PLUS_EQUALS':([77,219,],[90,90,]),'OP_MINUS_EQUALS':([77,219,],[91,91,]),'OP_TWO_POINTS':([103,240,241,245,],[136,243,244,248,]),'OP_RSQUARE_PAREN':([108,],[138,]),'POINT':([136,],[177,]),'LINE':([136,],[178,]),'SQUARE':([136,],[179,]),'RECTANGLE':([136,],[180,]),'TRIANGLE':([136,],[181,]),'CIRCLE':([136,],[182,]),'ARC':([136,],[183,]),'POSSESS':([176,177,178,179,180,181,182,183,],[213,-103,-104,-105,-106,-107,-108,-109,]),'ELSE':([188,223,],[215,-34,]),'COLOR':([221,234,235,238,239,249,250,256,],[-117,240,-112,-111,-113,-114,-115,-116,]),'SIZE':([221,234,235,238,239,249,250,256,],[-117,241,-112,-111,-113,-114,-115,-116,]),'VECTOR':([221,234,235,238,239,249,250,256,],[-117,242,-112,-111,-113,-114,-115,-116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,46,55,58,],[5,56,64,76,]),'type':([4,13,42,43,46,52,55,58,60,86,],[6,19,50,50,6,62,6,6,50,50,]),'epsilon':([4,5,6,18,21,25,26,28,34,42,43,46,47,49,55,57,58,60,85,86,87,94,113,145,189,221,],[7,14,16,24,29,24,24,40,45,53,53,7,29,59,7,40,7,53,14,53,14,116,116,116,217,235,]),'function':([5,85,87,],[12,104,106,]),'save_type':([6,],[15,]),'main_function':([12,],[17,]),'pushTo_FunctionDir':([18,25,26,],[23,31,32,]),'pushTo_varsTable':([21,47,],[28,57,]),'var_cte':([27,81,88,90,91,95,96,102,117,128,131,132,133,134,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,184,244,251,253,],[34,101,101,101,101,123,123,101,123,123,101,101,101,101,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,101,101,101,101,]),'vars_prime':([28,57,],[38,65,]),'pushTo_varsTable_WithCTE':([34,],[44,]),'function_bloque':([41,61,63,],[48,85,87,]),'parameters':([42,43,60,86,],[51,54,84,105,]),'function_bloque_primo':([49,],[58,]),'function_statement':([58,],[67,]),'assigment':([58,97,216,],[68,128,225,]),'if':([58,216,],[69,226,]),'printer':([58,216,],[70,227,]),'increment':([58,212,216,],[71,218,228,]),'for':([58,216,],[72,229,]),'return':([58,216,],[73,230,]),'function_call':([58,216,],[74,231,]),'fun_esp':([58,216,],[75,232,]),'figure_creation':([58,216,],[82,82,]),'single_expression':([81,88,90,91,102,131,132,184,244,251,253,],[98,107,109,110,135,171,172,214,247,252,254,]),'single_term':([81,88,90,91,102,131,132,133,134,184,244,251,253,],[99,99,99,99,99,99,99,173,174,99,99,99,99,]),'single_fact':([81,88,90,91,102,131,132,133,134,184,244,251,253,],[100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_call_prime':([94,113,145,],[114,143,186,]),'condition_mega_expression':([95,],[118,]),'condition_super_expression':([95,128,148,149,],[119,170,190,191,]),'expression':([95,96,117,128,148,149,150,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,169,],[120,127,127,120,120,120,192,193,194,195,196,197,198,199,127,127,127,206,207,208,209,210,211,]),'term':([95,96,117,128,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,200,201,121,121,121,121,121,121,121,121,121,]),'fact':([95,96,117,128,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'impression':([96,161,],[124,203,]),'mega_expression':([96,117,161,],[125,146,125,]),'super_expression':([96,117,161,162,163,],[126,126,126,204,205,]),'figure':([136,],[176,]),'bloque':([147,215,233,],[188,222,236,]),'bloque_primo':([189,],[216,]),'bloque_figura':([213,],[220,]),'statement':([216,],[224,]),'bloque_figura_primo':([221,],[234,]),'figura_attr':([234,],[238,]),'vector':([234,],[239,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET','program',7,'p_program','vcparser.py',11),
  ('vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars','vars',8,'p_vars','vcparser.py',19),
  ('vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars','vars',7,'p_vars','vcparser.py',20),
  ('vars -> epsilon','vars',1,'p_vars','vcparser.py',21),
  ('vars_prime -> COMA ID pushTo_varsTable vars_prime','vars_prime',4,'p_vars_prime','vcparser.py',25),
  ('vars_prime -> epsilon','vars_prime',1,'p_vars_prime','vcparser.py',26),
  ('pushTo_varsTable_WithCTE -> epsilon','pushTo_varsTable_WithCTE',1,'p_pushTo_varsTable_WithCTE','vcparser.py',32),
  ('pushTo_varsTable -> epsilon','pushTo_varsTable',1,'p_pushTo_varsTable','vcparser.py',36),
  ('save_type -> epsilon','save_type',1,'p_save_type','vcparser.py',41),
  ('function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function','function',9,'p_function','vcparser.py',49),
  ('function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function','function',9,'p_function','vcparser.py',50),
  ('function -> epsilon','function',1,'p_function','vcparser.py',51),
  ('pushTo_FunctionDir -> epsilon','pushTo_FunctionDir',1,'p_pushTo_FunctionDir','vcparser.py',55),
  ('main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque','main_function',5,'p_main_function','vcparser.py',61),
  ('type -> INT','type',1,'p_type','vcparser.py',65),
  ('type -> FLOAT','type',1,'p_type','vcparser.py',66),
  ('type -> STRING','type',1,'p_type','vcparser.py',67),
  ('type -> BOOLEAN','type',1,'p_type','vcparser.py',68),
  ('parameters -> type ID parameters','parameters',3,'p_parameters','vcparser.py',74),
  ('parameters -> COMA type ID parameters','parameters',4,'p_parameters','vcparser.py',75),
  ('parameters -> epsilon','parameters',1,'p_parameters','vcparser.py',76),
  ('function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET','function_bloque',3,'p_function_bloque','vcparser.py',80),
  ('function_bloque_primo -> function_bloque_primo function_statement','function_bloque_primo',2,'p_function_bloque_primo','vcparser.py',85),
  ('function_bloque_primo -> epsilon','function_bloque_primo',1,'p_function_bloque_primo','vcparser.py',86),
  ('function_statement -> assigment','function_statement',1,'p_function_statement','vcparser.py',91),
  ('function_statement -> if','function_statement',1,'p_function_statement','vcparser.py',92),
  ('function_statement -> printer','function_statement',1,'p_function_statement','vcparser.py',93),
  ('function_statement -> increment','function_statement',1,'p_function_statement','vcparser.py',94),
  ('function_statement -> for','function_statement',1,'p_function_statement','vcparser.py',95),
  ('function_statement -> return','function_statement',1,'p_function_statement','vcparser.py',96),
  ('function_statement -> function_call','function_statement',1,'p_function_statement','vcparser.py',97),
  ('function_statement -> fun_esp','function_statement',1,'p_function_statement','vcparser.py',98),
  ('function_statement -> vars','function_statement',1,'p_function_statement','vcparser.py',99),
  ('bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET','bloque',3,'p_bloque','vcparser.py',104),
  ('bloque_primo -> bloque_primo statement','bloque_primo',2,'p_bloque_primo','vcparser.py',110),
  ('bloque_primo -> epsilon','bloque_primo',1,'p_bloque_primo','vcparser.py',111),
  ('statement -> assigment','statement',1,'p_statement','vcparser.py',116),
  ('statement -> if','statement',1,'p_statement','vcparser.py',117),
  ('statement -> printer','statement',1,'p_statement','vcparser.py',118),
  ('statement -> increment','statement',1,'p_statement','vcparser.py',119),
  ('statement -> for','statement',1,'p_statement','vcparser.py',120),
  ('statement -> return','statement',1,'p_statement','vcparser.py',121),
  ('statement -> function_call','statement',1,'p_statement','vcparser.py',122),
  ('statement -> fun_esp','statement',1,'p_statement','vcparser.py',123),
  ('assigment -> ID OP_EQUALS single_expression SEMICOLON','assigment',4,'p_assigment','vcparser.py',129),
  ('assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression','assigment',6,'p_assigment','vcparser.py',130),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque','if',5,'p_if','vcparser.py',135),
  ('if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque','if',7,'p_if','vcparser.py',136),
  ('printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON','printer',5,'p_printer','vcparser.py',143),
  ('impression -> mega_expression','impression',1,'p_impression','vcparser.py',148),
  ('impression -> mega_expression OP_PLUS impression','impression',3,'p_impression','vcparser.py',149),
  ('increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',154),
  ('increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON','increment',4,'p_increment','vcparser.py',155),
  ('increment -> ID OP_PLUS OP_PLUS SEMICOLON','increment',4,'p_increment','vcparser.py',156),
  ('increment -> ID OP_MINUS OP_MINUS SEMICOLON','increment',4,'p_increment','vcparser.py',157),
  ('for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque','for',8,'p_for','vcparser.py',162),
  ('return -> RETURN single_expression SEMICOLON','return',3,'p_return','vcparser.py',167),
  ('function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON','function_call',5,'p_function_call','vcparser.py',171),
  ('function_call_prime -> ID function_call_prime','function_call_prime',2,'p_function_call_prime','vcparser.py',175),
  ('function_call_prime -> COMA ID function_call_prime','function_call_prime',3,'p_function_call_prime','vcparser.py',176),
  ('function_call_prime -> epsilon','function_call_prime',1,'p_function_call_prime','vcparser.py',177),
  ('condition_mega_expression -> condition_super_expression','condition_mega_expression',1,'p_condition_mega_expression','vcparser.py',181),
  ('condition_mega_expression -> condition_super_expression AND condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',182),
  ('condition_mega_expression -> condition_super_expression OR condition_super_expression','condition_mega_expression',3,'p_condition_mega_expression','vcparser.py',183),
  ('condition_super_expression -> expression OP_GREATER_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',187),
  ('condition_super_expression -> expression OP_LESS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',188),
  ('condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',189),
  ('condition_super_expression -> expression OP_LESS_EQUALS_THAN expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',190),
  ('condition_super_expression -> expression OP_EQUALS_TWO expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',191),
  ('condition_super_expression -> expression OP_NOT_EQUALS expression','condition_super_expression',3,'p_condition_super_expression','vcparser.py',192),
  ('single_expression -> single_term','single_expression',1,'p_single_expression','vcparser.py',197),
  ('single_expression -> single_term OP_PLUS single_expression','single_expression',3,'p_single_expression','vcparser.py',198),
  ('single_expression -> single_term OP_MINUS single_expression','single_expression',3,'p_single_expression','vcparser.py',199),
  ('single_term -> single_fact','single_term',1,'p_single_term','vcparser.py',203),
  ('single_term -> single_fact OP_DIVISION single_term','single_term',3,'p_single_term','vcparser.py',204),
  ('single_term -> single_fact OP_TIMES single_term','single_term',3,'p_single_term','vcparser.py',205),
  ('single_fact -> var_cte','single_fact',1,'p_single_fact','vcparser.py',210),
  ('single_fact -> OP_LPAREN single_expression OP_RPAREN','single_fact',3,'p_single_fact','vcparser.py',211),
  ('mega_expression -> super_expression','mega_expression',1,'p_mega_expression','vcparser.py',215),
  ('mega_expression -> super_expression AND super_expression','mega_expression',3,'p_mega_expression','vcparser.py',216),
  ('mega_expression -> super_expression OR super_expression','mega_expression',3,'p_mega_expression','vcparser.py',217),
  ('super_expression -> expression','super_expression',1,'p_super_expression','vcparser.py',222),
  ('super_expression -> expression OP_GREATER_THAN expression','super_expression',3,'p_super_expression','vcparser.py',223),
  ('super_expression -> expression OP_LESS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',224),
  ('super_expression -> expression OP_GREATER_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',225),
  ('super_expression -> expression OP_LESS_EQUALS_THAN expression','super_expression',3,'p_super_expression','vcparser.py',226),
  ('super_expression -> expression OP_EQUALS_TWO expression','super_expression',3,'p_super_expression','vcparser.py',227),
  ('super_expression -> expression OP_NOT_EQUALS expression','super_expression',3,'p_super_expression','vcparser.py',228),
  ('expression -> term','expression',1,'p_expression','vcparser.py',233),
  ('expression -> term OP_PLUS expression','expression',3,'p_expression','vcparser.py',234),
  ('expression -> term OP_MINUS expression','expression',3,'p_expression','vcparser.py',235),
  ('term -> fact','term',1,'p_term','vcparser.py',241),
  ('term -> fact OP_DIVISION term','term',3,'p_term','vcparser.py',242),
  ('term -> fact OP_TIMES term','term',3,'p_term','vcparser.py',243),
  ('fact -> var_cte','fact',1,'p_fact','vcparser.py',248),
  ('fact -> OP_LPAREN mega_expression OP_RPAREN','fact',3,'p_fact','vcparser.py',249),
  ('var_cte -> ID','var_cte',1,'p_var_cte','vcparser.py',253),
  ('var_cte -> VAR_INT','var_cte',1,'p_var_cte','vcparser.py',254),
  ('var_cte -> VAR_FLOAT','var_cte',1,'p_var_cte','vcparser.py',255),
  ('var_cte -> VAR_STRING','var_cte',1,'p_var_cte','vcparser.py',256),
  ('fun_esp -> figure_creation','fun_esp',1,'p_fun_esp','vcparser.py',261),
  ('figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura','figure_creation',6,'p_figure_creation','vcparser.py',265),
  ('figure -> POINT','figure',1,'p_figure','vcparser.py',269),
  ('figure -> LINE','figure',1,'p_figure','vcparser.py',270),
  ('figure -> SQUARE','figure',1,'p_figure','vcparser.py',271),
  ('figure -> RECTANGLE','figure',1,'p_figure','vcparser.py',272),
  ('figure -> TRIANGLE','figure',1,'p_figure','vcparser.py',273),
  ('figure -> CIRCLE','figure',1,'p_figure','vcparser.py',274),
  ('figure -> ARC','figure',1,'p_figure','vcparser.py',275),
  ('bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET','bloque_figura',3,'p_bloque_figura','vcparser.py',279),
  ('bloque_figura_primo -> bloque_figura_primo figura_attr','bloque_figura_primo',2,'p_bloque_figura_primo','vcparser.py',285),
  ('bloque_figura_primo -> epsilon','bloque_figura_primo',1,'p_bloque_figura_primo','vcparser.py',286),
  ('figura_attr -> vector','figura_attr',1,'p_figura_attr','vcparser.py',291),
  ('figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON','figura_attr',4,'p_figura_attr','vcparser.py',292),
  ('figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON','figura_attr',4,'p_figura_attr','vcparser.py',293),
  ('vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON','vector',9,'p_vector','vcparser.py',297),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','vcparser.py',300),
]
