Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CARET
    QUOT_MARK
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
Rule 3     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 4     vars -> epsilon
Rule 5     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 6     vars_prime -> epsilon
Rule 7     pushTo_varsTable_WithCTE -> epsilon
Rule 8     pushTo_varsTable -> epsilon
Rule 9     save_type -> epsilon
Rule 10    function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
Rule 11    function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
Rule 12    function -> epsilon
Rule 13    pushTo_FunctionDir -> epsilon
Rule 14    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque
Rule 15    type -> INT
Rule 16    type -> FLOAT
Rule 17    type -> STRING
Rule 18    type -> BOOLEAN
Rule 19    parameters -> type ID parameters
Rule 20    parameters -> COMA type ID parameters
Rule 21    parameters -> epsilon
Rule 22    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 23    function_bloque_primo -> function_bloque_primo function_statement
Rule 24    function_bloque_primo -> epsilon
Rule 25    function_statement -> assigment
Rule 26    function_statement -> if
Rule 27    function_statement -> printer
Rule 28    function_statement -> increment
Rule 29    function_statement -> for
Rule 30    function_statement -> return
Rule 31    function_statement -> function_call
Rule 32    function_statement -> fun_esp
Rule 33    function_statement -> vars
Rule 34    function_statement -> while_loop
Rule 35    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 36    bloque_primo -> bloque_primo statement
Rule 37    bloque_primo -> epsilon
Rule 38    statement -> assigment
Rule 39    statement -> if
Rule 40    statement -> printer
Rule 41    statement -> increment
Rule 42    statement -> for
Rule 43    statement -> return
Rule 44    statement -> function_call
Rule 45    statement -> fun_esp
Rule 46    statement -> while_loop
Rule 47    assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 48    assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
Rule 49    equals_quadruple -> epsilon
Rule 50    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
Rule 51    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
Rule 52    if_gotoF_quadruple -> epsilon
Rule 53    fill_if_gotoF1 -> epsilon
Rule 54    fill_if_gotoF2 -> epsilon
Rule 55    fill_if_goto -> epsilon
Rule 56    if_goto_quadruple -> epsilon
Rule 57    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 58    impression -> mega_expression printer_quadruple
Rule 59    impression -> mega_expression printer_quadruple COMA impression
Rule 60    printer_quadruple -> epsilon
Rule 61    increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 62    increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 63    increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
Rule 64    increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
Rule 65    incrementByOne -> epsilon
Rule 66    increment_equals -> epsilon
Rule 67    for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
Rule 68    while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
Rule 69    loop_jumpCount -> epsilon
Rule 70    loop_gotoF -> epsilon
Rule 71    loop_fill -> epsilon
Rule 72    return -> RETURN mega_expression SEMICOLON
Rule 73    function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
Rule 74    function_call_prime -> ID function_call_prime
Rule 75    function_call_prime -> COMA ID function_call_prime
Rule 76    function_call_prime -> epsilon
Rule 77    mega_expression -> super_expression check_symbol_megaexp
Rule 78    mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp
Rule 79    mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp
Rule 80    check_symbol_megaexp -> epsilon
Rule 81    super_expression -> expression check_symbol_superexp
Rule 82    super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
Rule 83    super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp
Rule 84    super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 85    super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 86    super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
Rule 87    super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
Rule 88    check_symbol_superexp -> epsilon
Rule 89    expression -> term check_symbol_exp
Rule 90    expression -> term check_symbol_exp OP_PLUS push_symbol expression
Rule 91    expression -> term check_symbol_exp OP_MINUS push_symbol expression
Rule 92    push_symbol -> epsilon
Rule 93    check_symbol_exp -> epsilon
Rule 94    term -> fact check_symbol_term
Rule 95    term -> fact check_symbol_term OP_DIVISION push_symbol term
Rule 96    term -> fact check_symbol_term OP_TIMES push_symbol term
Rule 97    check_symbol_term -> epsilon
Rule 98    fact -> var_cte
Rule 99    fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
Rule 100   push_varID_to_Stack -> epsilon
Rule 101   push_bottle_bottom -> epsilon
Rule 102   remove_bottle_bottom -> epsilon
Rule 103   var_cte -> ID push_varID_to_Stack
Rule 104   var_cte -> VAR_INT push_cte_toTable
Rule 105   var_cte -> VAR_FLOAT push_cte_toTable
Rule 106   var_cte -> VAR_STRING push_cte_toTable
Rule 107   var_cte -> VAR_BOOLEAN
Rule 108   push_cte_toTable -> epsilon
Rule 109   fun_esp -> figure_creation
Rule 110   figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
Rule 111   figure -> POINT
Rule 112   figure -> LINE
Rule 113   figure -> SQUARE
Rule 114   figure -> RECTANGLE
Rule 115   figure -> TRIANGLE
Rule 116   figure -> CIRCLE
Rule 117   figure -> ARC
Rule 118   bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET
Rule 119   bloque_figura_primo -> bloque_figura_primo figura_attr
Rule 120   bloque_figura_primo -> epsilon
Rule 121   figura_attr -> vector
Rule 122   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 123   figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON
Rule 124   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON
Rule 125   var_cte_VARS -> ID
Rule 126   var_cte_VARS -> VAR_INT
Rule 127   var_cte_VARS -> VAR_FLOAT
Rule 128   var_cte_VARS -> VAR_STRING
Rule 129   var_cte_VARS -> VAR_BOOLEAN
Rule 130   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 78
ARC                  : 117
BOOLEAN              : 18
CARET                : 
CIRCLE               : 116
COLOR                : 122
COMA                 : 5 20 59 75 124
ELSE                 : 51
FIGURE               : 110
FLOAT                : 16
FOR                  : 67
FUNCTION             : 10 11
ID                   : 1 2 3 5 10 11 19 20 47 48 61 62 63 64 73 74 75 103 110 122 124 125
IF                   : 50 51
INT                  : 15
LCURLY_BRACKET       : 1 22 35 118
LINE                 : 112
MAIN                 : 14
OP_DIVISION          : 95
OP_EQUALS            : 2 47 48
OP_EQUALS_TWO        : 86
OP_GREATER_EQUALS_THAN : 84
OP_GREATER_THAN      : 82
OP_LESS_EQUALS_THAN  : 85
OP_LESS_THAN         : 83
OP_LPAREN            : 10 11 14 50 51 57 67 68 73 99 124
OP_LSQUARE_PAREN     : 48
OP_MINUS             : 64 64 91
OP_MINUS_EQUALS      : 62
OP_NOT_EQUALS        : 87
OP_PLUS              : 63 63 90
OP_PLUS_EQUALS       : 61
OP_RPAREN            : 10 11 14 50 51 57 67 68 73 99 124
OP_RSQUARE_PAREN     : 48
OP_TIMES             : 96
OP_TWO_POINTS        : 110 122 123 124
OR                   : 79
POINT                : 111
POSSESS              : 110
PRINT                : 57
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 22 35 118
RECTANGLE            : 114
RETURN               : 72
SEMICOLON            : 2 3 47 48 57 61 62 63 64 67 72 73 122 123 124
SIZE                 : 123
SQUARE               : 113
STRING               : 17
TRIANGLE             : 115
VAR                  : 
VAR_BOOLEAN          : 107 129
VAR_FLOAT            : 105 127
VAR_INT              : 48 104 126
VAR_STRING           : 106 128
VECTOR               : 124
VOID                 : 11
WHILE                : 68
error                : 

Nonterminals, with rules where they appear

assigment            : 25 38 67
bloque               : 50 51 51 67 68
bloque_figura        : 110
bloque_figura_primo  : 118 119
bloque_primo         : 35 36
check_symbol_exp     : 89 90 91
check_symbol_megaexp : 77 78 79
check_symbol_superexp : 81 82 83 84 85 86 87
check_symbol_term    : 94 95 96
epsilon              : 4 6 7 8 9 12 13 21 24 37 49 52 53 54 55 56 60 65 66 69 70 71 76 80 88 92 93 97 100 101 102 108 120
equals_quadruple     : 47
expression           : 81 82 82 83 83 84 84 85 85 86 86 87 87 90 91
fact                 : 94 95 96
figura_attr          : 119
figure               : 110
figure_creation      : 109
fill_if_goto         : 51
fill_if_gotoF1       : 50
fill_if_gotoF2       : 51
for                  : 29 42
fun_esp              : 32 45
function             : 1 10 11
function_bloque      : 10 11 14
function_bloque_primo : 22 23
function_call        : 31 44
function_call_prime  : 73 74 75
function_statement   : 23
if                   : 26 39
if_gotoF_quadruple   : 50 51
if_goto_quadruple    : 51
impression           : 57 59
increment            : 28 41 67
incrementByOne       : 63 64
increment_equals     : 61 62
loop_fill            : 67 68
loop_gotoF           : 67 68
loop_jumpCount       : 67 68
main_function        : 1
mega_expression      : 47 48 50 51 58 59 61 62 67 68 72 99 123 124 124
parameters           : 10 11 19 20
printer              : 27 40
printer_quadruple    : 58 59
program              : 0
pushTo_FunctionDir   : 10 11 14
pushTo_varsTable     : 3 5
pushTo_varsTable_WithCTE : 2
push_bottle_bottom   : 99
push_cte_toTable     : 104 105 106
push_symbol          : 47 61 62 78 79 82 83 84 85 86 87 90 91 95 96
push_varID_to_Stack  : 47 61 62 63 64 103
remove_bottle_bottom : 99
return               : 30 43
save_type            : 2 3
statement            : 36
super_expression     : 77 78 78 79 79
term                 : 89 90 91 95 96
type                 : 2 3 10 19 20
var_cte              : 98
var_cte_VARS         : 2
vars                 : 1 2 3 33
vars_prime           : 3 5
vector               : 121
while_loop           : 34 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 4


state 4

    (1) program -> PROGRAM ID LCURLY_BRACKET . vars function main_function RCURLY_BRACKET
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 130 (epsilon -> .)
    MAIN            reduce using rule 130 (epsilon -> .)

    vars                           shift and go to state 5
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 5

    (1) program -> PROGRAM ID LCURLY_BRACKET vars . function main_function RCURLY_BRACKET
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (130) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 130 (epsilon -> .)

    function                       shift and go to state 12
    epsilon                        shift and go to state 14

state 6

    (2) vars -> type . save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type . save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (9) save_type -> . epsilon
    (130) epsilon -> .

    ID              reduce using rule 130 (epsilon -> .)

    save_type                      shift and go to state 15
    epsilon                        shift and go to state 16

state 7

    (4) vars -> epsilon .

    FUNCTION        reduce using rule 4 (vars -> epsilon .)
    MAIN            reduce using rule 4 (vars -> epsilon .)
    RCURLY_BRACKET  reduce using rule 4 (vars -> epsilon .)
    ID              reduce using rule 4 (vars -> epsilon .)
    IF              reduce using rule 4 (vars -> epsilon .)
    PRINT           reduce using rule 4 (vars -> epsilon .)
    FOR             reduce using rule 4 (vars -> epsilon .)
    RETURN          reduce using rule 4 (vars -> epsilon .)
    WHILE           reduce using rule 4 (vars -> epsilon .)
    FIGURE          reduce using rule 4 (vars -> epsilon .)
    INT             reduce using rule 4 (vars -> epsilon .)
    FLOAT           reduce using rule 4 (vars -> epsilon .)
    STRING          reduce using rule 4 (vars -> epsilon .)
    BOOLEAN         reduce using rule 4 (vars -> epsilon .)


state 8

    (15) type -> INT .

    ID              reduce using rule 15 (type -> INT .)


state 9

    (16) type -> FLOAT .

    ID              reduce using rule 16 (type -> FLOAT .)


state 10

    (17) type -> STRING .

    ID              reduce using rule 17 (type -> STRING .)


state 11

    (18) type -> BOOLEAN .

    ID              reduce using rule 18 (type -> BOOLEAN .)


state 12

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function . main_function RCURLY_BRACKET
    (14) main_function -> . MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque

    MAIN            shift and go to state 18

    main_function                  shift and go to state 17

state 13

    (10) function -> FUNCTION . type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> FUNCTION . VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN

    VOID            shift and go to state 20
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 19

state 14

    (12) function -> epsilon .

    MAIN            reduce using rule 12 (function -> epsilon .)


state 15

    (2) vars -> type save_type . ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type . ID pushTo_varsTable vars_prime SEMICOLON vars

    ID              shift and go to state 21


state 16

    (9) save_type -> epsilon .

    ID              reduce using rule 9 (save_type -> epsilon .)


state 17

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function . RCURLY_BRACKET

    RCURLY_BRACKET  shift and go to state 22


state 18

    (14) main_function -> MAIN . pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque
    (13) pushTo_FunctionDir -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 23
    epsilon                        shift and go to state 24

state 19

    (10) function -> FUNCTION type . ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function

    ID              shift and go to state 25


state 20

    (11) function -> FUNCTION VOID . ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function

    ID              shift and go to state 26


state 21

    (2) vars -> type save_type ID . OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type ID . pushTo_varsTable vars_prime SEMICOLON vars
    (8) pushTo_varsTable -> . epsilon
    (130) epsilon -> .

    OP_EQUALS       shift and go to state 27
    COMA            reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)

    pushTo_varsTable               shift and go to state 28
    epsilon                        shift and go to state 29

state 22

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .)


state 23

    (14) main_function -> MAIN pushTo_FunctionDir . OP_LPAREN OP_RPAREN function_bloque

    OP_LPAREN       shift and go to state 30


state 24

    (13) pushTo_FunctionDir -> epsilon .

    OP_LPAREN       reduce using rule 13 (pushTo_FunctionDir -> epsilon .)


state 25

    (10) function -> FUNCTION type ID . pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (13) pushTo_FunctionDir -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 31
    epsilon                        shift and go to state 24

state 26

    (11) function -> FUNCTION VOID ID . pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (13) pushTo_FunctionDir -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 32
    epsilon                        shift and go to state 24

state 27

    (2) vars -> type save_type ID OP_EQUALS . var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (125) var_cte_VARS -> . ID
    (126) var_cte_VARS -> . VAR_INT
    (127) var_cte_VARS -> . VAR_FLOAT
    (128) var_cte_VARS -> . VAR_STRING
    (129) var_cte_VARS -> . VAR_BOOLEAN

    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37
    VAR_BOOLEAN     shift and go to state 38

    var_cte_VARS                   shift and go to state 34

state 28

    (3) vars -> type save_type ID pushTo_varsTable . vars_prime SEMICOLON vars
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (130) epsilon -> .

    COMA            shift and go to state 40
    SEMICOLON       reduce using rule 130 (epsilon -> .)

    vars_prime                     shift and go to state 39
    epsilon                        shift and go to state 41

state 29

    (8) pushTo_varsTable -> epsilon .

    COMA            reduce using rule 8 (pushTo_varsTable -> epsilon .)
    SEMICOLON       reduce using rule 8 (pushTo_varsTable -> epsilon .)


state 30

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN . OP_RPAREN function_bloque

    OP_RPAREN       shift and go to state 42


state 31

    (10) function -> FUNCTION type ID pushTo_FunctionDir . OP_LPAREN parameters OP_RPAREN function_bloque function

    OP_LPAREN       shift and go to state 43


state 32

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir . OP_LPAREN parameters OP_RPAREN function_bloque function

    OP_LPAREN       shift and go to state 44


state 33

    (125) var_cte_VARS -> ID .

    SEMICOLON       reduce using rule 125 (var_cte_VARS -> ID .)


state 34

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS . pushTo_varsTable_WithCTE SEMICOLON vars
    (7) pushTo_varsTable_WithCTE -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)

    pushTo_varsTable_WithCTE       shift and go to state 45
    epsilon                        shift and go to state 46

state 35

    (126) var_cte_VARS -> VAR_INT .

    SEMICOLON       reduce using rule 126 (var_cte_VARS -> VAR_INT .)


state 36

    (127) var_cte_VARS -> VAR_FLOAT .

    SEMICOLON       reduce using rule 127 (var_cte_VARS -> VAR_FLOAT .)


state 37

    (128) var_cte_VARS -> VAR_STRING .

    SEMICOLON       reduce using rule 128 (var_cte_VARS -> VAR_STRING .)


state 38

    (129) var_cte_VARS -> VAR_BOOLEAN .

    SEMICOLON       reduce using rule 129 (var_cte_VARS -> VAR_BOOLEAN .)


state 39

    (3) vars -> type save_type ID pushTo_varsTable vars_prime . SEMICOLON vars

    SEMICOLON       shift and go to state 47


state 40

    (5) vars_prime -> COMA . ID pushTo_varsTable vars_prime

    ID              shift and go to state 48


state 41

    (6) vars_prime -> epsilon .

    SEMICOLON       reduce using rule 6 (vars_prime -> epsilon .)


state 42

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN . function_bloque
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 50

    function_bloque                shift and go to state 49

state 43

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN . parameters OP_RPAREN function_bloque function
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

    COMA            shift and go to state 53
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    type                           shift and go to state 51
    parameters                     shift and go to state 52
    epsilon                        shift and go to state 54

state 44

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN . parameters OP_RPAREN function_bloque function
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

    COMA            shift and go to state 53
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    parameters                     shift and go to state 55
    type                           shift and go to state 51
    epsilon                        shift and go to state 54

state 45

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE . SEMICOLON vars

    SEMICOLON       shift and go to state 56


state 46

    (7) pushTo_varsTable_WithCTE -> epsilon .

    SEMICOLON       reduce using rule 7 (pushTo_varsTable_WithCTE -> epsilon .)


state 47

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 130 (epsilon -> .)
    MAIN            reduce using rule 130 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)

  ! INT             [ reduce using rule 130 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 130 (epsilon -> .) ]
  ! STRING          [ reduce using rule 130 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 130 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 57
    epsilon                        shift and go to state 7

state 48

    (5) vars_prime -> COMA ID . pushTo_varsTable vars_prime
    (8) pushTo_varsTable -> . epsilon
    (130) epsilon -> .

    COMA            reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)

    pushTo_varsTable               shift and go to state 58
    epsilon                        shift and go to state 29

state 49

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque .

    RCURLY_BRACKET  reduce using rule 14 (main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque .)


state 50

    (22) function_bloque -> LCURLY_BRACKET . function_bloque_primo RCURLY_BRACKET
    (23) function_bloque_primo -> . function_bloque_primo function_statement
    (24) function_bloque_primo -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    STRING          reduce using rule 130 (epsilon -> .)
    BOOLEAN         reduce using rule 130 (epsilon -> .)

    function_bloque_primo          shift and go to state 59
    epsilon                        shift and go to state 60

state 51

    (19) parameters -> type . ID parameters

    ID              shift and go to state 61


state 52

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters . OP_RPAREN function_bloque function

    OP_RPAREN       shift and go to state 62


state 53

    (20) parameters -> COMA . type ID parameters
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 63

state 54

    (21) parameters -> epsilon .

    OP_RPAREN       reduce using rule 21 (parameters -> epsilon .)


state 55

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters . OP_RPAREN function_bloque function

    OP_RPAREN       shift and go to state 64


state 56

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 130 (epsilon -> .)
    MAIN            reduce using rule 130 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)

  ! INT             [ reduce using rule 130 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 130 (epsilon -> .) ]
  ! STRING          [ reduce using rule 130 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 130 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 65
    epsilon                        shift and go to state 7

state 57

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .

    FUNCTION        reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    MAIN            reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ID              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    IF              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    PRINT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FOR             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RETURN          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    WHILE           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FIGURE          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    INT             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FLOAT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    STRING          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    BOOLEAN         reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)


state 58

    (5) vars_prime -> COMA ID pushTo_varsTable . vars_prime
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (130) epsilon -> .

    COMA            shift and go to state 40
    SEMICOLON       reduce using rule 130 (epsilon -> .)

    vars_prime                     shift and go to state 66
    epsilon                        shift and go to state 41

state 59

    (22) function_bloque -> LCURLY_BRACKET function_bloque_primo . RCURLY_BRACKET
    (23) function_bloque_primo -> function_bloque_primo . function_statement
    (25) function_statement -> . assigment
    (26) function_statement -> . if
    (27) function_statement -> . printer
    (28) function_statement -> . increment
    (29) function_statement -> . for
    (30) function_statement -> . return
    (31) function_statement -> . function_call
    (32) function_statement -> . fun_esp
    (33) function_statement -> . vars
    (34) function_statement -> . while_loop
    (47) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (48) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (50) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (51) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (57) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (61) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (67) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (72) return -> . RETURN mega_expression SEMICOLON
    (73) function_call -> . ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (109) fun_esp -> . figure_creation
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (68) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (110) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

  ! shift/reduce conflict for RCURLY_BRACKET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FIGURE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RCURLY_BRACKET  shift and go to state 67
    ID              shift and go to state 79
    IF              shift and go to state 80
    PRINT           shift and go to state 81
    FOR             shift and go to state 82
    RETURN          shift and go to state 83
    WHILE           shift and go to state 85
    FIGURE          shift and go to state 86
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

  ! RCURLY_BRACKET  [ reduce using rule 130 (epsilon -> .) ]
  ! ID              [ reduce using rule 130 (epsilon -> .) ]
  ! IF              [ reduce using rule 130 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 130 (epsilon -> .) ]
  ! FOR             [ reduce using rule 130 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 130 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 130 (epsilon -> .) ]
  ! FIGURE          [ reduce using rule 130 (epsilon -> .) ]
  ! INT             [ reduce using rule 130 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 130 (epsilon -> .) ]
  ! STRING          [ reduce using rule 130 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 130 (epsilon -> .) ]

    function_statement             shift and go to state 68
    assigment                      shift and go to state 69
    if                             shift and go to state 70
    printer                        shift and go to state 71
    increment                      shift and go to state 72
    for                            shift and go to state 73
    return                         shift and go to state 74
    function_call                  shift and go to state 75
    fun_esp                        shift and go to state 76
    vars                           shift and go to state 77
    while_loop                     shift and go to state 78
    figure_creation                shift and go to state 84
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 60

    (24) function_bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 24 (function_bloque_primo -> epsilon .)
    ID              reduce using rule 24 (function_bloque_primo -> epsilon .)
    IF              reduce using rule 24 (function_bloque_primo -> epsilon .)
    PRINT           reduce using rule 24 (function_bloque_primo -> epsilon .)
    FOR             reduce using rule 24 (function_bloque_primo -> epsilon .)
    RETURN          reduce using rule 24 (function_bloque_primo -> epsilon .)
    WHILE           reduce using rule 24 (function_bloque_primo -> epsilon .)
    FIGURE          reduce using rule 24 (function_bloque_primo -> epsilon .)
    INT             reduce using rule 24 (function_bloque_primo -> epsilon .)
    FLOAT           reduce using rule 24 (function_bloque_primo -> epsilon .)
    STRING          reduce using rule 24 (function_bloque_primo -> epsilon .)
    BOOLEAN         reduce using rule 24 (function_bloque_primo -> epsilon .)


state 61

    (19) parameters -> type ID . parameters
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

    COMA            shift and go to state 53
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    type                           shift and go to state 51
    parameters                     shift and go to state 87
    epsilon                        shift and go to state 54

state 62

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN . function_bloque function
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 50

    function_bloque                shift and go to state 88

state 63

    (20) parameters -> COMA type . ID parameters

    ID              shift and go to state 89


state 64

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN . function_bloque function
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 50

    function_bloque                shift and go to state 90

state 65

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .

    FUNCTION        reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    MAIN            reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    ID              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    IF              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    PRINT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    FOR             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    RETURN          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    WHILE           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    FIGURE          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    INT             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    FLOAT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    STRING          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    BOOLEAN         reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)


state 66

    (5) vars_prime -> COMA ID pushTo_varsTable vars_prime .

    SEMICOLON       reduce using rule 5 (vars_prime -> COMA ID pushTo_varsTable vars_prime .)


state 67

    (22) function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    FUNCTION        reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    MAIN            reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)


state 68

    (23) function_bloque_primo -> function_bloque_primo function_statement .

    RCURLY_BRACKET  reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    ID              reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    IF              reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    PRINT           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FOR             reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    RETURN          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    WHILE           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FIGURE          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    INT             reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FLOAT           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    STRING          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    BOOLEAN         reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)


state 69

    (25) function_statement -> assigment .

    RCURLY_BRACKET  reduce using rule 25 (function_statement -> assigment .)
    ID              reduce using rule 25 (function_statement -> assigment .)
    IF              reduce using rule 25 (function_statement -> assigment .)
    PRINT           reduce using rule 25 (function_statement -> assigment .)
    FOR             reduce using rule 25 (function_statement -> assigment .)
    RETURN          reduce using rule 25 (function_statement -> assigment .)
    WHILE           reduce using rule 25 (function_statement -> assigment .)
    FIGURE          reduce using rule 25 (function_statement -> assigment .)
    INT             reduce using rule 25 (function_statement -> assigment .)
    FLOAT           reduce using rule 25 (function_statement -> assigment .)
    STRING          reduce using rule 25 (function_statement -> assigment .)
    BOOLEAN         reduce using rule 25 (function_statement -> assigment .)


state 70

    (26) function_statement -> if .

    RCURLY_BRACKET  reduce using rule 26 (function_statement -> if .)
    ID              reduce using rule 26 (function_statement -> if .)
    IF              reduce using rule 26 (function_statement -> if .)
    PRINT           reduce using rule 26 (function_statement -> if .)
    FOR             reduce using rule 26 (function_statement -> if .)
    RETURN          reduce using rule 26 (function_statement -> if .)
    WHILE           reduce using rule 26 (function_statement -> if .)
    FIGURE          reduce using rule 26 (function_statement -> if .)
    INT             reduce using rule 26 (function_statement -> if .)
    FLOAT           reduce using rule 26 (function_statement -> if .)
    STRING          reduce using rule 26 (function_statement -> if .)
    BOOLEAN         reduce using rule 26 (function_statement -> if .)


state 71

    (27) function_statement -> printer .

    RCURLY_BRACKET  reduce using rule 27 (function_statement -> printer .)
    ID              reduce using rule 27 (function_statement -> printer .)
    IF              reduce using rule 27 (function_statement -> printer .)
    PRINT           reduce using rule 27 (function_statement -> printer .)
    FOR             reduce using rule 27 (function_statement -> printer .)
    RETURN          reduce using rule 27 (function_statement -> printer .)
    WHILE           reduce using rule 27 (function_statement -> printer .)
    FIGURE          reduce using rule 27 (function_statement -> printer .)
    INT             reduce using rule 27 (function_statement -> printer .)
    FLOAT           reduce using rule 27 (function_statement -> printer .)
    STRING          reduce using rule 27 (function_statement -> printer .)
    BOOLEAN         reduce using rule 27 (function_statement -> printer .)


state 72

    (28) function_statement -> increment .

    RCURLY_BRACKET  reduce using rule 28 (function_statement -> increment .)
    ID              reduce using rule 28 (function_statement -> increment .)
    IF              reduce using rule 28 (function_statement -> increment .)
    PRINT           reduce using rule 28 (function_statement -> increment .)
    FOR             reduce using rule 28 (function_statement -> increment .)
    RETURN          reduce using rule 28 (function_statement -> increment .)
    WHILE           reduce using rule 28 (function_statement -> increment .)
    FIGURE          reduce using rule 28 (function_statement -> increment .)
    INT             reduce using rule 28 (function_statement -> increment .)
    FLOAT           reduce using rule 28 (function_statement -> increment .)
    STRING          reduce using rule 28 (function_statement -> increment .)
    BOOLEAN         reduce using rule 28 (function_statement -> increment .)


state 73

    (29) function_statement -> for .

    RCURLY_BRACKET  reduce using rule 29 (function_statement -> for .)
    ID              reduce using rule 29 (function_statement -> for .)
    IF              reduce using rule 29 (function_statement -> for .)
    PRINT           reduce using rule 29 (function_statement -> for .)
    FOR             reduce using rule 29 (function_statement -> for .)
    RETURN          reduce using rule 29 (function_statement -> for .)
    WHILE           reduce using rule 29 (function_statement -> for .)
    FIGURE          reduce using rule 29 (function_statement -> for .)
    INT             reduce using rule 29 (function_statement -> for .)
    FLOAT           reduce using rule 29 (function_statement -> for .)
    STRING          reduce using rule 29 (function_statement -> for .)
    BOOLEAN         reduce using rule 29 (function_statement -> for .)


state 74

    (30) function_statement -> return .

    RCURLY_BRACKET  reduce using rule 30 (function_statement -> return .)
    ID              reduce using rule 30 (function_statement -> return .)
    IF              reduce using rule 30 (function_statement -> return .)
    PRINT           reduce using rule 30 (function_statement -> return .)
    FOR             reduce using rule 30 (function_statement -> return .)
    RETURN          reduce using rule 30 (function_statement -> return .)
    WHILE           reduce using rule 30 (function_statement -> return .)
    FIGURE          reduce using rule 30 (function_statement -> return .)
    INT             reduce using rule 30 (function_statement -> return .)
    FLOAT           reduce using rule 30 (function_statement -> return .)
    STRING          reduce using rule 30 (function_statement -> return .)
    BOOLEAN         reduce using rule 30 (function_statement -> return .)


state 75

    (31) function_statement -> function_call .

    RCURLY_BRACKET  reduce using rule 31 (function_statement -> function_call .)
    ID              reduce using rule 31 (function_statement -> function_call .)
    IF              reduce using rule 31 (function_statement -> function_call .)
    PRINT           reduce using rule 31 (function_statement -> function_call .)
    FOR             reduce using rule 31 (function_statement -> function_call .)
    RETURN          reduce using rule 31 (function_statement -> function_call .)
    WHILE           reduce using rule 31 (function_statement -> function_call .)
    FIGURE          reduce using rule 31 (function_statement -> function_call .)
    INT             reduce using rule 31 (function_statement -> function_call .)
    FLOAT           reduce using rule 31 (function_statement -> function_call .)
    STRING          reduce using rule 31 (function_statement -> function_call .)
    BOOLEAN         reduce using rule 31 (function_statement -> function_call .)


state 76

    (32) function_statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 32 (function_statement -> fun_esp .)
    ID              reduce using rule 32 (function_statement -> fun_esp .)
    IF              reduce using rule 32 (function_statement -> fun_esp .)
    PRINT           reduce using rule 32 (function_statement -> fun_esp .)
    FOR             reduce using rule 32 (function_statement -> fun_esp .)
    RETURN          reduce using rule 32 (function_statement -> fun_esp .)
    WHILE           reduce using rule 32 (function_statement -> fun_esp .)
    FIGURE          reduce using rule 32 (function_statement -> fun_esp .)
    INT             reduce using rule 32 (function_statement -> fun_esp .)
    FLOAT           reduce using rule 32 (function_statement -> fun_esp .)
    STRING          reduce using rule 32 (function_statement -> fun_esp .)
    BOOLEAN         reduce using rule 32 (function_statement -> fun_esp .)


state 77

    (33) function_statement -> vars .

    RCURLY_BRACKET  reduce using rule 33 (function_statement -> vars .)
    ID              reduce using rule 33 (function_statement -> vars .)
    IF              reduce using rule 33 (function_statement -> vars .)
    PRINT           reduce using rule 33 (function_statement -> vars .)
    FOR             reduce using rule 33 (function_statement -> vars .)
    RETURN          reduce using rule 33 (function_statement -> vars .)
    WHILE           reduce using rule 33 (function_statement -> vars .)
    FIGURE          reduce using rule 33 (function_statement -> vars .)
    INT             reduce using rule 33 (function_statement -> vars .)
    FLOAT           reduce using rule 33 (function_statement -> vars .)
    STRING          reduce using rule 33 (function_statement -> vars .)
    BOOLEAN         reduce using rule 33 (function_statement -> vars .)


state 78

    (34) function_statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 34 (function_statement -> while_loop .)
    ID              reduce using rule 34 (function_statement -> while_loop .)
    IF              reduce using rule 34 (function_statement -> while_loop .)
    PRINT           reduce using rule 34 (function_statement -> while_loop .)
    FOR             reduce using rule 34 (function_statement -> while_loop .)
    RETURN          reduce using rule 34 (function_statement -> while_loop .)
    WHILE           reduce using rule 34 (function_statement -> while_loop .)
    FIGURE          reduce using rule 34 (function_statement -> while_loop .)
    INT             reduce using rule 34 (function_statement -> while_loop .)
    FLOAT           reduce using rule 34 (function_statement -> while_loop .)
    STRING          reduce using rule 34 (function_statement -> while_loop .)
    BOOLEAN         reduce using rule 34 (function_statement -> while_loop .)


state 79

    (47) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (48) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (61) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (73) function_call -> ID . OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (100) push_varID_to_Stack -> . epsilon
    (130) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 92
    OP_LPAREN       shift and go to state 93
    OP_EQUALS       reduce using rule 130 (epsilon -> .)
    OP_PLUS_EQUALS  reduce using rule 130 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 91
    epsilon                        shift and go to state 94

state 80

    (50) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (51) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_LPAREN       shift and go to state 95


state 81

    (57) printer -> PRINT . OP_LPAREN impression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 96


state 82

    (67) for -> FOR . OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    OP_LPAREN       shift and go to state 97


state 83

    (72) return -> RETURN . mega_expression SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 98
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 84

    (109) fun_esp -> figure_creation .

    RCURLY_BRACKET  reduce using rule 109 (fun_esp -> figure_creation .)
    ID              reduce using rule 109 (fun_esp -> figure_creation .)
    IF              reduce using rule 109 (fun_esp -> figure_creation .)
    PRINT           reduce using rule 109 (fun_esp -> figure_creation .)
    FOR             reduce using rule 109 (fun_esp -> figure_creation .)
    RETURN          reduce using rule 109 (fun_esp -> figure_creation .)
    WHILE           reduce using rule 109 (fun_esp -> figure_creation .)
    FIGURE          reduce using rule 109 (fun_esp -> figure_creation .)
    INT             reduce using rule 109 (fun_esp -> figure_creation .)
    FLOAT           reduce using rule 109 (fun_esp -> figure_creation .)
    STRING          reduce using rule 109 (fun_esp -> figure_creation .)
    BOOLEAN         reduce using rule 109 (fun_esp -> figure_creation .)


state 85

    (68) while_loop -> WHILE . loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (69) loop_jumpCount -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)

    loop_jumpCount                 shift and go to state 110
    epsilon                        shift and go to state 111

state 86

    (110) figure_creation -> FIGURE . ID OP_TWO_POINTS figure POSSESS bloque_figura

    ID              shift and go to state 112


state 87

    (19) parameters -> type ID parameters .

    OP_RPAREN       reduce using rule 19 (parameters -> type ID parameters .)


state 88

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (130) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 130 (epsilon -> .)

    function                       shift and go to state 113
    epsilon                        shift and go to state 14

state 89

    (20) parameters -> COMA type ID . parameters
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (130) epsilon -> .

    COMA            shift and go to state 53
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    type                           shift and go to state 51
    parameters                     shift and go to state 114
    epsilon                        shift and go to state 54

state 90

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (130) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 130 (epsilon -> .)

    function                       shift and go to state 115
    epsilon                        shift and go to state 14

state 91

    (47) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (61) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_EQUALS       shift and go to state 116
    OP_PLUS_EQUALS  shift and go to state 117
    OP_MINUS_EQUALS shift and go to state 118
    OP_PLUS         shift and go to state 119
    OP_MINUS        shift and go to state 120


state 92

    (48) assigment -> ID OP_LSQUARE_PAREN . VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    VAR_INT         shift and go to state 121


state 93

    (73) function_call -> ID OP_LPAREN . function_call_prime OP_RPAREN SEMICOLON
    (74) function_call_prime -> . ID function_call_prime
    (75) function_call_prime -> . COMA ID function_call_prime
    (76) function_call_prime -> . epsilon
    (130) epsilon -> .

    ID              shift and go to state 122
    COMA            shift and go to state 124
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    function_call_prime            shift and go to state 123
    epsilon                        shift and go to state 125

state 94

    (100) push_varID_to_Stack -> epsilon .

    OP_EQUALS       reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_DIVISION     reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_TIMES        reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_THAN reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_LESS_THAN    reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    AND             reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OR              reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    SEMICOLON       reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    OP_RPAREN       reduce using rule 100 (push_varID_to_Stack -> epsilon .)
    COMA            reduce using rule 100 (push_varID_to_Stack -> epsilon .)


state 95

    (50) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (51) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 126
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 96

    (57) printer -> PRINT OP_LPAREN . impression OP_RPAREN SEMICOLON
    (58) impression -> . mega_expression printer_quadruple
    (59) impression -> . mega_expression printer_quadruple COMA impression
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    impression                     shift and go to state 127
    mega_expression                shift and go to state 128
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 97

    (67) for -> FOR OP_LPAREN . assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (47) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (48) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    ID              shift and go to state 130

    assigment                      shift and go to state 129

state 98

    (72) return -> RETURN mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 131


state 99

    (77) mega_expression -> super_expression . check_symbol_megaexp
    (78) mega_expression -> super_expression . AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> super_expression . OR push_symbol super_expression check_symbol_megaexp
    (80) check_symbol_megaexp -> . epsilon
    (130) epsilon -> .

    AND             shift and go to state 133
    OR              shift and go to state 134
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 132
    epsilon                        shift and go to state 135

state 100

    (81) super_expression -> expression . check_symbol_superexp
    (82) super_expression -> expression . OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> expression . OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> expression . OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> expression . OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> expression . OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> expression . OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    OP_GREATER_THAN shift and go to state 137
    OP_LESS_THAN    shift and go to state 138
    OP_GREATER_EQUALS_THAN shift and go to state 139
    OP_LESS_EQUALS_THAN shift and go to state 140
    OP_EQUALS_TWO   shift and go to state 141
    OP_NOT_EQUALS   shift and go to state 142
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 136
    epsilon                        shift and go to state 143

state 101

    (89) expression -> term . check_symbol_exp
    (90) expression -> term . check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> term . check_symbol_exp OP_MINUS push_symbol expression
    (93) check_symbol_exp -> . epsilon
    (130) epsilon -> .

    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_exp               shift and go to state 144
    epsilon                        shift and go to state 145

state 102

    (94) term -> fact . check_symbol_term
    (95) term -> fact . check_symbol_term OP_DIVISION push_symbol term
    (96) term -> fact . check_symbol_term OP_TIMES push_symbol term
    (97) check_symbol_term -> . epsilon
    (130) epsilon -> .

    OP_DIVISION     reduce using rule 130 (epsilon -> .)
    OP_TIMES        reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_term              shift and go to state 146
    epsilon                        shift and go to state 147

state 103

    (98) fact -> var_cte .

    OP_DIVISION     reduce using rule 98 (fact -> var_cte .)
    OP_TIMES        reduce using rule 98 (fact -> var_cte .)
    OP_PLUS         reduce using rule 98 (fact -> var_cte .)
    OP_MINUS        reduce using rule 98 (fact -> var_cte .)
    OP_GREATER_THAN reduce using rule 98 (fact -> var_cte .)
    OP_LESS_THAN    reduce using rule 98 (fact -> var_cte .)
    OP_GREATER_EQUALS_THAN reduce using rule 98 (fact -> var_cte .)
    OP_LESS_EQUALS_THAN reduce using rule 98 (fact -> var_cte .)
    OP_EQUALS_TWO   reduce using rule 98 (fact -> var_cte .)
    OP_NOT_EQUALS   reduce using rule 98 (fact -> var_cte .)
    AND             reduce using rule 98 (fact -> var_cte .)
    OR              reduce using rule 98 (fact -> var_cte .)
    SEMICOLON       reduce using rule 98 (fact -> var_cte .)
    OP_RPAREN       reduce using rule 98 (fact -> var_cte .)
    COMA            reduce using rule 98 (fact -> var_cte .)


state 104

    (99) fact -> OP_LPAREN . push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (101) push_bottle_bottom -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_bottle_bottom             shift and go to state 148
    epsilon                        shift and go to state 149

state 105

    (103) var_cte -> ID . push_varID_to_Stack
    (100) push_varID_to_Stack -> . epsilon
    (130) epsilon -> .

    OP_DIVISION     reduce using rule 130 (epsilon -> .)
    OP_TIMES        reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 150
    epsilon                        shift and go to state 94

state 106

    (104) var_cte -> VAR_INT . push_cte_toTable
    (108) push_cte_toTable -> . epsilon
    (130) epsilon -> .

    OP_DIVISION     reduce using rule 130 (epsilon -> .)
    OP_TIMES        reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    push_cte_toTable               shift and go to state 151
    epsilon                        shift and go to state 152

state 107

    (105) var_cte -> VAR_FLOAT . push_cte_toTable
    (108) push_cte_toTable -> . epsilon
    (130) epsilon -> .

    OP_DIVISION     reduce using rule 130 (epsilon -> .)
    OP_TIMES        reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    push_cte_toTable               shift and go to state 153
    epsilon                        shift and go to state 152

state 108

    (106) var_cte -> VAR_STRING . push_cte_toTable
    (108) push_cte_toTable -> . epsilon
    (130) epsilon -> .

    OP_DIVISION     reduce using rule 130 (epsilon -> .)
    OP_TIMES        reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    push_cte_toTable               shift and go to state 154
    epsilon                        shift and go to state 152

state 109

    (107) var_cte -> VAR_BOOLEAN .

    OP_DIVISION     reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_TIMES        reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_PLUS         reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_MINUS        reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_GREATER_THAN reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_LESS_THAN    reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_EQUALS_TWO   reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_NOT_EQUALS   reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    AND             reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OR              reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    SEMICOLON       reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    OP_RPAREN       reduce using rule 107 (var_cte -> VAR_BOOLEAN .)
    COMA            reduce using rule 107 (var_cte -> VAR_BOOLEAN .)


state 110

    (68) while_loop -> WHILE loop_jumpCount . OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill

    OP_LPAREN       shift and go to state 155


state 111

    (69) loop_jumpCount -> epsilon .

    OP_LPAREN       reduce using rule 69 (loop_jumpCount -> epsilon .)
    ID              reduce using rule 69 (loop_jumpCount -> epsilon .)
    VAR_INT         reduce using rule 69 (loop_jumpCount -> epsilon .)
    VAR_FLOAT       reduce using rule 69 (loop_jumpCount -> epsilon .)
    VAR_STRING      reduce using rule 69 (loop_jumpCount -> epsilon .)
    VAR_BOOLEAN     reduce using rule 69 (loop_jumpCount -> epsilon .)


state 112

    (110) figure_creation -> FIGURE ID . OP_TWO_POINTS figure POSSESS bloque_figura

    OP_TWO_POINTS   shift and go to state 156


state 113

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .

    MAIN            reduce using rule 10 (function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .)


state 114

    (20) parameters -> COMA type ID parameters .

    OP_RPAREN       reduce using rule 20 (parameters -> COMA type ID parameters .)


state 115

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .

    MAIN            reduce using rule 11 (function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .)


state 116

    (47) assigment -> ID push_varID_to_Stack OP_EQUALS . push_symbol mega_expression equals_quadruple SEMICOLON
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 157
    epsilon                        shift and go to state 158

state 117

    (61) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 159
    epsilon                        shift and go to state 158

state 118

    (62) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 160
    epsilon                        shift and go to state 158

state 119

    (63) increment -> ID push_varID_to_Stack OP_PLUS . OP_PLUS incrementByOne SEMICOLON

    OP_PLUS         shift and go to state 161


state 120

    (64) increment -> ID push_varID_to_Stack OP_MINUS . OP_MINUS incrementByOne SEMICOLON

    OP_MINUS        shift and go to state 162


state 121

    (48) assigment -> ID OP_LSQUARE_PAREN VAR_INT . OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    OP_RSQUARE_PAREN shift and go to state 163


state 122

    (74) function_call_prime -> ID . function_call_prime
    (74) function_call_prime -> . ID function_call_prime
    (75) function_call_prime -> . COMA ID function_call_prime
    (76) function_call_prime -> . epsilon
    (130) epsilon -> .

    ID              shift and go to state 122
    COMA            shift and go to state 124
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    function_call_prime            shift and go to state 164
    epsilon                        shift and go to state 125

state 123

    (73) function_call -> ID OP_LPAREN function_call_prime . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 165


state 124

    (75) function_call_prime -> COMA . ID function_call_prime

    ID              shift and go to state 166


state 125

    (76) function_call_prime -> epsilon .

    OP_RPAREN       reduce using rule 76 (function_call_prime -> epsilon .)


state 126

    (50) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (51) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_RPAREN       shift and go to state 167


state 127

    (57) printer -> PRINT OP_LPAREN impression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 168


state 128

    (58) impression -> mega_expression . printer_quadruple
    (59) impression -> mega_expression . printer_quadruple COMA impression
    (60) printer_quadruple -> . epsilon
    (130) epsilon -> .

    COMA            reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    printer_quadruple              shift and go to state 169
    epsilon                        shift and go to state 170

state 129

    (67) for -> FOR OP_LPAREN assigment . loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (69) loop_jumpCount -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    loop_jumpCount                 shift and go to state 171
    epsilon                        shift and go to state 111

state 130

    (47) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (48) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (100) push_varID_to_Stack -> . epsilon
    (130) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 92
    OP_EQUALS       reduce using rule 130 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 172
    epsilon                        shift and go to state 94

state 131

    (72) return -> RETURN mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    ID              reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    IF              reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    PRINT           reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    FOR             reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    RETURN          reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    WHILE           reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    FIGURE          reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    INT             reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    FLOAT           reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    STRING          reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 72 (return -> RETURN mega_expression SEMICOLON .)


state 132

    (77) mega_expression -> super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 77 (mega_expression -> super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 77 (mega_expression -> super_expression check_symbol_megaexp .)
    COMA            reduce using rule 77 (mega_expression -> super_expression check_symbol_megaexp .)


state 133

    (78) mega_expression -> super_expression AND . push_symbol super_expression check_symbol_megaexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 173
    epsilon                        shift and go to state 158

state 134

    (79) mega_expression -> super_expression OR . push_symbol super_expression check_symbol_megaexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 174
    epsilon                        shift and go to state 158

state 135

    (80) check_symbol_megaexp -> epsilon .

    SEMICOLON       reduce using rule 80 (check_symbol_megaexp -> epsilon .)
    OP_RPAREN       reduce using rule 80 (check_symbol_megaexp -> epsilon .)
    COMA            reduce using rule 80 (check_symbol_megaexp -> epsilon .)


state 136

    (81) super_expression -> expression check_symbol_superexp .

    AND             reduce using rule 81 (super_expression -> expression check_symbol_superexp .)
    OR              reduce using rule 81 (super_expression -> expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 81 (super_expression -> expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 81 (super_expression -> expression check_symbol_superexp .)
    COMA            reduce using rule 81 (super_expression -> expression check_symbol_superexp .)


state 137

    (82) super_expression -> expression OP_GREATER_THAN . push_symbol expression check_symbol_superexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 175
    epsilon                        shift and go to state 158

state 138

    (83) super_expression -> expression OP_LESS_THAN . push_symbol expression check_symbol_superexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 176
    epsilon                        shift and go to state 158

state 139

    (84) super_expression -> expression OP_GREATER_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 177
    epsilon                        shift and go to state 158

state 140

    (85) super_expression -> expression OP_LESS_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 178
    epsilon                        shift and go to state 158

state 141

    (86) super_expression -> expression OP_EQUALS_TWO . push_symbol expression check_symbol_superexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 179
    epsilon                        shift and go to state 158

state 142

    (87) super_expression -> expression OP_NOT_EQUALS . push_symbol expression check_symbol_superexp
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 180
    epsilon                        shift and go to state 158

state 143

    (88) check_symbol_superexp -> epsilon .

    AND             reduce using rule 88 (check_symbol_superexp -> epsilon .)
    OR              reduce using rule 88 (check_symbol_superexp -> epsilon .)
    SEMICOLON       reduce using rule 88 (check_symbol_superexp -> epsilon .)
    OP_RPAREN       reduce using rule 88 (check_symbol_superexp -> epsilon .)
    COMA            reduce using rule 88 (check_symbol_superexp -> epsilon .)


state 144

    (89) expression -> term check_symbol_exp .
    (90) expression -> term check_symbol_exp . OP_PLUS push_symbol expression
    (91) expression -> term check_symbol_exp . OP_MINUS push_symbol expression

    OP_GREATER_THAN reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_LESS_THAN    reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_GREATER_EQUALS_THAN reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_LESS_EQUALS_THAN reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_EQUALS_TWO   reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_NOT_EQUALS   reduce using rule 89 (expression -> term check_symbol_exp .)
    AND             reduce using rule 89 (expression -> term check_symbol_exp .)
    OR              reduce using rule 89 (expression -> term check_symbol_exp .)
    SEMICOLON       reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_RPAREN       reduce using rule 89 (expression -> term check_symbol_exp .)
    COMA            reduce using rule 89 (expression -> term check_symbol_exp .)
    OP_PLUS         shift and go to state 181
    OP_MINUS        shift and go to state 182


state 145

    (93) check_symbol_exp -> epsilon .

    OP_PLUS         reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_MINUS        reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_GREATER_THAN reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_LESS_THAN    reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 93 (check_symbol_exp -> epsilon .)
    AND             reduce using rule 93 (check_symbol_exp -> epsilon .)
    OR              reduce using rule 93 (check_symbol_exp -> epsilon .)
    SEMICOLON       reduce using rule 93 (check_symbol_exp -> epsilon .)
    OP_RPAREN       reduce using rule 93 (check_symbol_exp -> epsilon .)
    COMA            reduce using rule 93 (check_symbol_exp -> epsilon .)


state 146

    (94) term -> fact check_symbol_term .
    (95) term -> fact check_symbol_term . OP_DIVISION push_symbol term
    (96) term -> fact check_symbol_term . OP_TIMES push_symbol term

    OP_PLUS         reduce using rule 94 (term -> fact check_symbol_term .)
    OP_MINUS        reduce using rule 94 (term -> fact check_symbol_term .)
    OP_GREATER_THAN reduce using rule 94 (term -> fact check_symbol_term .)
    OP_LESS_THAN    reduce using rule 94 (term -> fact check_symbol_term .)
    OP_GREATER_EQUALS_THAN reduce using rule 94 (term -> fact check_symbol_term .)
    OP_LESS_EQUALS_THAN reduce using rule 94 (term -> fact check_symbol_term .)
    OP_EQUALS_TWO   reduce using rule 94 (term -> fact check_symbol_term .)
    OP_NOT_EQUALS   reduce using rule 94 (term -> fact check_symbol_term .)
    AND             reduce using rule 94 (term -> fact check_symbol_term .)
    OR              reduce using rule 94 (term -> fact check_symbol_term .)
    SEMICOLON       reduce using rule 94 (term -> fact check_symbol_term .)
    OP_RPAREN       reduce using rule 94 (term -> fact check_symbol_term .)
    COMA            reduce using rule 94 (term -> fact check_symbol_term .)
    OP_DIVISION     shift and go to state 183
    OP_TIMES        shift and go to state 184


state 147

    (97) check_symbol_term -> epsilon .

    OP_DIVISION     reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_TIMES        reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_PLUS         reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_MINUS        reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_GREATER_THAN reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_LESS_THAN    reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 97 (check_symbol_term -> epsilon .)
    AND             reduce using rule 97 (check_symbol_term -> epsilon .)
    OR              reduce using rule 97 (check_symbol_term -> epsilon .)
    SEMICOLON       reduce using rule 97 (check_symbol_term -> epsilon .)
    OP_RPAREN       reduce using rule 97 (check_symbol_term -> epsilon .)
    COMA            reduce using rule 97 (check_symbol_term -> epsilon .)


state 148

    (99) fact -> OP_LPAREN push_bottle_bottom . mega_expression OP_RPAREN remove_bottle_bottom
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 185
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 149

    (101) push_bottle_bottom -> epsilon .

    OP_LPAREN       reduce using rule 101 (push_bottle_bottom -> epsilon .)
    ID              reduce using rule 101 (push_bottle_bottom -> epsilon .)
    VAR_INT         reduce using rule 101 (push_bottle_bottom -> epsilon .)
    VAR_FLOAT       reduce using rule 101 (push_bottle_bottom -> epsilon .)
    VAR_STRING      reduce using rule 101 (push_bottle_bottom -> epsilon .)
    VAR_BOOLEAN     reduce using rule 101 (push_bottle_bottom -> epsilon .)


state 150

    (103) var_cte -> ID push_varID_to_Stack .

    OP_DIVISION     reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_TIMES        reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_PLUS         reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_MINUS        reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_THAN reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_THAN    reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_EQUALS_THAN reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_EQUALS_THAN reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_EQUALS_TWO   reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_NOT_EQUALS   reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    AND             reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OR              reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    SEMICOLON       reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    OP_RPAREN       reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)
    COMA            reduce using rule 103 (var_cte -> ID push_varID_to_Stack .)


state 151

    (104) var_cte -> VAR_INT push_cte_toTable .

    OP_DIVISION     reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_TIMES        reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_PLUS         reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_MINUS        reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    AND             reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OR              reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    SEMICOLON       reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    OP_RPAREN       reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)
    COMA            reduce using rule 104 (var_cte -> VAR_INT push_cte_toTable .)


state 152

    (108) push_cte_toTable -> epsilon .

    OP_DIVISION     reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_TIMES        reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_PLUS         reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_MINUS        reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_GREATER_THAN reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_LESS_THAN    reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 108 (push_cte_toTable -> epsilon .)
    AND             reduce using rule 108 (push_cte_toTable -> epsilon .)
    OR              reduce using rule 108 (push_cte_toTable -> epsilon .)
    SEMICOLON       reduce using rule 108 (push_cte_toTable -> epsilon .)
    OP_RPAREN       reduce using rule 108 (push_cte_toTable -> epsilon .)
    COMA            reduce using rule 108 (push_cte_toTable -> epsilon .)


state 153

    (105) var_cte -> VAR_FLOAT push_cte_toTable .

    OP_DIVISION     reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_TIMES        reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_PLUS         reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_MINUS        reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    AND             reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OR              reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    SEMICOLON       reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_RPAREN       reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)
    COMA            reduce using rule 105 (var_cte -> VAR_FLOAT push_cte_toTable .)


state 154

    (106) var_cte -> VAR_STRING push_cte_toTable .

    OP_DIVISION     reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_TIMES        reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_PLUS         reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_MINUS        reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    AND             reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OR              reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    SEMICOLON       reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_RPAREN       reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)
    COMA            reduce using rule 106 (var_cte -> VAR_STRING push_cte_toTable .)


state 155

    (68) while_loop -> WHILE loop_jumpCount OP_LPAREN . mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 186
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 156

    (110) figure_creation -> FIGURE ID OP_TWO_POINTS . figure POSSESS bloque_figura
    (111) figure -> . POINT
    (112) figure -> . LINE
    (113) figure -> . SQUARE
    (114) figure -> . RECTANGLE
    (115) figure -> . TRIANGLE
    (116) figure -> . CIRCLE
    (117) figure -> . ARC

    POINT           shift and go to state 188
    LINE            shift and go to state 189
    SQUARE          shift and go to state 190
    RECTANGLE       shift and go to state 191
    TRIANGLE        shift and go to state 192
    CIRCLE          shift and go to state 193
    ARC             shift and go to state 194

    figure                         shift and go to state 187

state 157

    (47) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol . mega_expression equals_quadruple SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 195
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 158

    (92) push_symbol -> epsilon .

    OP_LPAREN       reduce using rule 92 (push_symbol -> epsilon .)
    ID              reduce using rule 92 (push_symbol -> epsilon .)
    VAR_INT         reduce using rule 92 (push_symbol -> epsilon .)
    VAR_FLOAT       reduce using rule 92 (push_symbol -> epsilon .)
    VAR_STRING      reduce using rule 92 (push_symbol -> epsilon .)
    VAR_BOOLEAN     reduce using rule 92 (push_symbol -> epsilon .)


state 159

    (61) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 196
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 160

    (62) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 197
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 161

    (63) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS . incrementByOne SEMICOLON
    (65) incrementByOne -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)

    incrementByOne                 shift and go to state 198
    epsilon                        shift and go to state 199

state 162

    (64) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS . incrementByOne SEMICOLON
    (65) incrementByOne -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)

    incrementByOne                 shift and go to state 200
    epsilon                        shift and go to state 199

state 163

    (48) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN . OP_EQUALS mega_expression SEMICOLON

    OP_EQUALS       shift and go to state 201


state 164

    (74) function_call_prime -> ID function_call_prime .

    OP_RPAREN       reduce using rule 74 (function_call_prime -> ID function_call_prime .)


state 165

    (73) function_call -> ID OP_LPAREN function_call_prime OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 202


state 166

    (75) function_call_prime -> COMA ID . function_call_prime
    (74) function_call_prime -> . ID function_call_prime
    (75) function_call_prime -> . COMA ID function_call_prime
    (76) function_call_prime -> . epsilon
    (130) epsilon -> .

    ID              shift and go to state 122
    COMA            shift and go to state 124
    OP_RPAREN       reduce using rule 130 (epsilon -> .)

    function_call_prime            shift and go to state 203
    epsilon                        shift and go to state 125

state 167

    (50) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF1
    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (52) if_gotoF_quadruple -> . epsilon
    (130) epsilon -> .

    LCURLY_BRACKET  reduce using rule 130 (epsilon -> .)

    if_gotoF_quadruple             shift and go to state 204
    epsilon                        shift and go to state 205

state 168

    (57) printer -> PRINT OP_LPAREN impression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 206


state 169

    (58) impression -> mega_expression printer_quadruple .
    (59) impression -> mega_expression printer_quadruple . COMA impression

    OP_RPAREN       reduce using rule 58 (impression -> mega_expression printer_quadruple .)
    COMA            shift and go to state 207


state 170

    (60) printer_quadruple -> epsilon .

    COMA            reduce using rule 60 (printer_quadruple -> epsilon .)
    OP_RPAREN       reduce using rule 60 (printer_quadruple -> epsilon .)


state 171

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount . mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 208
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 172

    (47) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    OP_EQUALS       shift and go to state 116


state 173

    (78) mega_expression -> super_expression AND push_symbol . super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    super_expression               shift and go to state 209
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 174

    (79) mega_expression -> super_expression OR push_symbol . super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    super_expression               shift and go to state 210
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 175

    (82) super_expression -> expression OP_GREATER_THAN push_symbol . expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    expression                     shift and go to state 211
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 176

    (83) super_expression -> expression OP_LESS_THAN push_symbol . expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    expression                     shift and go to state 212
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 177

    (84) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    expression                     shift and go to state 213
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 178

    (85) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    expression                     shift and go to state 214
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 179

    (86) super_expression -> expression OP_EQUALS_TWO push_symbol . expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    expression                     shift and go to state 215
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 180

    (87) super_expression -> expression OP_NOT_EQUALS push_symbol . expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    expression                     shift and go to state 216
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 181

    (90) expression -> term check_symbol_exp OP_PLUS . push_symbol expression
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 217
    epsilon                        shift and go to state 158

state 182

    (91) expression -> term check_symbol_exp OP_MINUS . push_symbol expression
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 218
    epsilon                        shift and go to state 158

state 183

    (95) term -> fact check_symbol_term OP_DIVISION . push_symbol term
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 219
    epsilon                        shift and go to state 158

state 184

    (96) term -> fact check_symbol_term OP_TIMES . push_symbol term
    (92) push_symbol -> . epsilon
    (130) epsilon -> .

    OP_LPAREN       reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    VAR_INT         reduce using rule 130 (epsilon -> .)
    VAR_FLOAT       reduce using rule 130 (epsilon -> .)
    VAR_STRING      reduce using rule 130 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 130 (epsilon -> .)

    push_symbol                    shift and go to state 220
    epsilon                        shift and go to state 158

state 185

    (99) fact -> OP_LPAREN push_bottle_bottom mega_expression . OP_RPAREN remove_bottle_bottom

    OP_RPAREN       shift and go to state 221


state 186

    (68) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression . OP_RPAREN loop_gotoF bloque loop_fill

    OP_RPAREN       shift and go to state 222


state 187

    (110) figure_creation -> FIGURE ID OP_TWO_POINTS figure . POSSESS bloque_figura

    POSSESS         shift and go to state 223


state 188

    (111) figure -> POINT .

    POSSESS         reduce using rule 111 (figure -> POINT .)


state 189

    (112) figure -> LINE .

    POSSESS         reduce using rule 112 (figure -> LINE .)


state 190

    (113) figure -> SQUARE .

    POSSESS         reduce using rule 113 (figure -> SQUARE .)


state 191

    (114) figure -> RECTANGLE .

    POSSESS         reduce using rule 114 (figure -> RECTANGLE .)


state 192

    (115) figure -> TRIANGLE .

    POSSESS         reduce using rule 115 (figure -> TRIANGLE .)


state 193

    (116) figure -> CIRCLE .

    POSSESS         reduce using rule 116 (figure -> CIRCLE .)


state 194

    (117) figure -> ARC .

    POSSESS         reduce using rule 117 (figure -> ARC .)


state 195

    (47) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression . equals_quadruple SEMICOLON
    (49) equals_quadruple -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)

    equals_quadruple               shift and go to state 224
    epsilon                        shift and go to state 225

state 196

    (61) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (66) increment_equals -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)

    increment_equals               shift and go to state 226
    epsilon                        shift and go to state 227

state 197

    (62) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (66) increment_equals -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)

    increment_equals               shift and go to state 228
    epsilon                        shift and go to state 227

state 198

    (63) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 229


state 199

    (65) incrementByOne -> epsilon .

    SEMICOLON       reduce using rule 65 (incrementByOne -> epsilon .)


state 200

    (64) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 230


state 201

    (48) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS . mega_expression SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 231
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 202

    (73) function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    ID              reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    IF              reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    INT             reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 73 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)


state 203

    (75) function_call_prime -> COMA ID function_call_prime .

    OP_RPAREN       reduce using rule 75 (function_call_prime -> COMA ID function_call_prime .)


state 204

    (50) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF1
    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (35) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 233

    bloque                         shift and go to state 232

state 205

    (52) if_gotoF_quadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 52 (if_gotoF_quadruple -> epsilon .)


state 206

    (57) printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ID              reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    IF              reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    INT             reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 57 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)


state 207

    (59) impression -> mega_expression printer_quadruple COMA . impression
    (58) impression -> . mega_expression printer_quadruple
    (59) impression -> . mega_expression printer_quadruple COMA impression
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 128
    impression                     shift and go to state 234
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 208

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression . SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    SEMICOLON       shift and go to state 235


state 209

    (78) mega_expression -> super_expression AND push_symbol super_expression . check_symbol_megaexp
    (80) check_symbol_megaexp -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 236
    epsilon                        shift and go to state 135

state 210

    (79) mega_expression -> super_expression OR push_symbol super_expression . check_symbol_megaexp
    (80) check_symbol_megaexp -> . epsilon
    (130) epsilon -> .

    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 237
    epsilon                        shift and go to state 135

state 211

    (82) super_expression -> expression OP_GREATER_THAN push_symbol expression . check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 238
    epsilon                        shift and go to state 143

state 212

    (83) super_expression -> expression OP_LESS_THAN push_symbol expression . check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 239
    epsilon                        shift and go to state 143

state 213

    (84) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 240
    epsilon                        shift and go to state 143

state 214

    (85) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 241
    epsilon                        shift and go to state 143

state 215

    (86) super_expression -> expression OP_EQUALS_TWO push_symbol expression . check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 242
    epsilon                        shift and go to state 143

state 216

    (87) super_expression -> expression OP_NOT_EQUALS push_symbol expression . check_symbol_superexp
    (88) check_symbol_superexp -> . epsilon
    (130) epsilon -> .

    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    check_symbol_superexp          shift and go to state 243
    epsilon                        shift and go to state 143

state 217

    (90) expression -> term check_symbol_exp OP_PLUS push_symbol . expression
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    term                           shift and go to state 101
    expression                     shift and go to state 244
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 218

    (91) expression -> term check_symbol_exp OP_MINUS push_symbol . expression
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    term                           shift and go to state 101
    expression                     shift and go to state 245
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 219

    (95) term -> fact check_symbol_term OP_DIVISION push_symbol . term
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    fact                           shift and go to state 102
    term                           shift and go to state 246
    var_cte                        shift and go to state 103

state 220

    (96) term -> fact check_symbol_term OP_TIMES push_symbol . term
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    fact                           shift and go to state 102
    term                           shift and go to state 247
    var_cte                        shift and go to state 103

state 221

    (99) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN . remove_bottle_bottom
    (102) remove_bottle_bottom -> . epsilon
    (130) epsilon -> .

    OP_DIVISION     reduce using rule 130 (epsilon -> .)
    OP_TIMES        reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 130 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 130 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 130 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 130 (epsilon -> .)
    AND             reduce using rule 130 (epsilon -> .)
    OR              reduce using rule 130 (epsilon -> .)
    SEMICOLON       reduce using rule 130 (epsilon -> .)
    OP_RPAREN       reduce using rule 130 (epsilon -> .)
    COMA            reduce using rule 130 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 248
    epsilon                        shift and go to state 249

state 222

    (68) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN . loop_gotoF bloque loop_fill
    (70) loop_gotoF -> . epsilon
    (130) epsilon -> .

    LCURLY_BRACKET  reduce using rule 130 (epsilon -> .)

    loop_gotoF                     shift and go to state 250
    epsilon                        shift and go to state 251

state 223

    (110) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS . bloque_figura
    (118) bloque_figura -> . LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 253

    bloque_figura                  shift and go to state 252

state 224

    (47) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 254


state 225

    (49) equals_quadruple -> epsilon .

    SEMICOLON       reduce using rule 49 (equals_quadruple -> epsilon .)


state 226

    (61) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 255


state 227

    (66) increment_equals -> epsilon .

    SEMICOLON       reduce using rule 66 (increment_equals -> epsilon .)


state 228

    (62) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 256


state 229

    (63) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    ID              reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    IF              reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FIGURE          reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    INT             reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 63 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)


state 230

    (64) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    ID              reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    IF              reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FIGURE          reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    INT             reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 64 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)


state 231

    (48) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 257


state 232

    (50) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF1
    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (53) fill_if_gotoF1 -> . epsilon
    (54) fill_if_gotoF2 -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    STRING          reduce using rule 130 (epsilon -> .)
    BOOLEAN         reduce using rule 130 (epsilon -> .)
    ELSE            reduce using rule 130 (epsilon -> .)

    fill_if_gotoF1                 shift and go to state 258
    fill_if_gotoF2                 shift and go to state 259
    epsilon                        shift and go to state 260

state 233

    (35) bloque -> LCURLY_BRACKET . bloque_primo RCURLY_BRACKET
    (36) bloque_primo -> . bloque_primo statement
    (37) bloque_primo -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)

    bloque_primo                   shift and go to state 261
    epsilon                        shift and go to state 262

state 234

    (59) impression -> mega_expression printer_quadruple COMA impression .

    OP_RPAREN       reduce using rule 59 (impression -> mega_expression printer_quadruple COMA impression .)


state 235

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON . loop_gotoF increment OP_RPAREN bloque loop_fill
    (70) loop_gotoF -> . epsilon
    (130) epsilon -> .

    ID              reduce using rule 130 (epsilon -> .)

    loop_gotoF                     shift and go to state 263
    epsilon                        shift and go to state 251

state 236

    (78) mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 78 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 78 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 78 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)


state 237

    (79) mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 79 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 79 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 79 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)


state 238

    (82) super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 82 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 82 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 82 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 82 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 82 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)


state 239

    (83) super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 83 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 83 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 83 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 83 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 83 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)


state 240

    (84) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 84 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 84 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 84 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 84 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 84 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 241

    (85) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 85 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 85 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 85 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 85 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 85 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 242

    (86) super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .

    AND             reduce using rule 86 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 86 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 86 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 86 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 86 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)


state 243

    (87) super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .

    AND             reduce using rule 87 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 87 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 87 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 87 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 87 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)


state 244

    (90) expression -> term check_symbol_exp OP_PLUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    AND             reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OR              reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    SEMICOLON       reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_RPAREN       reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    COMA            reduce using rule 90 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)


state 245

    (91) expression -> term check_symbol_exp OP_MINUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    AND             reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OR              reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    SEMICOLON       reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_RPAREN       reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    COMA            reduce using rule 91 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)


state 246

    (95) term -> fact check_symbol_term OP_DIVISION push_symbol term .

    OP_PLUS         reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_MINUS        reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_THAN reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_THAN    reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    AND             reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OR              reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    SEMICOLON       reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_RPAREN       reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    COMA            reduce using rule 95 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)


state 247

    (96) term -> fact check_symbol_term OP_TIMES push_symbol term .

    OP_PLUS         reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_MINUS        reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_THAN reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_THAN    reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    AND             reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OR              reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    SEMICOLON       reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_RPAREN       reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    COMA            reduce using rule 96 (term -> fact check_symbol_term OP_TIMES push_symbol term .)


state 248

    (99) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .

    OP_DIVISION     reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_TIMES        reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_PLUS         reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_MINUS        reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    AND             reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OR              reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    SEMICOLON       reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    COMA            reduce using rule 99 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)


state 249

    (102) remove_bottle_bottom -> epsilon .

    OP_DIVISION     reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_TIMES        reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_PLUS         reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_MINUS        reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_THAN reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_LESS_THAN    reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    AND             reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OR              reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    SEMICOLON       reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    OP_RPAREN       reduce using rule 102 (remove_bottle_bottom -> epsilon .)
    COMA            reduce using rule 102 (remove_bottle_bottom -> epsilon .)


state 250

    (68) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF . bloque loop_fill
    (35) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 233

    bloque                         shift and go to state 264

state 251

    (70) loop_gotoF -> epsilon .

    LCURLY_BRACKET  reduce using rule 70 (loop_gotoF -> epsilon .)
    ID              reduce using rule 70 (loop_gotoF -> epsilon .)


state 252

    (110) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .

    RCURLY_BRACKET  reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    ID              reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    IF              reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    PRINT           reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FOR             reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    RETURN          reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    WHILE           reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FIGURE          reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    INT             reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FLOAT           reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    STRING          reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    BOOLEAN         reduce using rule 110 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)


state 253

    (118) bloque_figura -> LCURLY_BRACKET . bloque_figura_primo RCURLY_BRACKET
    (119) bloque_figura_primo -> . bloque_figura_primo figura_attr
    (120) bloque_figura_primo -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    COLOR           reduce using rule 130 (epsilon -> .)
    SIZE            reduce using rule 130 (epsilon -> .)
    VECTOR          reduce using rule 130 (epsilon -> .)

    bloque_figura_primo            shift and go to state 265
    epsilon                        shift and go to state 266

state 254

    (47) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ID              reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    IF              reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    PRINT           reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FOR             reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RETURN          reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    WHILE           reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FIGURE          reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    INT             reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FLOAT           reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    STRING          reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    OP_LPAREN       reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_INT         reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_FLOAT       reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_STRING      reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 47 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)


state 255

    (61) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FIGURE          reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 61 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 256

    (62) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FIGURE          reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 62 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 257

    (48) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    ID              reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    IF              reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    PRINT           reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FOR             reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    RETURN          reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    WHILE           reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FIGURE          reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    INT             reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FLOAT           reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    STRING          reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    OP_LPAREN       reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_INT         reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_STRING      reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 48 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)


state 258

    (50) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .

    RCURLY_BRACKET  reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    ID              reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    IF              reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    PRINT           reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FOR             reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    RETURN          reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    WHILE           reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FIGURE          reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    INT             reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FLOAT           reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    STRING          reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    BOOLEAN         reduce using rule 50 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)


state 259

    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 . if_goto_quadruple ELSE bloque fill_if_goto
    (56) if_goto_quadruple -> . epsilon
    (130) epsilon -> .

    ELSE            reduce using rule 130 (epsilon -> .)

    if_goto_quadruple              shift and go to state 267
    epsilon                        shift and go to state 268

state 260

    (53) fill_if_gotoF1 -> epsilon .
    (54) fill_if_gotoF2 -> epsilon .

    RCURLY_BRACKET  reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    ID              reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    IF              reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    PRINT           reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    FOR             reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    RETURN          reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    WHILE           reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    FIGURE          reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    INT             reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    FLOAT           reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    STRING          reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    BOOLEAN         reduce using rule 53 (fill_if_gotoF1 -> epsilon .)
    ELSE            reduce using rule 54 (fill_if_gotoF2 -> epsilon .)


state 261

    (35) bloque -> LCURLY_BRACKET bloque_primo . RCURLY_BRACKET
    (36) bloque_primo -> bloque_primo . statement
    (38) statement -> . assigment
    (39) statement -> . if
    (40) statement -> . printer
    (41) statement -> . increment
    (42) statement -> . for
    (43) statement -> . return
    (44) statement -> . function_call
    (45) statement -> . fun_esp
    (46) statement -> . while_loop
    (47) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (48) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (50) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (51) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (57) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (61) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (67) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (72) return -> . RETURN mega_expression SEMICOLON
    (73) function_call -> . ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (109) fun_esp -> . figure_creation
    (68) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (110) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura

    RCURLY_BRACKET  shift and go to state 269
    ID              shift and go to state 79
    IF              shift and go to state 80
    PRINT           shift and go to state 81
    FOR             shift and go to state 82
    RETURN          shift and go to state 83
    WHILE           shift and go to state 85
    FIGURE          shift and go to state 86

    statement                      shift and go to state 270
    assigment                      shift and go to state 271
    if                             shift and go to state 272
    printer                        shift and go to state 273
    increment                      shift and go to state 274
    for                            shift and go to state 275
    return                         shift and go to state 276
    function_call                  shift and go to state 277
    fun_esp                        shift and go to state 278
    while_loop                     shift and go to state 279
    figure_creation                shift and go to state 84

state 262

    (37) bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 37 (bloque_primo -> epsilon .)
    ID              reduce using rule 37 (bloque_primo -> epsilon .)
    IF              reduce using rule 37 (bloque_primo -> epsilon .)
    PRINT           reduce using rule 37 (bloque_primo -> epsilon .)
    FOR             reduce using rule 37 (bloque_primo -> epsilon .)
    RETURN          reduce using rule 37 (bloque_primo -> epsilon .)
    WHILE           reduce using rule 37 (bloque_primo -> epsilon .)
    FIGURE          reduce using rule 37 (bloque_primo -> epsilon .)


state 263

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF . increment OP_RPAREN bloque loop_fill
    (61) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON

    ID              shift and go to state 281

    increment                      shift and go to state 280

state 264

    (68) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque . loop_fill
    (71) loop_fill -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    STRING          reduce using rule 130 (epsilon -> .)
    BOOLEAN         reduce using rule 130 (epsilon -> .)

    loop_fill                      shift and go to state 282
    epsilon                        shift and go to state 283

state 265

    (118) bloque_figura -> LCURLY_BRACKET bloque_figura_primo . RCURLY_BRACKET
    (119) bloque_figura_primo -> bloque_figura_primo . figura_attr
    (121) figura_attr -> . vector
    (122) figura_attr -> . COLOR OP_TWO_POINTS ID SEMICOLON
    (123) figura_attr -> . SIZE OP_TWO_POINTS mega_expression SEMICOLON
    (124) vector -> . VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    RCURLY_BRACKET  shift and go to state 284
    COLOR           shift and go to state 287
    SIZE            shift and go to state 288
    VECTOR          shift and go to state 289

    figura_attr                    shift and go to state 285
    vector                         shift and go to state 286

state 266

    (120) bloque_figura_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 120 (bloque_figura_primo -> epsilon .)
    COLOR           reduce using rule 120 (bloque_figura_primo -> epsilon .)
    SIZE            reduce using rule 120 (bloque_figura_primo -> epsilon .)
    VECTOR          reduce using rule 120 (bloque_figura_primo -> epsilon .)


state 267

    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple . ELSE bloque fill_if_goto

    ELSE            shift and go to state 290


state 268

    (56) if_goto_quadruple -> epsilon .

    ELSE            reduce using rule 56 (if_goto_quadruple -> epsilon .)


state 269

    (35) bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .

    ELSE            reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RCURLY_BRACKET  reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ID              reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    IF              reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FOR             reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    INT             reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    STRING          reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 35 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)


state 270

    (36) bloque_primo -> bloque_primo statement .

    RCURLY_BRACKET  reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    ID              reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    IF              reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    PRINT           reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    FOR             reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    RETURN          reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    WHILE           reduce using rule 36 (bloque_primo -> bloque_primo statement .)
    FIGURE          reduce using rule 36 (bloque_primo -> bloque_primo statement .)


state 271

    (38) statement -> assigment .

    RCURLY_BRACKET  reduce using rule 38 (statement -> assigment .)
    ID              reduce using rule 38 (statement -> assigment .)
    IF              reduce using rule 38 (statement -> assigment .)
    PRINT           reduce using rule 38 (statement -> assigment .)
    FOR             reduce using rule 38 (statement -> assigment .)
    RETURN          reduce using rule 38 (statement -> assigment .)
    WHILE           reduce using rule 38 (statement -> assigment .)
    FIGURE          reduce using rule 38 (statement -> assigment .)


state 272

    (39) statement -> if .

    RCURLY_BRACKET  reduce using rule 39 (statement -> if .)
    ID              reduce using rule 39 (statement -> if .)
    IF              reduce using rule 39 (statement -> if .)
    PRINT           reduce using rule 39 (statement -> if .)
    FOR             reduce using rule 39 (statement -> if .)
    RETURN          reduce using rule 39 (statement -> if .)
    WHILE           reduce using rule 39 (statement -> if .)
    FIGURE          reduce using rule 39 (statement -> if .)


state 273

    (40) statement -> printer .

    RCURLY_BRACKET  reduce using rule 40 (statement -> printer .)
    ID              reduce using rule 40 (statement -> printer .)
    IF              reduce using rule 40 (statement -> printer .)
    PRINT           reduce using rule 40 (statement -> printer .)
    FOR             reduce using rule 40 (statement -> printer .)
    RETURN          reduce using rule 40 (statement -> printer .)
    WHILE           reduce using rule 40 (statement -> printer .)
    FIGURE          reduce using rule 40 (statement -> printer .)


state 274

    (41) statement -> increment .

    RCURLY_BRACKET  reduce using rule 41 (statement -> increment .)
    ID              reduce using rule 41 (statement -> increment .)
    IF              reduce using rule 41 (statement -> increment .)
    PRINT           reduce using rule 41 (statement -> increment .)
    FOR             reduce using rule 41 (statement -> increment .)
    RETURN          reduce using rule 41 (statement -> increment .)
    WHILE           reduce using rule 41 (statement -> increment .)
    FIGURE          reduce using rule 41 (statement -> increment .)


state 275

    (42) statement -> for .

    RCURLY_BRACKET  reduce using rule 42 (statement -> for .)
    ID              reduce using rule 42 (statement -> for .)
    IF              reduce using rule 42 (statement -> for .)
    PRINT           reduce using rule 42 (statement -> for .)
    FOR             reduce using rule 42 (statement -> for .)
    RETURN          reduce using rule 42 (statement -> for .)
    WHILE           reduce using rule 42 (statement -> for .)
    FIGURE          reduce using rule 42 (statement -> for .)


state 276

    (43) statement -> return .

    RCURLY_BRACKET  reduce using rule 43 (statement -> return .)
    ID              reduce using rule 43 (statement -> return .)
    IF              reduce using rule 43 (statement -> return .)
    PRINT           reduce using rule 43 (statement -> return .)
    FOR             reduce using rule 43 (statement -> return .)
    RETURN          reduce using rule 43 (statement -> return .)
    WHILE           reduce using rule 43 (statement -> return .)
    FIGURE          reduce using rule 43 (statement -> return .)


state 277

    (44) statement -> function_call .

    RCURLY_BRACKET  reduce using rule 44 (statement -> function_call .)
    ID              reduce using rule 44 (statement -> function_call .)
    IF              reduce using rule 44 (statement -> function_call .)
    PRINT           reduce using rule 44 (statement -> function_call .)
    FOR             reduce using rule 44 (statement -> function_call .)
    RETURN          reduce using rule 44 (statement -> function_call .)
    WHILE           reduce using rule 44 (statement -> function_call .)
    FIGURE          reduce using rule 44 (statement -> function_call .)


state 278

    (45) statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 45 (statement -> fun_esp .)
    ID              reduce using rule 45 (statement -> fun_esp .)
    IF              reduce using rule 45 (statement -> fun_esp .)
    PRINT           reduce using rule 45 (statement -> fun_esp .)
    FOR             reduce using rule 45 (statement -> fun_esp .)
    RETURN          reduce using rule 45 (statement -> fun_esp .)
    WHILE           reduce using rule 45 (statement -> fun_esp .)
    FIGURE          reduce using rule 45 (statement -> fun_esp .)


state 279

    (46) statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 46 (statement -> while_loop .)
    ID              reduce using rule 46 (statement -> while_loop .)
    IF              reduce using rule 46 (statement -> while_loop .)
    PRINT           reduce using rule 46 (statement -> while_loop .)
    FOR             reduce using rule 46 (statement -> while_loop .)
    RETURN          reduce using rule 46 (statement -> while_loop .)
    WHILE           reduce using rule 46 (statement -> while_loop .)
    FIGURE          reduce using rule 46 (statement -> while_loop .)


state 280

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment . OP_RPAREN bloque loop_fill

    OP_RPAREN       shift and go to state 291


state 281

    (61) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (100) push_varID_to_Stack -> . epsilon
    (130) epsilon -> .

    OP_PLUS_EQUALS  reduce using rule 130 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 130 (epsilon -> .)
    OP_PLUS         reduce using rule 130 (epsilon -> .)
    OP_MINUS        reduce using rule 130 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 292
    epsilon                        shift and go to state 94

state 282

    (68) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    ID              reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    IF              reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    PRINT           reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FOR             reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    RETURN          reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    WHILE           reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FIGURE          reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    INT             reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FLOAT           reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    STRING          reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    BOOLEAN         reduce using rule 68 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)


state 283

    (71) loop_fill -> epsilon .

    RCURLY_BRACKET  reduce using rule 71 (loop_fill -> epsilon .)
    ID              reduce using rule 71 (loop_fill -> epsilon .)
    IF              reduce using rule 71 (loop_fill -> epsilon .)
    PRINT           reduce using rule 71 (loop_fill -> epsilon .)
    FOR             reduce using rule 71 (loop_fill -> epsilon .)
    RETURN          reduce using rule 71 (loop_fill -> epsilon .)
    WHILE           reduce using rule 71 (loop_fill -> epsilon .)
    FIGURE          reduce using rule 71 (loop_fill -> epsilon .)
    INT             reduce using rule 71 (loop_fill -> epsilon .)
    FLOAT           reduce using rule 71 (loop_fill -> epsilon .)
    STRING          reduce using rule 71 (loop_fill -> epsilon .)
    BOOLEAN         reduce using rule 71 (loop_fill -> epsilon .)


state 284

    (118) bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    ID              reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    IF              reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FOR             reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    INT             reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    STRING          reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 118 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)


state 285

    (119) bloque_figura_primo -> bloque_figura_primo figura_attr .

    RCURLY_BRACKET  reduce using rule 119 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    COLOR           reduce using rule 119 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    SIZE            reduce using rule 119 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    VECTOR          reduce using rule 119 (bloque_figura_primo -> bloque_figura_primo figura_attr .)


state 286

    (121) figura_attr -> vector .

    RCURLY_BRACKET  reduce using rule 121 (figura_attr -> vector .)
    COLOR           reduce using rule 121 (figura_attr -> vector .)
    SIZE            reduce using rule 121 (figura_attr -> vector .)
    VECTOR          reduce using rule 121 (figura_attr -> vector .)


state 287

    (122) figura_attr -> COLOR . OP_TWO_POINTS ID SEMICOLON

    OP_TWO_POINTS   shift and go to state 293


state 288

    (123) figura_attr -> SIZE . OP_TWO_POINTS mega_expression SEMICOLON

    OP_TWO_POINTS   shift and go to state 294


state 289

    (124) vector -> VECTOR . ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    ID              shift and go to state 295


state 290

    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE . bloque fill_if_goto
    (35) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 233

    bloque                         shift and go to state 296

state 291

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN . bloque loop_fill
    (35) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 233

    bloque                         shift and go to state 297

state 292

    (61) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (62) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (63) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (64) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_PLUS_EQUALS  shift and go to state 117
    OP_MINUS_EQUALS shift and go to state 118
    OP_PLUS         shift and go to state 119
    OP_MINUS        shift and go to state 120


state 293

    (122) figura_attr -> COLOR OP_TWO_POINTS . ID SEMICOLON

    ID              shift and go to state 298


state 294

    (123) figura_attr -> SIZE OP_TWO_POINTS . mega_expression SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 299
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 295

    (124) vector -> VECTOR ID . OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_TWO_POINTS   shift and go to state 300


state 296

    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque . fill_if_goto
    (55) fill_if_goto -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    STRING          reduce using rule 130 (epsilon -> .)
    BOOLEAN         reduce using rule 130 (epsilon -> .)

    fill_if_goto                   shift and go to state 301
    epsilon                        shift and go to state 302

state 297

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque . loop_fill
    (71) loop_fill -> . epsilon
    (130) epsilon -> .

    RCURLY_BRACKET  reduce using rule 130 (epsilon -> .)
    ID              reduce using rule 130 (epsilon -> .)
    IF              reduce using rule 130 (epsilon -> .)
    PRINT           reduce using rule 130 (epsilon -> .)
    FOR             reduce using rule 130 (epsilon -> .)
    RETURN          reduce using rule 130 (epsilon -> .)
    WHILE           reduce using rule 130 (epsilon -> .)
    FIGURE          reduce using rule 130 (epsilon -> .)
    INT             reduce using rule 130 (epsilon -> .)
    FLOAT           reduce using rule 130 (epsilon -> .)
    STRING          reduce using rule 130 (epsilon -> .)
    BOOLEAN         reduce using rule 130 (epsilon -> .)

    loop_fill                      shift and go to state 303
    epsilon                        shift and go to state 283

state 298

    (122) figura_attr -> COLOR OP_TWO_POINTS ID . SEMICOLON

    SEMICOLON       shift and go to state 304


state 299

    (123) figura_attr -> SIZE OP_TWO_POINTS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 305


state 300

    (124) vector -> VECTOR ID OP_TWO_POINTS . OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 306


state 301

    (51) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .

    RCURLY_BRACKET  reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    ID              reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    IF              reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    PRINT           reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FOR             reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    RETURN          reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    WHILE           reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FIGURE          reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    INT             reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FLOAT           reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    STRING          reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    BOOLEAN         reduce using rule 51 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)


state 302

    (55) fill_if_goto -> epsilon .

    RCURLY_BRACKET  reduce using rule 55 (fill_if_goto -> epsilon .)
    ID              reduce using rule 55 (fill_if_goto -> epsilon .)
    IF              reduce using rule 55 (fill_if_goto -> epsilon .)
    PRINT           reduce using rule 55 (fill_if_goto -> epsilon .)
    FOR             reduce using rule 55 (fill_if_goto -> epsilon .)
    RETURN          reduce using rule 55 (fill_if_goto -> epsilon .)
    WHILE           reduce using rule 55 (fill_if_goto -> epsilon .)
    FIGURE          reduce using rule 55 (fill_if_goto -> epsilon .)
    INT             reduce using rule 55 (fill_if_goto -> epsilon .)
    FLOAT           reduce using rule 55 (fill_if_goto -> epsilon .)
    STRING          reduce using rule 55 (fill_if_goto -> epsilon .)
    BOOLEAN         reduce using rule 55 (fill_if_goto -> epsilon .)


state 303

    (67) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    ID              reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    IF              reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    PRINT           reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FOR             reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    RETURN          reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    WHILE           reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FIGURE          reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    INT             reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FLOAT           reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    STRING          reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    BOOLEAN         reduce using rule 67 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)


state 304

    (122) figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .

    RCURLY_BRACKET  reduce using rule 122 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    COLOR           reduce using rule 122 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    SIZE            reduce using rule 122 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    VECTOR          reduce using rule 122 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)


state 305

    (123) figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 123 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    COLOR           reduce using rule 123 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    SIZE            reduce using rule 123 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    VECTOR          reduce using rule 123 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)


state 306

    (124) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN . mega_expression COMA mega_expression OP_RPAREN SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 307
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 307

    (124) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression . COMA mega_expression OP_RPAREN SEMICOLON

    COMA            shift and go to state 308


state 308

    (124) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA . mega_expression OP_RPAREN SEMICOLON
    (77) mega_expression -> . super_expression check_symbol_megaexp
    (78) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (79) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (81) super_expression -> . expression check_symbol_superexp
    (82) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (83) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (84) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (85) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (86) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (87) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (89) expression -> . term check_symbol_exp
    (90) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (91) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (94) term -> . fact check_symbol_term
    (95) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (96) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (98) fact -> . var_cte
    (99) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (103) var_cte -> . ID push_varID_to_Stack
    (104) var_cte -> . VAR_INT push_cte_toTable
    (105) var_cte -> . VAR_FLOAT push_cte_toTable
    (106) var_cte -> . VAR_STRING push_cte_toTable
    (107) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 104
    ID              shift and go to state 105
    VAR_INT         shift and go to state 106
    VAR_FLOAT       shift and go to state 107
    VAR_STRING      shift and go to state 108
    VAR_BOOLEAN     shift and go to state 109

    mega_expression                shift and go to state 309
    super_expression               shift and go to state 99
    expression                     shift and go to state 100
    term                           shift and go to state 101
    fact                           shift and go to state 102
    var_cte                        shift and go to state 103

state 309

    (124) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 310


state 310

    (124) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 311


state 311

    (124) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 124 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    COLOR           reduce using rule 124 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    SIZE            reduce using rule 124 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    VECTOR          reduce using rule 124 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for STRING in state 47 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 56 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 56 resolved as shift
WARNING: shift/reduce conflict for RCURLY_BRACKET in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for FIGURE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 59 resolved as shift
