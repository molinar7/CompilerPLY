Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    VAR_BOOLEAN
    CARET
    QUOT_MARK
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
Rule 3     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 4     vars -> epsilon
Rule 5     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 6     vars_prime -> epsilon
Rule 7     pushTo_varsTable_WithCTE -> epsilon
Rule 8     pushTo_varsTable -> epsilon
Rule 9     save_type -> epsilon
Rule 10    function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
Rule 11    function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
Rule 12    function -> epsilon
Rule 13    pushTo_FunctionDir -> epsilon
Rule 14    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque
Rule 15    type -> INT
Rule 16    type -> FLOAT
Rule 17    type -> STRING
Rule 18    type -> BOOLEAN
Rule 19    parameters -> type ID parameters
Rule 20    parameters -> COMA type ID parameters
Rule 21    parameters -> epsilon
Rule 22    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 23    function_bloque_primo -> function_bloque_primo function_statement
Rule 24    function_bloque_primo -> epsilon
Rule 25    function_statement -> assigment
Rule 26    function_statement -> if
Rule 27    function_statement -> printer
Rule 28    function_statement -> increment
Rule 29    function_statement -> for
Rule 30    function_statement -> return
Rule 31    function_statement -> function_call
Rule 32    function_statement -> fun_esp
Rule 33    function_statement -> vars
Rule 34    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 35    bloque_primo -> bloque_primo statement
Rule 36    bloque_primo -> epsilon
Rule 37    statement -> assigment
Rule 38    statement -> if
Rule 39    statement -> printer
Rule 40    statement -> increment
Rule 41    statement -> for
Rule 42    statement -> return
Rule 43    statement -> function_call
Rule 44    statement -> fun_esp
Rule 45    assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON
Rule 46    assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
Rule 47    push_equalsTo_stackSymbol -> epsilon
Rule 48    if -> IF OP_LPAREN mega_expression OP_RPAREN bloque
Rule 49    if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque
Rule 50    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 51    impression -> mega_expression
Rule 52    impression -> mega_expression COMA impression
Rule 53    increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON
Rule 54    increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON
Rule 55    increment -> ID OP_PLUS OP_PLUS SEMICOLON
Rule 56    increment -> ID OP_MINUS OP_MINUS SEMICOLON
Rule 57    for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque
Rule 58    return -> RETURN mega_expression SEMICOLON
Rule 59    function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
Rule 60    function_call_prime -> ID function_call_prime
Rule 61    function_call_prime -> COMA ID function_call_prime
Rule 62    function_call_prime -> epsilon
Rule 63    mega_expression -> super_expression
Rule 64    mega_expression -> super_expression AND super_expression
Rule 65    mega_expression -> super_expression OR super_expression
Rule 66    super_expression -> expression
Rule 67    super_expression -> expression OP_GREATER_THAN expression
Rule 68    super_expression -> expression OP_LESS_THAN expression
Rule 69    super_expression -> expression OP_GREATER_EQUALS_THAN expression
Rule 70    super_expression -> expression OP_LESS_EQUALS_THAN expression
Rule 71    super_expression -> expression OP_EQUALS_TWO expression
Rule 72    super_expression -> expression OP_NOT_EQUALS expression
Rule 73    expression -> term check_symbol_exp
Rule 74    expression -> term check_symbol_exp OP_PLUS push_symbol expression
Rule 75    expression -> term check_symbol_exp OP_MINUS push_symbol expression
Rule 76    push_symbol -> epsilon
Rule 77    check_symbol_exp -> epsilon
Rule 78    term -> fact check_symbol_term
Rule 79    term -> fact check_symbol_term OP_DIVISION push_symbol term
Rule 80    term -> fact check_symbol_term OP_TIMES push_symbol term
Rule 81    check_symbol_term -> epsilon
Rule 82    fact -> var_cte push_varID_to_Stack
Rule 83    fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
Rule 84    push_varID_to_Stack -> epsilon
Rule 85    push_bottle_bottom -> epsilon
Rule 86    remove_bottle_bottom -> epsilon
Rule 87    var_cte -> ID
Rule 88    var_cte -> VAR_INT
Rule 89    var_cte -> VAR_FLOAT
Rule 90    var_cte -> VAR_STRING
Rule 91    fun_esp -> figure_creation
Rule 92    figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
Rule 93    figure -> POINT
Rule 94    figure -> LINE
Rule 95    figure -> SQUARE
Rule 96    figure -> RECTANGLE
Rule 97    figure -> TRIANGLE
Rule 98    figure -> CIRCLE
Rule 99    figure -> ARC
Rule 100   bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET
Rule 101   bloque_figura_primo -> bloque_figura_primo figura_attr
Rule 102   bloque_figura_primo -> epsilon
Rule 103   figura_attr -> vector
Rule 104   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 105   figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON
Rule 106   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON
Rule 107   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 64
ARC                  : 99
BOOLEAN              : 18
CARET                : 
CIRCLE               : 98
COLOR                : 104
COMA                 : 5 20 52 61 106
ELSE                 : 49
FIGURE               : 92
FLOAT                : 16
FOR                  : 57
FUNCTION             : 10 11
ID                   : 1 2 3 5 10 11 19 20 45 46 53 54 55 56 59 60 61 87 92 104 106
IF                   : 48 49
INT                  : 15
LCURLY_BRACKET       : 1 22 34 100
LINE                 : 94
MAIN                 : 14
OP_DIVISION          : 79
OP_EQUALS            : 2 45 46
OP_EQUALS_TWO        : 71
OP_GREATER_EQUALS_THAN : 69
OP_GREATER_THAN      : 67
OP_LESS_EQUALS_THAN  : 70
OP_LESS_THAN         : 68
OP_LPAREN            : 10 11 14 48 49 50 57 59 83 106
OP_LSQUARE_PAREN     : 46
OP_MINUS             : 56 56 75
OP_MINUS_EQUALS      : 54
OP_NOT_EQUALS        : 72
OP_PLUS              : 55 55 74
OP_PLUS_EQUALS       : 53
OP_RPAREN            : 10 11 14 48 49 50 57 59 83 106
OP_RSQUARE_PAREN     : 46
OP_TIMES             : 80
OP_TWO_POINTS        : 92 104 105 106
OR                   : 65
POINT                : 93
POSSESS              : 92
PRINT                : 50
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 22 34 100
RECTANGLE            : 96
RETURN               : 58
SEMICOLON            : 2 3 45 46 50 53 54 55 56 57 58 59 104 105 106
SIZE                 : 105
SQUARE               : 95
STRING               : 17
TRIANGLE             : 97
VAR                  : 
VAR_BOOLEAN          : 
VAR_FLOAT            : 89
VAR_INT              : 46 88
VAR_STRING           : 90
VECTOR               : 106
VOID                 : 11
error                : 

Nonterminals, with rules where they appear

assigment            : 25 37 57
bloque               : 48 49 49 57
bloque_figura        : 92
bloque_figura_primo  : 100 101
bloque_primo         : 34 35
check_symbol_exp     : 73 74 75
check_symbol_term    : 78 79 80
epsilon              : 4 6 7 8 9 12 13 21 24 36 47 62 76 77 81 84 85 86 102
expression           : 66 67 67 68 68 69 69 70 70 71 71 72 72 74 75
fact                 : 78 79 80
figura_attr          : 101
figure               : 92
figure_creation      : 91
for                  : 29 41
fun_esp              : 32 44
function             : 1 10 11
function_bloque      : 10 11 14
function_bloque_primo : 22 23
function_call        : 31 43
function_call_prime  : 59 60 61
function_statement   : 23
if                   : 26 38
impression           : 50 52
increment            : 28 40 57
main_function        : 1
mega_expression      : 45 46 48 49 51 52 53 54 57 58 83 105 106 106
parameters           : 10 11 19 20
printer              : 27 39
program              : 0
pushTo_FunctionDir   : 10 11 14
pushTo_varsTable     : 3 5
pushTo_varsTable_WithCTE : 2
push_bottle_bottom   : 83
push_equalsTo_stackSymbol : 45
push_symbol          : 74 75 79 80
push_varID_to_Stack  : 45 82
remove_bottle_bottom : 83
return               : 30 42
save_type            : 2 3
statement            : 35
super_expression     : 63 64 64 65 65
term                 : 73 74 75 79 80
type                 : 2 3 10 19 20
var_cte              : 2 82
vars                 : 1 2 3 33
vars_prime           : 3 5
vector               : 103

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 4


state 4

    (1) program -> PROGRAM ID LCURLY_BRACKET . vars function main_function RCURLY_BRACKET
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 107 (epsilon -> .)
    MAIN            reduce using rule 107 (epsilon -> .)

    vars                           shift and go to state 5
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 5

    (1) program -> PROGRAM ID LCURLY_BRACKET vars . function main_function RCURLY_BRACKET
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (107) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 107 (epsilon -> .)

    function                       shift and go to state 12
    epsilon                        shift and go to state 14

state 6

    (2) vars -> type . save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type . save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (9) save_type -> . epsilon
    (107) epsilon -> .

    ID              reduce using rule 107 (epsilon -> .)

    save_type                      shift and go to state 15
    epsilon                        shift and go to state 16

state 7

    (4) vars -> epsilon .

    FUNCTION        reduce using rule 4 (vars -> epsilon .)
    MAIN            reduce using rule 4 (vars -> epsilon .)
    RCURLY_BRACKET  reduce using rule 4 (vars -> epsilon .)
    ID              reduce using rule 4 (vars -> epsilon .)
    IF              reduce using rule 4 (vars -> epsilon .)
    PRINT           reduce using rule 4 (vars -> epsilon .)
    FOR             reduce using rule 4 (vars -> epsilon .)
    RETURN          reduce using rule 4 (vars -> epsilon .)
    FIGURE          reduce using rule 4 (vars -> epsilon .)
    INT             reduce using rule 4 (vars -> epsilon .)
    FLOAT           reduce using rule 4 (vars -> epsilon .)
    STRING          reduce using rule 4 (vars -> epsilon .)
    BOOLEAN         reduce using rule 4 (vars -> epsilon .)


state 8

    (15) type -> INT .

    ID              reduce using rule 15 (type -> INT .)


state 9

    (16) type -> FLOAT .

    ID              reduce using rule 16 (type -> FLOAT .)


state 10

    (17) type -> STRING .

    ID              reduce using rule 17 (type -> STRING .)


state 11

    (18) type -> BOOLEAN .

    ID              reduce using rule 18 (type -> BOOLEAN .)


state 12

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function . main_function RCURLY_BRACKET
    (14) main_function -> . MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque

    MAIN            shift and go to state 18

    main_function                  shift and go to state 17

state 13

    (10) function -> FUNCTION . type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> FUNCTION . VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN

    VOID            shift and go to state 20
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 19

state 14

    (12) function -> epsilon .

    MAIN            reduce using rule 12 (function -> epsilon .)


state 15

    (2) vars -> type save_type . ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type . ID pushTo_varsTable vars_prime SEMICOLON vars

    ID              shift and go to state 21


state 16

    (9) save_type -> epsilon .

    ID              reduce using rule 9 (save_type -> epsilon .)


state 17

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function . RCURLY_BRACKET

    RCURLY_BRACKET  shift and go to state 22


state 18

    (14) main_function -> MAIN . pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque
    (13) pushTo_FunctionDir -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 23
    epsilon                        shift and go to state 24

state 19

    (10) function -> FUNCTION type . ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function

    ID              shift and go to state 25


state 20

    (11) function -> FUNCTION VOID . ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function

    ID              shift and go to state 26


state 21

    (2) vars -> type save_type ID . OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type ID . pushTo_varsTable vars_prime SEMICOLON vars
    (8) pushTo_varsTable -> . epsilon
    (107) epsilon -> .

    OP_EQUALS       shift and go to state 27
    COMA            reduce using rule 107 (epsilon -> .)
    SEMICOLON       reduce using rule 107 (epsilon -> .)

    pushTo_varsTable               shift and go to state 28
    epsilon                        shift and go to state 29

state 22

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .)


state 23

    (14) main_function -> MAIN pushTo_FunctionDir . OP_LPAREN OP_RPAREN function_bloque

    OP_LPAREN       shift and go to state 30


state 24

    (13) pushTo_FunctionDir -> epsilon .

    OP_LPAREN       reduce using rule 13 (pushTo_FunctionDir -> epsilon .)


state 25

    (10) function -> FUNCTION type ID . pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (13) pushTo_FunctionDir -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 31
    epsilon                        shift and go to state 24

state 26

    (11) function -> FUNCTION VOID ID . pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (13) pushTo_FunctionDir -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 32
    epsilon                        shift and go to state 24

state 27

    (2) vars -> type save_type ID OP_EQUALS . var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    var_cte                        shift and go to state 34

state 28

    (3) vars -> type save_type ID pushTo_varsTable . vars_prime SEMICOLON vars
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (107) epsilon -> .

    COMA            shift and go to state 39
    SEMICOLON       reduce using rule 107 (epsilon -> .)

    vars_prime                     shift and go to state 38
    epsilon                        shift and go to state 40

state 29

    (8) pushTo_varsTable -> epsilon .

    COMA            reduce using rule 8 (pushTo_varsTable -> epsilon .)
    SEMICOLON       reduce using rule 8 (pushTo_varsTable -> epsilon .)


state 30

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN . OP_RPAREN function_bloque

    OP_RPAREN       shift and go to state 41


state 31

    (10) function -> FUNCTION type ID pushTo_FunctionDir . OP_LPAREN parameters OP_RPAREN function_bloque function

    OP_LPAREN       shift and go to state 42


state 32

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir . OP_LPAREN parameters OP_RPAREN function_bloque function

    OP_LPAREN       shift and go to state 43


state 33

    (87) var_cte -> ID .

    SEMICOLON       reduce using rule 87 (var_cte -> ID .)
    OP_DIVISION     reduce using rule 87 (var_cte -> ID .)
    OP_TIMES        reduce using rule 87 (var_cte -> ID .)
    OP_PLUS         reduce using rule 87 (var_cte -> ID .)
    OP_MINUS        reduce using rule 87 (var_cte -> ID .)
    OP_GREATER_THAN reduce using rule 87 (var_cte -> ID .)
    OP_LESS_THAN    reduce using rule 87 (var_cte -> ID .)
    OP_GREATER_EQUALS_THAN reduce using rule 87 (var_cte -> ID .)
    OP_LESS_EQUALS_THAN reduce using rule 87 (var_cte -> ID .)
    OP_EQUALS_TWO   reduce using rule 87 (var_cte -> ID .)
    OP_NOT_EQUALS   reduce using rule 87 (var_cte -> ID .)
    AND             reduce using rule 87 (var_cte -> ID .)
    OR              reduce using rule 87 (var_cte -> ID .)
    OP_RPAREN       reduce using rule 87 (var_cte -> ID .)
    COMA            reduce using rule 87 (var_cte -> ID .)


state 34

    (2) vars -> type save_type ID OP_EQUALS var_cte . pushTo_varsTable_WithCTE SEMICOLON vars
    (7) pushTo_varsTable_WithCTE -> . epsilon
    (107) epsilon -> .

    SEMICOLON       reduce using rule 107 (epsilon -> .)

    pushTo_varsTable_WithCTE       shift and go to state 44
    epsilon                        shift and go to state 45

state 35

    (88) var_cte -> VAR_INT .

    SEMICOLON       reduce using rule 88 (var_cte -> VAR_INT .)
    OP_DIVISION     reduce using rule 88 (var_cte -> VAR_INT .)
    OP_TIMES        reduce using rule 88 (var_cte -> VAR_INT .)
    OP_PLUS         reduce using rule 88 (var_cte -> VAR_INT .)
    OP_MINUS        reduce using rule 88 (var_cte -> VAR_INT .)
    OP_GREATER_THAN reduce using rule 88 (var_cte -> VAR_INT .)
    OP_LESS_THAN    reduce using rule 88 (var_cte -> VAR_INT .)
    OP_GREATER_EQUALS_THAN reduce using rule 88 (var_cte -> VAR_INT .)
    OP_LESS_EQUALS_THAN reduce using rule 88 (var_cte -> VAR_INT .)
    OP_EQUALS_TWO   reduce using rule 88 (var_cte -> VAR_INT .)
    OP_NOT_EQUALS   reduce using rule 88 (var_cte -> VAR_INT .)
    AND             reduce using rule 88 (var_cte -> VAR_INT .)
    OR              reduce using rule 88 (var_cte -> VAR_INT .)
    OP_RPAREN       reduce using rule 88 (var_cte -> VAR_INT .)
    COMA            reduce using rule 88 (var_cte -> VAR_INT .)


state 36

    (89) var_cte -> VAR_FLOAT .

    SEMICOLON       reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_DIVISION     reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_TIMES        reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_PLUS         reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_MINUS        reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_GREATER_THAN reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_LESS_THAN    reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_GREATER_EQUALS_THAN reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_LESS_EQUALS_THAN reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_EQUALS_TWO   reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_NOT_EQUALS   reduce using rule 89 (var_cte -> VAR_FLOAT .)
    AND             reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OR              reduce using rule 89 (var_cte -> VAR_FLOAT .)
    OP_RPAREN       reduce using rule 89 (var_cte -> VAR_FLOAT .)
    COMA            reduce using rule 89 (var_cte -> VAR_FLOAT .)


state 37

    (90) var_cte -> VAR_STRING .

    SEMICOLON       reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_DIVISION     reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_TIMES        reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_PLUS         reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_MINUS        reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_GREATER_THAN reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_LESS_THAN    reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_GREATER_EQUALS_THAN reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_LESS_EQUALS_THAN reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_EQUALS_TWO   reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_NOT_EQUALS   reduce using rule 90 (var_cte -> VAR_STRING .)
    AND             reduce using rule 90 (var_cte -> VAR_STRING .)
    OR              reduce using rule 90 (var_cte -> VAR_STRING .)
    OP_RPAREN       reduce using rule 90 (var_cte -> VAR_STRING .)
    COMA            reduce using rule 90 (var_cte -> VAR_STRING .)


state 38

    (3) vars -> type save_type ID pushTo_varsTable vars_prime . SEMICOLON vars

    SEMICOLON       shift and go to state 46


state 39

    (5) vars_prime -> COMA . ID pushTo_varsTable vars_prime

    ID              shift and go to state 47


state 40

    (6) vars_prime -> epsilon .

    SEMICOLON       reduce using rule 6 (vars_prime -> epsilon .)


state 41

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN . function_bloque
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 49

    function_bloque                shift and go to state 48

state 42

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN . parameters OP_RPAREN function_bloque function
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    type                           shift and go to state 50
    parameters                     shift and go to state 51
    epsilon                        shift and go to state 53

state 43

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN . parameters OP_RPAREN function_bloque function
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    parameters                     shift and go to state 54
    type                           shift and go to state 50
    epsilon                        shift and go to state 53

state 44

    (2) vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE . SEMICOLON vars

    SEMICOLON       shift and go to state 55


state 45

    (7) pushTo_varsTable_WithCTE -> epsilon .

    SEMICOLON       reduce using rule 7 (pushTo_varsTable_WithCTE -> epsilon .)


state 46

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 107 (epsilon -> .)
    MAIN            reduce using rule 107 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    IF              reduce using rule 107 (epsilon -> .)
    PRINT           reduce using rule 107 (epsilon -> .)
    FOR             reduce using rule 107 (epsilon -> .)
    RETURN          reduce using rule 107 (epsilon -> .)
    FIGURE          reduce using rule 107 (epsilon -> .)

  ! INT             [ reduce using rule 107 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 107 (epsilon -> .) ]
  ! STRING          [ reduce using rule 107 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 107 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 56
    epsilon                        shift and go to state 7

state 47

    (5) vars_prime -> COMA ID . pushTo_varsTable vars_prime
    (8) pushTo_varsTable -> . epsilon
    (107) epsilon -> .

    COMA            reduce using rule 107 (epsilon -> .)
    SEMICOLON       reduce using rule 107 (epsilon -> .)

    pushTo_varsTable               shift and go to state 57
    epsilon                        shift and go to state 29

state 48

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque .

    RCURLY_BRACKET  reduce using rule 14 (main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque .)


state 49

    (22) function_bloque -> LCURLY_BRACKET . function_bloque_primo RCURLY_BRACKET
    (23) function_bloque_primo -> . function_bloque_primo function_statement
    (24) function_bloque_primo -> . epsilon
    (107) epsilon -> .

    RCURLY_BRACKET  reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    IF              reduce using rule 107 (epsilon -> .)
    PRINT           reduce using rule 107 (epsilon -> .)
    FOR             reduce using rule 107 (epsilon -> .)
    RETURN          reduce using rule 107 (epsilon -> .)
    FIGURE          reduce using rule 107 (epsilon -> .)
    INT             reduce using rule 107 (epsilon -> .)
    FLOAT           reduce using rule 107 (epsilon -> .)
    STRING          reduce using rule 107 (epsilon -> .)
    BOOLEAN         reduce using rule 107 (epsilon -> .)

    function_bloque_primo          shift and go to state 58
    epsilon                        shift and go to state 59

state 50

    (19) parameters -> type . ID parameters

    ID              shift and go to state 60


state 51

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters . OP_RPAREN function_bloque function

    OP_RPAREN       shift and go to state 61


state 52

    (20) parameters -> COMA . type ID parameters
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 62

state 53

    (21) parameters -> epsilon .

    OP_RPAREN       reduce using rule 21 (parameters -> epsilon .)


state 54

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters . OP_RPAREN function_bloque function

    OP_RPAREN       shift and go to state 63


state 55

    (2) vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 107 (epsilon -> .)
    MAIN            reduce using rule 107 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    IF              reduce using rule 107 (epsilon -> .)
    PRINT           reduce using rule 107 (epsilon -> .)
    FOR             reduce using rule 107 (epsilon -> .)
    RETURN          reduce using rule 107 (epsilon -> .)
    FIGURE          reduce using rule 107 (epsilon -> .)

  ! INT             [ reduce using rule 107 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 107 (epsilon -> .) ]
  ! STRING          [ reduce using rule 107 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 107 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 64
    epsilon                        shift and go to state 7

state 56

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .

    FUNCTION        reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    MAIN            reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ID              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    IF              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    PRINT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FOR             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RETURN          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FIGURE          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    INT             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FLOAT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    STRING          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    BOOLEAN         reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)


state 57

    (5) vars_prime -> COMA ID pushTo_varsTable . vars_prime
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (107) epsilon -> .

    COMA            shift and go to state 39
    SEMICOLON       reduce using rule 107 (epsilon -> .)

    vars_prime                     shift and go to state 65
    epsilon                        shift and go to state 40

state 58

    (22) function_bloque -> LCURLY_BRACKET function_bloque_primo . RCURLY_BRACKET
    (23) function_bloque_primo -> function_bloque_primo . function_statement
    (25) function_statement -> . assigment
    (26) function_statement -> . if
    (27) function_statement -> . printer
    (28) function_statement -> . increment
    (29) function_statement -> . for
    (30) function_statement -> . return
    (31) function_statement -> . function_call
    (32) function_statement -> . fun_esp
    (33) function_statement -> . vars
    (45) assigment -> . ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON
    (46) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (48) if -> . IF OP_LPAREN mega_expression OP_RPAREN bloque
    (49) if -> . IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque
    (50) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (53) increment -> . ID OP_PLUS_EQUALS mega_expression SEMICOLON
    (54) increment -> . ID OP_MINUS_EQUALS mega_expression SEMICOLON
    (55) increment -> . ID OP_PLUS OP_PLUS SEMICOLON
    (56) increment -> . ID OP_MINUS OP_MINUS SEMICOLON
    (57) for -> . FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque
    (58) return -> . RETURN mega_expression SEMICOLON
    (59) function_call -> . ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (91) fun_esp -> . figure_creation
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (92) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

  ! shift/reduce conflict for RCURLY_BRACKET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FIGURE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RCURLY_BRACKET  shift and go to state 66
    ID              shift and go to state 77
    IF              shift and go to state 78
    PRINT           shift and go to state 79
    FOR             shift and go to state 80
    RETURN          shift and go to state 81
    FIGURE          shift and go to state 83
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

  ! RCURLY_BRACKET  [ reduce using rule 107 (epsilon -> .) ]
  ! ID              [ reduce using rule 107 (epsilon -> .) ]
  ! IF              [ reduce using rule 107 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 107 (epsilon -> .) ]
  ! FOR             [ reduce using rule 107 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 107 (epsilon -> .) ]
  ! FIGURE          [ reduce using rule 107 (epsilon -> .) ]
  ! INT             [ reduce using rule 107 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 107 (epsilon -> .) ]
  ! STRING          [ reduce using rule 107 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 107 (epsilon -> .) ]

    function_statement             shift and go to state 67
    assigment                      shift and go to state 68
    if                             shift and go to state 69
    printer                        shift and go to state 70
    increment                      shift and go to state 71
    for                            shift and go to state 72
    return                         shift and go to state 73
    function_call                  shift and go to state 74
    fun_esp                        shift and go to state 75
    vars                           shift and go to state 76
    figure_creation                shift and go to state 82
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 59

    (24) function_bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 24 (function_bloque_primo -> epsilon .)
    ID              reduce using rule 24 (function_bloque_primo -> epsilon .)
    IF              reduce using rule 24 (function_bloque_primo -> epsilon .)
    PRINT           reduce using rule 24 (function_bloque_primo -> epsilon .)
    FOR             reduce using rule 24 (function_bloque_primo -> epsilon .)
    RETURN          reduce using rule 24 (function_bloque_primo -> epsilon .)
    FIGURE          reduce using rule 24 (function_bloque_primo -> epsilon .)
    INT             reduce using rule 24 (function_bloque_primo -> epsilon .)
    FLOAT           reduce using rule 24 (function_bloque_primo -> epsilon .)
    STRING          reduce using rule 24 (function_bloque_primo -> epsilon .)
    BOOLEAN         reduce using rule 24 (function_bloque_primo -> epsilon .)


state 60

    (19) parameters -> type ID . parameters
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    type                           shift and go to state 50
    parameters                     shift and go to state 84
    epsilon                        shift and go to state 53

state 61

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN . function_bloque function
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 49

    function_bloque                shift and go to state 85

state 62

    (20) parameters -> COMA type . ID parameters

    ID              shift and go to state 86


state 63

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN . function_bloque function
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 49

    function_bloque                shift and go to state 87

state 64

    (2) vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .

    FUNCTION        reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    MAIN            reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    ID              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    IF              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    PRINT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    FOR             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    RETURN          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    FIGURE          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    INT             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    FLOAT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    STRING          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    BOOLEAN         reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)


state 65

    (5) vars_prime -> COMA ID pushTo_varsTable vars_prime .

    SEMICOLON       reduce using rule 5 (vars_prime -> COMA ID pushTo_varsTable vars_prime .)


state 66

    (22) function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    FUNCTION        reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    MAIN            reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)


state 67

    (23) function_bloque_primo -> function_bloque_primo function_statement .

    RCURLY_BRACKET  reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    ID              reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    IF              reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    PRINT           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FOR             reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    RETURN          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FIGURE          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    INT             reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FLOAT           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    STRING          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    BOOLEAN         reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)


state 68

    (25) function_statement -> assigment .

    RCURLY_BRACKET  reduce using rule 25 (function_statement -> assigment .)
    ID              reduce using rule 25 (function_statement -> assigment .)
    IF              reduce using rule 25 (function_statement -> assigment .)
    PRINT           reduce using rule 25 (function_statement -> assigment .)
    FOR             reduce using rule 25 (function_statement -> assigment .)
    RETURN          reduce using rule 25 (function_statement -> assigment .)
    FIGURE          reduce using rule 25 (function_statement -> assigment .)
    INT             reduce using rule 25 (function_statement -> assigment .)
    FLOAT           reduce using rule 25 (function_statement -> assigment .)
    STRING          reduce using rule 25 (function_statement -> assigment .)
    BOOLEAN         reduce using rule 25 (function_statement -> assigment .)


state 69

    (26) function_statement -> if .

    RCURLY_BRACKET  reduce using rule 26 (function_statement -> if .)
    ID              reduce using rule 26 (function_statement -> if .)
    IF              reduce using rule 26 (function_statement -> if .)
    PRINT           reduce using rule 26 (function_statement -> if .)
    FOR             reduce using rule 26 (function_statement -> if .)
    RETURN          reduce using rule 26 (function_statement -> if .)
    FIGURE          reduce using rule 26 (function_statement -> if .)
    INT             reduce using rule 26 (function_statement -> if .)
    FLOAT           reduce using rule 26 (function_statement -> if .)
    STRING          reduce using rule 26 (function_statement -> if .)
    BOOLEAN         reduce using rule 26 (function_statement -> if .)


state 70

    (27) function_statement -> printer .

    RCURLY_BRACKET  reduce using rule 27 (function_statement -> printer .)
    ID              reduce using rule 27 (function_statement -> printer .)
    IF              reduce using rule 27 (function_statement -> printer .)
    PRINT           reduce using rule 27 (function_statement -> printer .)
    FOR             reduce using rule 27 (function_statement -> printer .)
    RETURN          reduce using rule 27 (function_statement -> printer .)
    FIGURE          reduce using rule 27 (function_statement -> printer .)
    INT             reduce using rule 27 (function_statement -> printer .)
    FLOAT           reduce using rule 27 (function_statement -> printer .)
    STRING          reduce using rule 27 (function_statement -> printer .)
    BOOLEAN         reduce using rule 27 (function_statement -> printer .)


state 71

    (28) function_statement -> increment .

    RCURLY_BRACKET  reduce using rule 28 (function_statement -> increment .)
    ID              reduce using rule 28 (function_statement -> increment .)
    IF              reduce using rule 28 (function_statement -> increment .)
    PRINT           reduce using rule 28 (function_statement -> increment .)
    FOR             reduce using rule 28 (function_statement -> increment .)
    RETURN          reduce using rule 28 (function_statement -> increment .)
    FIGURE          reduce using rule 28 (function_statement -> increment .)
    INT             reduce using rule 28 (function_statement -> increment .)
    FLOAT           reduce using rule 28 (function_statement -> increment .)
    STRING          reduce using rule 28 (function_statement -> increment .)
    BOOLEAN         reduce using rule 28 (function_statement -> increment .)


state 72

    (29) function_statement -> for .

    RCURLY_BRACKET  reduce using rule 29 (function_statement -> for .)
    ID              reduce using rule 29 (function_statement -> for .)
    IF              reduce using rule 29 (function_statement -> for .)
    PRINT           reduce using rule 29 (function_statement -> for .)
    FOR             reduce using rule 29 (function_statement -> for .)
    RETURN          reduce using rule 29 (function_statement -> for .)
    FIGURE          reduce using rule 29 (function_statement -> for .)
    INT             reduce using rule 29 (function_statement -> for .)
    FLOAT           reduce using rule 29 (function_statement -> for .)
    STRING          reduce using rule 29 (function_statement -> for .)
    BOOLEAN         reduce using rule 29 (function_statement -> for .)


state 73

    (30) function_statement -> return .

    RCURLY_BRACKET  reduce using rule 30 (function_statement -> return .)
    ID              reduce using rule 30 (function_statement -> return .)
    IF              reduce using rule 30 (function_statement -> return .)
    PRINT           reduce using rule 30 (function_statement -> return .)
    FOR             reduce using rule 30 (function_statement -> return .)
    RETURN          reduce using rule 30 (function_statement -> return .)
    FIGURE          reduce using rule 30 (function_statement -> return .)
    INT             reduce using rule 30 (function_statement -> return .)
    FLOAT           reduce using rule 30 (function_statement -> return .)
    STRING          reduce using rule 30 (function_statement -> return .)
    BOOLEAN         reduce using rule 30 (function_statement -> return .)


state 74

    (31) function_statement -> function_call .

    RCURLY_BRACKET  reduce using rule 31 (function_statement -> function_call .)
    ID              reduce using rule 31 (function_statement -> function_call .)
    IF              reduce using rule 31 (function_statement -> function_call .)
    PRINT           reduce using rule 31 (function_statement -> function_call .)
    FOR             reduce using rule 31 (function_statement -> function_call .)
    RETURN          reduce using rule 31 (function_statement -> function_call .)
    FIGURE          reduce using rule 31 (function_statement -> function_call .)
    INT             reduce using rule 31 (function_statement -> function_call .)
    FLOAT           reduce using rule 31 (function_statement -> function_call .)
    STRING          reduce using rule 31 (function_statement -> function_call .)
    BOOLEAN         reduce using rule 31 (function_statement -> function_call .)


state 75

    (32) function_statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 32 (function_statement -> fun_esp .)
    ID              reduce using rule 32 (function_statement -> fun_esp .)
    IF              reduce using rule 32 (function_statement -> fun_esp .)
    PRINT           reduce using rule 32 (function_statement -> fun_esp .)
    FOR             reduce using rule 32 (function_statement -> fun_esp .)
    RETURN          reduce using rule 32 (function_statement -> fun_esp .)
    FIGURE          reduce using rule 32 (function_statement -> fun_esp .)
    INT             reduce using rule 32 (function_statement -> fun_esp .)
    FLOAT           reduce using rule 32 (function_statement -> fun_esp .)
    STRING          reduce using rule 32 (function_statement -> fun_esp .)
    BOOLEAN         reduce using rule 32 (function_statement -> fun_esp .)


state 76

    (33) function_statement -> vars .

    RCURLY_BRACKET  reduce using rule 33 (function_statement -> vars .)
    ID              reduce using rule 33 (function_statement -> vars .)
    IF              reduce using rule 33 (function_statement -> vars .)
    PRINT           reduce using rule 33 (function_statement -> vars .)
    FOR             reduce using rule 33 (function_statement -> vars .)
    RETURN          reduce using rule 33 (function_statement -> vars .)
    FIGURE          reduce using rule 33 (function_statement -> vars .)
    INT             reduce using rule 33 (function_statement -> vars .)
    FLOAT           reduce using rule 33 (function_statement -> vars .)
    STRING          reduce using rule 33 (function_statement -> vars .)
    BOOLEAN         reduce using rule 33 (function_statement -> vars .)


state 77

    (45) assigment -> ID . push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON
    (46) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (53) increment -> ID . OP_PLUS_EQUALS mega_expression SEMICOLON
    (54) increment -> ID . OP_MINUS_EQUALS mega_expression SEMICOLON
    (55) increment -> ID . OP_PLUS OP_PLUS SEMICOLON
    (56) increment -> ID . OP_MINUS OP_MINUS SEMICOLON
    (59) function_call -> ID . OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (84) push_varID_to_Stack -> . epsilon
    (107) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 89
    OP_PLUS_EQUALS  shift and go to state 90
    OP_MINUS_EQUALS shift and go to state 91
    OP_PLUS         shift and go to state 92
    OP_MINUS        shift and go to state 93
    OP_LPAREN       shift and go to state 94
    OP_EQUALS       reduce using rule 107 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 88
    epsilon                        shift and go to state 95

state 78

    (48) if -> IF . OP_LPAREN mega_expression OP_RPAREN bloque
    (49) if -> IF . OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque

    OP_LPAREN       shift and go to state 96


state 79

    (50) printer -> PRINT . OP_LPAREN impression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 97


state 80

    (57) for -> FOR . OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque

    OP_LPAREN       shift and go to state 98


state 81

    (58) return -> RETURN . mega_expression SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 99
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 82

    (91) fun_esp -> figure_creation .

    RCURLY_BRACKET  reduce using rule 91 (fun_esp -> figure_creation .)
    ID              reduce using rule 91 (fun_esp -> figure_creation .)
    IF              reduce using rule 91 (fun_esp -> figure_creation .)
    PRINT           reduce using rule 91 (fun_esp -> figure_creation .)
    FOR             reduce using rule 91 (fun_esp -> figure_creation .)
    RETURN          reduce using rule 91 (fun_esp -> figure_creation .)
    FIGURE          reduce using rule 91 (fun_esp -> figure_creation .)
    INT             reduce using rule 91 (fun_esp -> figure_creation .)
    FLOAT           reduce using rule 91 (fun_esp -> figure_creation .)
    STRING          reduce using rule 91 (fun_esp -> figure_creation .)
    BOOLEAN         reduce using rule 91 (fun_esp -> figure_creation .)


state 83

    (92) figure_creation -> FIGURE . ID OP_TWO_POINTS figure POSSESS bloque_figura

    ID              shift and go to state 106


state 84

    (19) parameters -> type ID parameters .

    OP_RPAREN       reduce using rule 19 (parameters -> type ID parameters .)


state 85

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (107) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 107 (epsilon -> .)

    function                       shift and go to state 107
    epsilon                        shift and go to state 14

state 86

    (20) parameters -> COMA type ID . parameters
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (107) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    type                           shift and go to state 50
    parameters                     shift and go to state 108
    epsilon                        shift and go to state 53

state 87

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (107) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 107 (epsilon -> .)

    function                       shift and go to state 109
    epsilon                        shift and go to state 14

state 88

    (45) assigment -> ID push_varID_to_Stack . OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON

    OP_EQUALS       shift and go to state 110


state 89

    (46) assigment -> ID OP_LSQUARE_PAREN . VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    VAR_INT         shift and go to state 111


state 90

    (53) increment -> ID OP_PLUS_EQUALS . mega_expression SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 112
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 91

    (54) increment -> ID OP_MINUS_EQUALS . mega_expression SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 113
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 92

    (55) increment -> ID OP_PLUS . OP_PLUS SEMICOLON

    OP_PLUS         shift and go to state 114


state 93

    (56) increment -> ID OP_MINUS . OP_MINUS SEMICOLON

    OP_MINUS        shift and go to state 115


state 94

    (59) function_call -> ID OP_LPAREN . function_call_prime OP_RPAREN SEMICOLON
    (60) function_call_prime -> . ID function_call_prime
    (61) function_call_prime -> . COMA ID function_call_prime
    (62) function_call_prime -> . epsilon
    (107) epsilon -> .

    ID              shift and go to state 116
    COMA            shift and go to state 118
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    function_call_prime            shift and go to state 117
    epsilon                        shift and go to state 119

state 95

    (84) push_varID_to_Stack -> epsilon .

    OP_EQUALS       reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_DIVISION     reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_TIMES        reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_THAN reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_LESS_THAN    reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    AND             reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OR              reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    SEMICOLON       reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    OP_RPAREN       reduce using rule 84 (push_varID_to_Stack -> epsilon .)
    COMA            reduce using rule 84 (push_varID_to_Stack -> epsilon .)


state 96

    (48) if -> IF OP_LPAREN . mega_expression OP_RPAREN bloque
    (49) if -> IF OP_LPAREN . mega_expression OP_RPAREN bloque ELSE bloque
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 120
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 97

    (50) printer -> PRINT OP_LPAREN . impression OP_RPAREN SEMICOLON
    (51) impression -> . mega_expression
    (52) impression -> . mega_expression COMA impression
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    impression                     shift and go to state 121
    mega_expression                shift and go to state 122
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 98

    (57) for -> FOR OP_LPAREN . assigment mega_expression SEMICOLON increment OP_RPAREN bloque
    (45) assigment -> . ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON
    (46) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    ID              shift and go to state 124

    assigment                      shift and go to state 123

state 99

    (58) return -> RETURN mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 125


state 100

    (63) mega_expression -> super_expression .
    (64) mega_expression -> super_expression . AND super_expression
    (65) mega_expression -> super_expression . OR super_expression

    SEMICOLON       reduce using rule 63 (mega_expression -> super_expression .)
    OP_RPAREN       reduce using rule 63 (mega_expression -> super_expression .)
    COMA            reduce using rule 63 (mega_expression -> super_expression .)
    AND             shift and go to state 126
    OR              shift and go to state 127


state 101

    (66) super_expression -> expression .
    (67) super_expression -> expression . OP_GREATER_THAN expression
    (68) super_expression -> expression . OP_LESS_THAN expression
    (69) super_expression -> expression . OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> expression . OP_LESS_EQUALS_THAN expression
    (71) super_expression -> expression . OP_EQUALS_TWO expression
    (72) super_expression -> expression . OP_NOT_EQUALS expression

    AND             reduce using rule 66 (super_expression -> expression .)
    OR              reduce using rule 66 (super_expression -> expression .)
    SEMICOLON       reduce using rule 66 (super_expression -> expression .)
    OP_RPAREN       reduce using rule 66 (super_expression -> expression .)
    COMA            reduce using rule 66 (super_expression -> expression .)
    OP_GREATER_THAN shift and go to state 128
    OP_LESS_THAN    shift and go to state 129
    OP_GREATER_EQUALS_THAN shift and go to state 130
    OP_LESS_EQUALS_THAN shift and go to state 131
    OP_EQUALS_TWO   shift and go to state 132
    OP_NOT_EQUALS   shift and go to state 133


state 102

    (73) expression -> term . check_symbol_exp
    (74) expression -> term . check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> term . check_symbol_exp OP_MINUS push_symbol expression
    (77) check_symbol_exp -> . epsilon
    (107) epsilon -> .

    OP_PLUS         reduce using rule 107 (epsilon -> .)
    OP_MINUS        reduce using rule 107 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 107 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 107 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 107 (epsilon -> .)
    AND             reduce using rule 107 (epsilon -> .)
    OR              reduce using rule 107 (epsilon -> .)
    SEMICOLON       reduce using rule 107 (epsilon -> .)
    OP_RPAREN       reduce using rule 107 (epsilon -> .)
    COMA            reduce using rule 107 (epsilon -> .)

    check_symbol_exp               shift and go to state 134
    epsilon                        shift and go to state 135

state 103

    (78) term -> fact . check_symbol_term
    (79) term -> fact . check_symbol_term OP_DIVISION push_symbol term
    (80) term -> fact . check_symbol_term OP_TIMES push_symbol term
    (81) check_symbol_term -> . epsilon
    (107) epsilon -> .

    OP_DIVISION     reduce using rule 107 (epsilon -> .)
    OP_TIMES        reduce using rule 107 (epsilon -> .)
    OP_PLUS         reduce using rule 107 (epsilon -> .)
    OP_MINUS        reduce using rule 107 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 107 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 107 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 107 (epsilon -> .)
    AND             reduce using rule 107 (epsilon -> .)
    OR              reduce using rule 107 (epsilon -> .)
    SEMICOLON       reduce using rule 107 (epsilon -> .)
    OP_RPAREN       reduce using rule 107 (epsilon -> .)
    COMA            reduce using rule 107 (epsilon -> .)

    check_symbol_term              shift and go to state 136
    epsilon                        shift and go to state 137

state 104

    (82) fact -> var_cte . push_varID_to_Stack
    (84) push_varID_to_Stack -> . epsilon
    (107) epsilon -> .

    OP_DIVISION     reduce using rule 107 (epsilon -> .)
    OP_TIMES        reduce using rule 107 (epsilon -> .)
    OP_PLUS         reduce using rule 107 (epsilon -> .)
    OP_MINUS        reduce using rule 107 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 107 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 107 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 107 (epsilon -> .)
    AND             reduce using rule 107 (epsilon -> .)
    OR              reduce using rule 107 (epsilon -> .)
    SEMICOLON       reduce using rule 107 (epsilon -> .)
    OP_RPAREN       reduce using rule 107 (epsilon -> .)
    COMA            reduce using rule 107 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 138
    epsilon                        shift and go to state 95

state 105

    (83) fact -> OP_LPAREN . push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (85) push_bottle_bottom -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    VAR_INT         reduce using rule 107 (epsilon -> .)
    VAR_FLOAT       reduce using rule 107 (epsilon -> .)
    VAR_STRING      reduce using rule 107 (epsilon -> .)

    push_bottle_bottom             shift and go to state 139
    epsilon                        shift and go to state 140

state 106

    (92) figure_creation -> FIGURE ID . OP_TWO_POINTS figure POSSESS bloque_figura

    OP_TWO_POINTS   shift and go to state 141


state 107

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .

    MAIN            reduce using rule 10 (function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .)


state 108

    (20) parameters -> COMA type ID parameters .

    OP_RPAREN       reduce using rule 20 (parameters -> COMA type ID parameters .)


state 109

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .

    MAIN            reduce using rule 11 (function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .)


state 110

    (45) assigment -> ID push_varID_to_Stack OP_EQUALS . push_equalsTo_stackSymbol mega_expression SEMICOLON
    (47) push_equalsTo_stackSymbol -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    VAR_INT         reduce using rule 107 (epsilon -> .)
    VAR_FLOAT       reduce using rule 107 (epsilon -> .)
    VAR_STRING      reduce using rule 107 (epsilon -> .)

    push_equalsTo_stackSymbol      shift and go to state 142
    epsilon                        shift and go to state 143

state 111

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT . OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    OP_RSQUARE_PAREN shift and go to state 144


state 112

    (53) increment -> ID OP_PLUS_EQUALS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 145


state 113

    (54) increment -> ID OP_MINUS_EQUALS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 146


state 114

    (55) increment -> ID OP_PLUS OP_PLUS . SEMICOLON

    SEMICOLON       shift and go to state 147


state 115

    (56) increment -> ID OP_MINUS OP_MINUS . SEMICOLON

    SEMICOLON       shift and go to state 148


state 116

    (60) function_call_prime -> ID . function_call_prime
    (60) function_call_prime -> . ID function_call_prime
    (61) function_call_prime -> . COMA ID function_call_prime
    (62) function_call_prime -> . epsilon
    (107) epsilon -> .

    ID              shift and go to state 116
    COMA            shift and go to state 118
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    function_call_prime            shift and go to state 149
    epsilon                        shift and go to state 119

state 117

    (59) function_call -> ID OP_LPAREN function_call_prime . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 150


state 118

    (61) function_call_prime -> COMA . ID function_call_prime

    ID              shift and go to state 151


state 119

    (62) function_call_prime -> epsilon .

    OP_RPAREN       reduce using rule 62 (function_call_prime -> epsilon .)


state 120

    (48) if -> IF OP_LPAREN mega_expression . OP_RPAREN bloque
    (49) if -> IF OP_LPAREN mega_expression . OP_RPAREN bloque ELSE bloque

    OP_RPAREN       shift and go to state 152


state 121

    (50) printer -> PRINT OP_LPAREN impression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 153


state 122

    (51) impression -> mega_expression .
    (52) impression -> mega_expression . COMA impression

    OP_RPAREN       reduce using rule 51 (impression -> mega_expression .)
    COMA            shift and go to state 154


state 123

    (57) for -> FOR OP_LPAREN assigment . mega_expression SEMICOLON increment OP_RPAREN bloque
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 155
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 124

    (45) assigment -> ID . push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON
    (46) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (84) push_varID_to_Stack -> . epsilon
    (107) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 89
    OP_EQUALS       reduce using rule 107 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 88
    epsilon                        shift and go to state 95

state 125

    (58) return -> RETURN mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    ID              reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    IF              reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    PRINT           reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    FOR             reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    RETURN          reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    FIGURE          reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    INT             reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    FLOAT           reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    STRING          reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 58 (return -> RETURN mega_expression SEMICOLON .)


state 126

    (64) mega_expression -> super_expression AND . super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    super_expression               shift and go to state 156
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 127

    (65) mega_expression -> super_expression OR . super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    super_expression               shift and go to state 157
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 128

    (67) super_expression -> expression OP_GREATER_THAN . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 158
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 129

    (68) super_expression -> expression OP_LESS_THAN . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 159
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 130

    (69) super_expression -> expression OP_GREATER_EQUALS_THAN . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 160
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 131

    (70) super_expression -> expression OP_LESS_EQUALS_THAN . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 161
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 132

    (71) super_expression -> expression OP_EQUALS_TWO . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 162
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 133

    (72) super_expression -> expression OP_NOT_EQUALS . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 163
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 134

    (73) expression -> term check_symbol_exp .
    (74) expression -> term check_symbol_exp . OP_PLUS push_symbol expression
    (75) expression -> term check_symbol_exp . OP_MINUS push_symbol expression

    OP_GREATER_THAN reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_LESS_THAN    reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_GREATER_EQUALS_THAN reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_LESS_EQUALS_THAN reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_EQUALS_TWO   reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_NOT_EQUALS   reduce using rule 73 (expression -> term check_symbol_exp .)
    AND             reduce using rule 73 (expression -> term check_symbol_exp .)
    OR              reduce using rule 73 (expression -> term check_symbol_exp .)
    SEMICOLON       reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_RPAREN       reduce using rule 73 (expression -> term check_symbol_exp .)
    COMA            reduce using rule 73 (expression -> term check_symbol_exp .)
    OP_PLUS         shift and go to state 164
    OP_MINUS        shift and go to state 165


state 135

    (77) check_symbol_exp -> epsilon .

    OP_PLUS         reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_MINUS        reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_GREATER_THAN reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_LESS_THAN    reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 77 (check_symbol_exp -> epsilon .)
    AND             reduce using rule 77 (check_symbol_exp -> epsilon .)
    OR              reduce using rule 77 (check_symbol_exp -> epsilon .)
    SEMICOLON       reduce using rule 77 (check_symbol_exp -> epsilon .)
    OP_RPAREN       reduce using rule 77 (check_symbol_exp -> epsilon .)
    COMA            reduce using rule 77 (check_symbol_exp -> epsilon .)


state 136

    (78) term -> fact check_symbol_term .
    (79) term -> fact check_symbol_term . OP_DIVISION push_symbol term
    (80) term -> fact check_symbol_term . OP_TIMES push_symbol term

    OP_PLUS         reduce using rule 78 (term -> fact check_symbol_term .)
    OP_MINUS        reduce using rule 78 (term -> fact check_symbol_term .)
    OP_GREATER_THAN reduce using rule 78 (term -> fact check_symbol_term .)
    OP_LESS_THAN    reduce using rule 78 (term -> fact check_symbol_term .)
    OP_GREATER_EQUALS_THAN reduce using rule 78 (term -> fact check_symbol_term .)
    OP_LESS_EQUALS_THAN reduce using rule 78 (term -> fact check_symbol_term .)
    OP_EQUALS_TWO   reduce using rule 78 (term -> fact check_symbol_term .)
    OP_NOT_EQUALS   reduce using rule 78 (term -> fact check_symbol_term .)
    AND             reduce using rule 78 (term -> fact check_symbol_term .)
    OR              reduce using rule 78 (term -> fact check_symbol_term .)
    SEMICOLON       reduce using rule 78 (term -> fact check_symbol_term .)
    OP_RPAREN       reduce using rule 78 (term -> fact check_symbol_term .)
    COMA            reduce using rule 78 (term -> fact check_symbol_term .)
    OP_DIVISION     shift and go to state 166
    OP_TIMES        shift and go to state 167


state 137

    (81) check_symbol_term -> epsilon .

    OP_DIVISION     reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_TIMES        reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_PLUS         reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_MINUS        reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_GREATER_THAN reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_LESS_THAN    reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 81 (check_symbol_term -> epsilon .)
    AND             reduce using rule 81 (check_symbol_term -> epsilon .)
    OR              reduce using rule 81 (check_symbol_term -> epsilon .)
    SEMICOLON       reduce using rule 81 (check_symbol_term -> epsilon .)
    OP_RPAREN       reduce using rule 81 (check_symbol_term -> epsilon .)
    COMA            reduce using rule 81 (check_symbol_term -> epsilon .)


state 138

    (82) fact -> var_cte push_varID_to_Stack .

    OP_DIVISION     reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_TIMES        reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_PLUS         reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_MINUS        reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_GREATER_THAN reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_LESS_THAN    reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_GREATER_EQUALS_THAN reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_LESS_EQUALS_THAN reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_EQUALS_TWO   reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_NOT_EQUALS   reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    AND             reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OR              reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    SEMICOLON       reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    OP_RPAREN       reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)
    COMA            reduce using rule 82 (fact -> var_cte push_varID_to_Stack .)


state 139

    (83) fact -> OP_LPAREN push_bottle_bottom . mega_expression OP_RPAREN remove_bottle_bottom
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 168
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 140

    (85) push_bottle_bottom -> epsilon .

    OP_LPAREN       reduce using rule 85 (push_bottle_bottom -> epsilon .)
    ID              reduce using rule 85 (push_bottle_bottom -> epsilon .)
    VAR_INT         reduce using rule 85 (push_bottle_bottom -> epsilon .)
    VAR_FLOAT       reduce using rule 85 (push_bottle_bottom -> epsilon .)
    VAR_STRING      reduce using rule 85 (push_bottle_bottom -> epsilon .)


state 141

    (92) figure_creation -> FIGURE ID OP_TWO_POINTS . figure POSSESS bloque_figura
    (93) figure -> . POINT
    (94) figure -> . LINE
    (95) figure -> . SQUARE
    (96) figure -> . RECTANGLE
    (97) figure -> . TRIANGLE
    (98) figure -> . CIRCLE
    (99) figure -> . ARC

    POINT           shift and go to state 170
    LINE            shift and go to state 171
    SQUARE          shift and go to state 172
    RECTANGLE       shift and go to state 173
    TRIANGLE        shift and go to state 174
    CIRCLE          shift and go to state 175
    ARC             shift and go to state 176

    figure                         shift and go to state 169

state 142

    (45) assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol . mega_expression SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 177
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 143

    (47) push_equalsTo_stackSymbol -> epsilon .

    OP_LPAREN       reduce using rule 47 (push_equalsTo_stackSymbol -> epsilon .)
    ID              reduce using rule 47 (push_equalsTo_stackSymbol -> epsilon .)
    VAR_INT         reduce using rule 47 (push_equalsTo_stackSymbol -> epsilon .)
    VAR_FLOAT       reduce using rule 47 (push_equalsTo_stackSymbol -> epsilon .)
    VAR_STRING      reduce using rule 47 (push_equalsTo_stackSymbol -> epsilon .)


state 144

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN . OP_EQUALS mega_expression SEMICOLON

    OP_EQUALS       shift and go to state 178


state 145

    (53) increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    ID              reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    IF              reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    PRINT           reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    FOR             reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    RETURN          reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    FIGURE          reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    INT             reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    FLOAT           reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    STRING          reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)
    OP_RPAREN       reduce using rule 53 (increment -> ID OP_PLUS_EQUALS mega_expression SEMICOLON .)


state 146

    (54) increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    ID              reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    IF              reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    PRINT           reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    FOR             reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    RETURN          reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    FIGURE          reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    INT             reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    FLOAT           reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    STRING          reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)
    OP_RPAREN       reduce using rule 54 (increment -> ID OP_MINUS_EQUALS mega_expression SEMICOLON .)


state 147

    (55) increment -> ID OP_PLUS OP_PLUS SEMICOLON .

    RCURLY_BRACKET  reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    ID              reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    IF              reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    PRINT           reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    FOR             reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    RETURN          reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    FIGURE          reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    INT             reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    FLOAT           reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    STRING          reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    BOOLEAN         reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    OP_RPAREN       reduce using rule 55 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)


state 148

    (56) increment -> ID OP_MINUS OP_MINUS SEMICOLON .

    RCURLY_BRACKET  reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    ID              reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    IF              reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    PRINT           reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    FOR             reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    RETURN          reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    FIGURE          reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    INT             reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    FLOAT           reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    STRING          reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    BOOLEAN         reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    OP_RPAREN       reduce using rule 56 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)


state 149

    (60) function_call_prime -> ID function_call_prime .

    OP_RPAREN       reduce using rule 60 (function_call_prime -> ID function_call_prime .)


state 150

    (59) function_call -> ID OP_LPAREN function_call_prime OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 151

    (61) function_call_prime -> COMA ID . function_call_prime
    (60) function_call_prime -> . ID function_call_prime
    (61) function_call_prime -> . COMA ID function_call_prime
    (62) function_call_prime -> . epsilon
    (107) epsilon -> .

    ID              shift and go to state 116
    COMA            shift and go to state 118
    OP_RPAREN       reduce using rule 107 (epsilon -> .)

    function_call_prime            shift and go to state 180
    epsilon                        shift and go to state 119

state 152

    (48) if -> IF OP_LPAREN mega_expression OP_RPAREN . bloque
    (49) if -> IF OP_LPAREN mega_expression OP_RPAREN . bloque ELSE bloque
    (34) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 182

    bloque                         shift and go to state 181

state 153

    (50) printer -> PRINT OP_LPAREN impression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 183


state 154

    (52) impression -> mega_expression COMA . impression
    (51) impression -> . mega_expression
    (52) impression -> . mega_expression COMA impression
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 122
    impression                     shift and go to state 184
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 155

    (57) for -> FOR OP_LPAREN assigment mega_expression . SEMICOLON increment OP_RPAREN bloque

    SEMICOLON       shift and go to state 185


state 156

    (64) mega_expression -> super_expression AND super_expression .

    SEMICOLON       reduce using rule 64 (mega_expression -> super_expression AND super_expression .)
    OP_RPAREN       reduce using rule 64 (mega_expression -> super_expression AND super_expression .)
    COMA            reduce using rule 64 (mega_expression -> super_expression AND super_expression .)


state 157

    (65) mega_expression -> super_expression OR super_expression .

    SEMICOLON       reduce using rule 65 (mega_expression -> super_expression OR super_expression .)
    OP_RPAREN       reduce using rule 65 (mega_expression -> super_expression OR super_expression .)
    COMA            reduce using rule 65 (mega_expression -> super_expression OR super_expression .)


state 158

    (67) super_expression -> expression OP_GREATER_THAN expression .

    AND             reduce using rule 67 (super_expression -> expression OP_GREATER_THAN expression .)
    OR              reduce using rule 67 (super_expression -> expression OP_GREATER_THAN expression .)
    SEMICOLON       reduce using rule 67 (super_expression -> expression OP_GREATER_THAN expression .)
    OP_RPAREN       reduce using rule 67 (super_expression -> expression OP_GREATER_THAN expression .)
    COMA            reduce using rule 67 (super_expression -> expression OP_GREATER_THAN expression .)


state 159

    (68) super_expression -> expression OP_LESS_THAN expression .

    AND             reduce using rule 68 (super_expression -> expression OP_LESS_THAN expression .)
    OR              reduce using rule 68 (super_expression -> expression OP_LESS_THAN expression .)
    SEMICOLON       reduce using rule 68 (super_expression -> expression OP_LESS_THAN expression .)
    OP_RPAREN       reduce using rule 68 (super_expression -> expression OP_LESS_THAN expression .)
    COMA            reduce using rule 68 (super_expression -> expression OP_LESS_THAN expression .)


state 160

    (69) super_expression -> expression OP_GREATER_EQUALS_THAN expression .

    AND             reduce using rule 69 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    OR              reduce using rule 69 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    SEMICOLON       reduce using rule 69 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    OP_RPAREN       reduce using rule 69 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    COMA            reduce using rule 69 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)


state 161

    (70) super_expression -> expression OP_LESS_EQUALS_THAN expression .

    AND             reduce using rule 70 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    OR              reduce using rule 70 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    SEMICOLON       reduce using rule 70 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    OP_RPAREN       reduce using rule 70 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    COMA            reduce using rule 70 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)


state 162

    (71) super_expression -> expression OP_EQUALS_TWO expression .

    AND             reduce using rule 71 (super_expression -> expression OP_EQUALS_TWO expression .)
    OR              reduce using rule 71 (super_expression -> expression OP_EQUALS_TWO expression .)
    SEMICOLON       reduce using rule 71 (super_expression -> expression OP_EQUALS_TWO expression .)
    OP_RPAREN       reduce using rule 71 (super_expression -> expression OP_EQUALS_TWO expression .)
    COMA            reduce using rule 71 (super_expression -> expression OP_EQUALS_TWO expression .)


state 163

    (72) super_expression -> expression OP_NOT_EQUALS expression .

    AND             reduce using rule 72 (super_expression -> expression OP_NOT_EQUALS expression .)
    OR              reduce using rule 72 (super_expression -> expression OP_NOT_EQUALS expression .)
    SEMICOLON       reduce using rule 72 (super_expression -> expression OP_NOT_EQUALS expression .)
    OP_RPAREN       reduce using rule 72 (super_expression -> expression OP_NOT_EQUALS expression .)
    COMA            reduce using rule 72 (super_expression -> expression OP_NOT_EQUALS expression .)


state 164

    (74) expression -> term check_symbol_exp OP_PLUS . push_symbol expression
    (76) push_symbol -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    VAR_INT         reduce using rule 107 (epsilon -> .)
    VAR_FLOAT       reduce using rule 107 (epsilon -> .)
    VAR_STRING      reduce using rule 107 (epsilon -> .)

    push_symbol                    shift and go to state 186
    epsilon                        shift and go to state 187

state 165

    (75) expression -> term check_symbol_exp OP_MINUS . push_symbol expression
    (76) push_symbol -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    VAR_INT         reduce using rule 107 (epsilon -> .)
    VAR_FLOAT       reduce using rule 107 (epsilon -> .)
    VAR_STRING      reduce using rule 107 (epsilon -> .)

    push_symbol                    shift and go to state 188
    epsilon                        shift and go to state 187

state 166

    (79) term -> fact check_symbol_term OP_DIVISION . push_symbol term
    (76) push_symbol -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    VAR_INT         reduce using rule 107 (epsilon -> .)
    VAR_FLOAT       reduce using rule 107 (epsilon -> .)
    VAR_STRING      reduce using rule 107 (epsilon -> .)

    push_symbol                    shift and go to state 189
    epsilon                        shift and go to state 187

state 167

    (80) term -> fact check_symbol_term OP_TIMES . push_symbol term
    (76) push_symbol -> . epsilon
    (107) epsilon -> .

    OP_LPAREN       reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    VAR_INT         reduce using rule 107 (epsilon -> .)
    VAR_FLOAT       reduce using rule 107 (epsilon -> .)
    VAR_STRING      reduce using rule 107 (epsilon -> .)

    push_symbol                    shift and go to state 190
    epsilon                        shift and go to state 187

state 168

    (83) fact -> OP_LPAREN push_bottle_bottom mega_expression . OP_RPAREN remove_bottle_bottom

    OP_RPAREN       shift and go to state 191


state 169

    (92) figure_creation -> FIGURE ID OP_TWO_POINTS figure . POSSESS bloque_figura

    POSSESS         shift and go to state 192


state 170

    (93) figure -> POINT .

    POSSESS         reduce using rule 93 (figure -> POINT .)


state 171

    (94) figure -> LINE .

    POSSESS         reduce using rule 94 (figure -> LINE .)


state 172

    (95) figure -> SQUARE .

    POSSESS         reduce using rule 95 (figure -> SQUARE .)


state 173

    (96) figure -> RECTANGLE .

    POSSESS         reduce using rule 96 (figure -> RECTANGLE .)


state 174

    (97) figure -> TRIANGLE .

    POSSESS         reduce using rule 97 (figure -> TRIANGLE .)


state 175

    (98) figure -> CIRCLE .

    POSSESS         reduce using rule 98 (figure -> CIRCLE .)


state 176

    (99) figure -> ARC .

    POSSESS         reduce using rule 99 (figure -> ARC .)


state 177

    (45) assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 193


state 178

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS . mega_expression SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 194
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 179

    (59) function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    ID              reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    IF              reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    INT             reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 59 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)


state 180

    (61) function_call_prime -> COMA ID function_call_prime .

    OP_RPAREN       reduce using rule 61 (function_call_prime -> COMA ID function_call_prime .)


state 181

    (48) if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .
    (49) if -> IF OP_LPAREN mega_expression OP_RPAREN bloque . ELSE bloque

    RCURLY_BRACKET  reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    ID              reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    IF              reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    PRINT           reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    FOR             reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    RETURN          reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    FIGURE          reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    INT             reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    FLOAT           reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    STRING          reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    BOOLEAN         reduce using rule 48 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque .)
    ELSE            shift and go to state 195


state 182

    (34) bloque -> LCURLY_BRACKET . bloque_primo RCURLY_BRACKET
    (35) bloque_primo -> . bloque_primo statement
    (36) bloque_primo -> . epsilon
    (107) epsilon -> .

    RCURLY_BRACKET  reduce using rule 107 (epsilon -> .)
    ID              reduce using rule 107 (epsilon -> .)
    IF              reduce using rule 107 (epsilon -> .)
    PRINT           reduce using rule 107 (epsilon -> .)
    FOR             reduce using rule 107 (epsilon -> .)
    RETURN          reduce using rule 107 (epsilon -> .)
    FIGURE          reduce using rule 107 (epsilon -> .)

    bloque_primo                   shift and go to state 196
    epsilon                        shift and go to state 197

state 183

    (50) printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ID              reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    IF              reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    INT             reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 50 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)


state 184

    (52) impression -> mega_expression COMA impression .

    OP_RPAREN       reduce using rule 52 (impression -> mega_expression COMA impression .)


state 185

    (57) for -> FOR OP_LPAREN assigment mega_expression SEMICOLON . increment OP_RPAREN bloque
    (53) increment -> . ID OP_PLUS_EQUALS mega_expression SEMICOLON
    (54) increment -> . ID OP_MINUS_EQUALS mega_expression SEMICOLON
    (55) increment -> . ID OP_PLUS OP_PLUS SEMICOLON
    (56) increment -> . ID OP_MINUS OP_MINUS SEMICOLON

    ID              shift and go to state 199

    increment                      shift and go to state 198

state 186

    (74) expression -> term check_symbol_exp OP_PLUS push_symbol . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    term                           shift and go to state 102
    expression                     shift and go to state 200
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 187

    (76) push_symbol -> epsilon .

    OP_LPAREN       reduce using rule 76 (push_symbol -> epsilon .)
    ID              reduce using rule 76 (push_symbol -> epsilon .)
    VAR_INT         reduce using rule 76 (push_symbol -> epsilon .)
    VAR_FLOAT       reduce using rule 76 (push_symbol -> epsilon .)
    VAR_STRING      reduce using rule 76 (push_symbol -> epsilon .)


state 188

    (75) expression -> term check_symbol_exp OP_MINUS push_symbol . expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    term                           shift and go to state 102
    expression                     shift and go to state 201
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 189

    (79) term -> fact check_symbol_term OP_DIVISION push_symbol . term
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    fact                           shift and go to state 103
    term                           shift and go to state 202
    var_cte                        shift and go to state 104

state 190

    (80) term -> fact check_symbol_term OP_TIMES push_symbol . term
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    fact                           shift and go to state 103
    term                           shift and go to state 203
    var_cte                        shift and go to state 104

state 191

    (83) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN . remove_bottle_bottom
    (86) remove_bottle_bottom -> . epsilon
    (107) epsilon -> .

    OP_DIVISION     reduce using rule 107 (epsilon -> .)
    OP_TIMES        reduce using rule 107 (epsilon -> .)
    OP_PLUS         reduce using rule 107 (epsilon -> .)
    OP_MINUS        reduce using rule 107 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 107 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 107 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 107 (epsilon -> .)
    AND             reduce using rule 107 (epsilon -> .)
    OR              reduce using rule 107 (epsilon -> .)
    SEMICOLON       reduce using rule 107 (epsilon -> .)
    OP_RPAREN       reduce using rule 107 (epsilon -> .)
    COMA            reduce using rule 107 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 204
    epsilon                        shift and go to state 205

state 192

    (92) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS . bloque_figura
    (100) bloque_figura -> . LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 207

    bloque_figura                  shift and go to state 206

state 193

    (45) assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    ID              reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    IF              reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    PRINT           reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    FOR             reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    RETURN          reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    FIGURE          reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    INT             reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    FLOAT           reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    STRING          reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    OP_LPAREN       reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    VAR_INT         reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)
    VAR_STRING      reduce using rule 45 (assigment -> ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON .)


state 194

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 208


state 195

    (49) if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE . bloque
    (34) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 182

    bloque                         shift and go to state 209

state 196

    (34) bloque -> LCURLY_BRACKET bloque_primo . RCURLY_BRACKET
    (35) bloque_primo -> bloque_primo . statement
    (37) statement -> . assigment
    (38) statement -> . if
    (39) statement -> . printer
    (40) statement -> . increment
    (41) statement -> . for
    (42) statement -> . return
    (43) statement -> . function_call
    (44) statement -> . fun_esp
    (45) assigment -> . ID push_varID_to_Stack OP_EQUALS push_equalsTo_stackSymbol mega_expression SEMICOLON
    (46) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (48) if -> . IF OP_LPAREN mega_expression OP_RPAREN bloque
    (49) if -> . IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque
    (50) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (53) increment -> . ID OP_PLUS_EQUALS mega_expression SEMICOLON
    (54) increment -> . ID OP_MINUS_EQUALS mega_expression SEMICOLON
    (55) increment -> . ID OP_PLUS OP_PLUS SEMICOLON
    (56) increment -> . ID OP_MINUS OP_MINUS SEMICOLON
    (57) for -> . FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque
    (58) return -> . RETURN mega_expression SEMICOLON
    (59) function_call -> . ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (91) fun_esp -> . figure_creation
    (92) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura

    RCURLY_BRACKET  shift and go to state 210
    ID              shift and go to state 77
    IF              shift and go to state 78
    PRINT           shift and go to state 79
    FOR             shift and go to state 80
    RETURN          shift and go to state 81
    FIGURE          shift and go to state 83

    statement                      shift and go to state 211
    assigment                      shift and go to state 212
    if                             shift and go to state 213
    printer                        shift and go to state 214
    increment                      shift and go to state 215
    for                            shift and go to state 216
    return                         shift and go to state 217
    function_call                  shift and go to state 218
    fun_esp                        shift and go to state 219
    figure_creation                shift and go to state 82

state 197

    (36) bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 36 (bloque_primo -> epsilon .)
    ID              reduce using rule 36 (bloque_primo -> epsilon .)
    IF              reduce using rule 36 (bloque_primo -> epsilon .)
    PRINT           reduce using rule 36 (bloque_primo -> epsilon .)
    FOR             reduce using rule 36 (bloque_primo -> epsilon .)
    RETURN          reduce using rule 36 (bloque_primo -> epsilon .)
    FIGURE          reduce using rule 36 (bloque_primo -> epsilon .)


state 198

    (57) for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment . OP_RPAREN bloque

    OP_RPAREN       shift and go to state 220


state 199

    (53) increment -> ID . OP_PLUS_EQUALS mega_expression SEMICOLON
    (54) increment -> ID . OP_MINUS_EQUALS mega_expression SEMICOLON
    (55) increment -> ID . OP_PLUS OP_PLUS SEMICOLON
    (56) increment -> ID . OP_MINUS OP_MINUS SEMICOLON

    OP_PLUS_EQUALS  shift and go to state 90
    OP_MINUS_EQUALS shift and go to state 91
    OP_PLUS         shift and go to state 92
    OP_MINUS        shift and go to state 93


state 200

    (74) expression -> term check_symbol_exp OP_PLUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    AND             reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OR              reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    SEMICOLON       reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_RPAREN       reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    COMA            reduce using rule 74 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)


state 201

    (75) expression -> term check_symbol_exp OP_MINUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    AND             reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OR              reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    SEMICOLON       reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_RPAREN       reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    COMA            reduce using rule 75 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)


state 202

    (79) term -> fact check_symbol_term OP_DIVISION push_symbol term .

    OP_PLUS         reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_MINUS        reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_THAN reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_THAN    reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    AND             reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OR              reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    SEMICOLON       reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_RPAREN       reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    COMA            reduce using rule 79 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)


state 203

    (80) term -> fact check_symbol_term OP_TIMES push_symbol term .

    OP_PLUS         reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_MINUS        reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_THAN reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_THAN    reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    AND             reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OR              reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    SEMICOLON       reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_RPAREN       reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    COMA            reduce using rule 80 (term -> fact check_symbol_term OP_TIMES push_symbol term .)


state 204

    (83) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .

    OP_DIVISION     reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_TIMES        reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_PLUS         reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_MINUS        reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    AND             reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OR              reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    SEMICOLON       reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    COMA            reduce using rule 83 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)


state 205

    (86) remove_bottle_bottom -> epsilon .

    OP_DIVISION     reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_TIMES        reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_PLUS         reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_MINUS        reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_THAN reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_LESS_THAN    reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    AND             reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OR              reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    SEMICOLON       reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    OP_RPAREN       reduce using rule 86 (remove_bottle_bottom -> epsilon .)
    COMA            reduce using rule 86 (remove_bottle_bottom -> epsilon .)


state 206

    (92) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .

    RCURLY_BRACKET  reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    ID              reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    IF              reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    PRINT           reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FOR             reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    RETURN          reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FIGURE          reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    INT             reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FLOAT           reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    STRING          reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    BOOLEAN         reduce using rule 92 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)


state 207

    (100) bloque_figura -> LCURLY_BRACKET . bloque_figura_primo RCURLY_BRACKET
    (101) bloque_figura_primo -> . bloque_figura_primo figura_attr
    (102) bloque_figura_primo -> . epsilon
    (107) epsilon -> .

    RCURLY_BRACKET  reduce using rule 107 (epsilon -> .)
    COLOR           reduce using rule 107 (epsilon -> .)
    SIZE            reduce using rule 107 (epsilon -> .)
    VECTOR          reduce using rule 107 (epsilon -> .)

    bloque_figura_primo            shift and go to state 221
    epsilon                        shift and go to state 222

state 208

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    ID              reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    IF              reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    PRINT           reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FOR             reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    RETURN          reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FIGURE          reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    INT             reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FLOAT           reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    STRING          reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    OP_LPAREN       reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_INT         reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_STRING      reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)


state 209

    (49) if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .

    RCURLY_BRACKET  reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    ID              reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    IF              reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    PRINT           reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    FOR             reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    RETURN          reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    FIGURE          reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    INT             reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    FLOAT           reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    STRING          reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)
    BOOLEAN         reduce using rule 49 (if -> IF OP_LPAREN mega_expression OP_RPAREN bloque ELSE bloque .)


state 210

    (34) bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .

    ELSE            reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RCURLY_BRACKET  reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ID              reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    IF              reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FOR             reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    INT             reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    STRING          reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)


state 211

    (35) bloque_primo -> bloque_primo statement .

    RCURLY_BRACKET  reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    ID              reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    IF              reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    PRINT           reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    FOR             reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    RETURN          reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    FIGURE          reduce using rule 35 (bloque_primo -> bloque_primo statement .)


state 212

    (37) statement -> assigment .

    RCURLY_BRACKET  reduce using rule 37 (statement -> assigment .)
    ID              reduce using rule 37 (statement -> assigment .)
    IF              reduce using rule 37 (statement -> assigment .)
    PRINT           reduce using rule 37 (statement -> assigment .)
    FOR             reduce using rule 37 (statement -> assigment .)
    RETURN          reduce using rule 37 (statement -> assigment .)
    FIGURE          reduce using rule 37 (statement -> assigment .)


state 213

    (38) statement -> if .

    RCURLY_BRACKET  reduce using rule 38 (statement -> if .)
    ID              reduce using rule 38 (statement -> if .)
    IF              reduce using rule 38 (statement -> if .)
    PRINT           reduce using rule 38 (statement -> if .)
    FOR             reduce using rule 38 (statement -> if .)
    RETURN          reduce using rule 38 (statement -> if .)
    FIGURE          reduce using rule 38 (statement -> if .)


state 214

    (39) statement -> printer .

    RCURLY_BRACKET  reduce using rule 39 (statement -> printer .)
    ID              reduce using rule 39 (statement -> printer .)
    IF              reduce using rule 39 (statement -> printer .)
    PRINT           reduce using rule 39 (statement -> printer .)
    FOR             reduce using rule 39 (statement -> printer .)
    RETURN          reduce using rule 39 (statement -> printer .)
    FIGURE          reduce using rule 39 (statement -> printer .)


state 215

    (40) statement -> increment .

    RCURLY_BRACKET  reduce using rule 40 (statement -> increment .)
    ID              reduce using rule 40 (statement -> increment .)
    IF              reduce using rule 40 (statement -> increment .)
    PRINT           reduce using rule 40 (statement -> increment .)
    FOR             reduce using rule 40 (statement -> increment .)
    RETURN          reduce using rule 40 (statement -> increment .)
    FIGURE          reduce using rule 40 (statement -> increment .)


state 216

    (41) statement -> for .

    RCURLY_BRACKET  reduce using rule 41 (statement -> for .)
    ID              reduce using rule 41 (statement -> for .)
    IF              reduce using rule 41 (statement -> for .)
    PRINT           reduce using rule 41 (statement -> for .)
    FOR             reduce using rule 41 (statement -> for .)
    RETURN          reduce using rule 41 (statement -> for .)
    FIGURE          reduce using rule 41 (statement -> for .)


state 217

    (42) statement -> return .

    RCURLY_BRACKET  reduce using rule 42 (statement -> return .)
    ID              reduce using rule 42 (statement -> return .)
    IF              reduce using rule 42 (statement -> return .)
    PRINT           reduce using rule 42 (statement -> return .)
    FOR             reduce using rule 42 (statement -> return .)
    RETURN          reduce using rule 42 (statement -> return .)
    FIGURE          reduce using rule 42 (statement -> return .)


state 218

    (43) statement -> function_call .

    RCURLY_BRACKET  reduce using rule 43 (statement -> function_call .)
    ID              reduce using rule 43 (statement -> function_call .)
    IF              reduce using rule 43 (statement -> function_call .)
    PRINT           reduce using rule 43 (statement -> function_call .)
    FOR             reduce using rule 43 (statement -> function_call .)
    RETURN          reduce using rule 43 (statement -> function_call .)
    FIGURE          reduce using rule 43 (statement -> function_call .)


state 219

    (44) statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 44 (statement -> fun_esp .)
    ID              reduce using rule 44 (statement -> fun_esp .)
    IF              reduce using rule 44 (statement -> fun_esp .)
    PRINT           reduce using rule 44 (statement -> fun_esp .)
    FOR             reduce using rule 44 (statement -> fun_esp .)
    RETURN          reduce using rule 44 (statement -> fun_esp .)
    FIGURE          reduce using rule 44 (statement -> fun_esp .)


state 220

    (57) for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN . bloque
    (34) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 182

    bloque                         shift and go to state 223

state 221

    (100) bloque_figura -> LCURLY_BRACKET bloque_figura_primo . RCURLY_BRACKET
    (101) bloque_figura_primo -> bloque_figura_primo . figura_attr
    (103) figura_attr -> . vector
    (104) figura_attr -> . COLOR OP_TWO_POINTS ID SEMICOLON
    (105) figura_attr -> . SIZE OP_TWO_POINTS mega_expression SEMICOLON
    (106) vector -> . VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    RCURLY_BRACKET  shift and go to state 224
    COLOR           shift and go to state 227
    SIZE            shift and go to state 228
    VECTOR          shift and go to state 229

    figura_attr                    shift and go to state 225
    vector                         shift and go to state 226

state 222

    (102) bloque_figura_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 102 (bloque_figura_primo -> epsilon .)
    COLOR           reduce using rule 102 (bloque_figura_primo -> epsilon .)
    SIZE            reduce using rule 102 (bloque_figura_primo -> epsilon .)
    VECTOR          reduce using rule 102 (bloque_figura_primo -> epsilon .)


state 223

    (57) for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .

    RCURLY_BRACKET  reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    ID              reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    IF              reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    PRINT           reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    FOR             reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    RETURN          reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    FIGURE          reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    INT             reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    FLOAT           reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    STRING          reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)
    BOOLEAN         reduce using rule 57 (for -> FOR OP_LPAREN assigment mega_expression SEMICOLON increment OP_RPAREN bloque .)


state 224

    (100) bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    ID              reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    IF              reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FOR             reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    INT             reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    STRING          reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 100 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)


state 225

    (101) bloque_figura_primo -> bloque_figura_primo figura_attr .

    RCURLY_BRACKET  reduce using rule 101 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    COLOR           reduce using rule 101 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    SIZE            reduce using rule 101 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    VECTOR          reduce using rule 101 (bloque_figura_primo -> bloque_figura_primo figura_attr .)


state 226

    (103) figura_attr -> vector .

    RCURLY_BRACKET  reduce using rule 103 (figura_attr -> vector .)
    COLOR           reduce using rule 103 (figura_attr -> vector .)
    SIZE            reduce using rule 103 (figura_attr -> vector .)
    VECTOR          reduce using rule 103 (figura_attr -> vector .)


state 227

    (104) figura_attr -> COLOR . OP_TWO_POINTS ID SEMICOLON

    OP_TWO_POINTS   shift and go to state 230


state 228

    (105) figura_attr -> SIZE . OP_TWO_POINTS mega_expression SEMICOLON

    OP_TWO_POINTS   shift and go to state 231


state 229

    (106) vector -> VECTOR . ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    ID              shift and go to state 232


state 230

    (104) figura_attr -> COLOR OP_TWO_POINTS . ID SEMICOLON

    ID              shift and go to state 233


state 231

    (105) figura_attr -> SIZE OP_TWO_POINTS . mega_expression SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 234
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 232

    (106) vector -> VECTOR ID . OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_TWO_POINTS   shift and go to state 235


state 233

    (104) figura_attr -> COLOR OP_TWO_POINTS ID . SEMICOLON

    SEMICOLON       shift and go to state 236


state 234

    (105) figura_attr -> SIZE OP_TWO_POINTS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 237


state 235

    (106) vector -> VECTOR ID OP_TWO_POINTS . OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 238


state 236

    (104) figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .

    RCURLY_BRACKET  reduce using rule 104 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    COLOR           reduce using rule 104 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    SIZE            reduce using rule 104 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    VECTOR          reduce using rule 104 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)


state 237

    (105) figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 105 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    COLOR           reduce using rule 105 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    SIZE            reduce using rule 105 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    VECTOR          reduce using rule 105 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)


state 238

    (106) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN . mega_expression COMA mega_expression OP_RPAREN SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 239
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 239

    (106) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression . COMA mega_expression OP_RPAREN SEMICOLON

    COMA            shift and go to state 240


state 240

    (106) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA . mega_expression OP_RPAREN SEMICOLON
    (63) mega_expression -> . super_expression
    (64) mega_expression -> . super_expression AND super_expression
    (65) mega_expression -> . super_expression OR super_expression
    (66) super_expression -> . expression
    (67) super_expression -> . expression OP_GREATER_THAN expression
    (68) super_expression -> . expression OP_LESS_THAN expression
    (69) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (70) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (71) super_expression -> . expression OP_EQUALS_TWO expression
    (72) super_expression -> . expression OP_NOT_EQUALS expression
    (73) expression -> . term check_symbol_exp
    (74) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (75) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (78) term -> . fact check_symbol_term
    (79) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (80) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (82) fact -> . var_cte push_varID_to_Stack
    (83) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (87) var_cte -> . ID
    (88) var_cte -> . VAR_INT
    (89) var_cte -> . VAR_FLOAT
    (90) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 105
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 241
    super_expression               shift and go to state 100
    expression                     shift and go to state 101
    term                           shift and go to state 102
    fact                           shift and go to state 103
    var_cte                        shift and go to state 104

state 241

    (106) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 242


state 242

    (106) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 243


state 243

    (106) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 106 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    COLOR           reduce using rule 106 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    SIZE            reduce using rule 106 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    VECTOR          reduce using rule 106 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 46 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 46 resolved as shift
WARNING: shift/reduce conflict for STRING in state 46 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 46 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 55 resolved as shift
WARNING: shift/reduce conflict for RCURLY_BRACKET in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for FOR in state 58 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 58 resolved as shift
WARNING: shift/reduce conflict for FIGURE in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 58 resolved as shift
