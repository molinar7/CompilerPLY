Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CARET
    QUOT_MARK
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
Rule 3     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 4     vars -> epsilon
Rule 5     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 6     vars_prime -> epsilon
Rule 7     pushTo_varsTable_WithCTE -> epsilon
Rule 8     pushTo_varsTable -> epsilon
Rule 9     save_type -> epsilon
Rule 10    function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 11    function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 12    function -> epsilon
Rule 13    pushTo_FunctionDir -> epsilon
Rule 14    pushTo_functionSignature -> epsilon
Rule 15    add_NumVars -> epsilon
Rule 16    add_Function_FirstQuadruple -> epsilon
Rule 17    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple
Rule 18    fill_firstQuadruple -> epsilon
Rule 19    push_end_quadruple -> epsilon
Rule 20    type -> INT
Rule 21    type -> FLOAT
Rule 22    type -> STRING
Rule 23    type -> BOOLEAN
Rule 24    function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime
Rule 25    function_parameters -> epsilon
Rule 26    function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime
Rule 27    function_parameters_prime -> epsilon
Rule 28    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 29    function_bloque_primo -> function_bloque_primo function_statement
Rule 30    function_bloque_primo -> epsilon
Rule 31    function_statement -> assigment
Rule 32    function_statement -> if
Rule 33    function_statement -> printer
Rule 34    function_statement -> increment
Rule 35    function_statement -> for
Rule 36    function_statement -> return
Rule 37    function_statement -> function_call
Rule 38    function_statement -> fun_esp
Rule 39    function_statement -> vars
Rule 40    function_statement -> while_loop
Rule 41    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 42    bloque_primo -> bloque_primo statement
Rule 43    bloque_primo -> epsilon
Rule 44    statement -> assigment
Rule 45    statement -> if
Rule 46    statement -> printer
Rule 47    statement -> increment
Rule 48    statement -> for
Rule 49    statement -> return
Rule 50    statement -> function_call
Rule 51    statement -> fun_esp
Rule 52    statement -> while_loop
Rule 53    assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 54    assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
Rule 55    equals_quadruple -> epsilon
Rule 56    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
Rule 57    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
Rule 58    if_gotoF_quadruple -> epsilon
Rule 59    fill_if_gotoF1 -> epsilon
Rule 60    fill_if_gotoF2 -> epsilon
Rule 61    fill_if_goto -> epsilon
Rule 62    if_goto_quadruple -> epsilon
Rule 63    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 64    impression -> mega_expression printer_quadruple
Rule 65    impression -> mega_expression printer_quadruple COMA impression
Rule 66    printer_quadruple -> epsilon
Rule 67    increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 68    increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 69    increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
Rule 70    increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
Rule 71    incrementByOne -> epsilon
Rule 72    increment_equals -> epsilon
Rule 73    for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
Rule 74    while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
Rule 75    loop_jumpCount -> epsilon
Rule 76    loop_gotoF -> epsilon
Rule 77    loop_fill -> epsilon
Rule 78    return -> RETURN mega_expression return_quadruple SEMICOLON
Rule 79    return_quadruple -> epsilon
Rule 80    function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
Rule 81    function_call_parameters -> mega_expression create_param function_call_parameters_prime
Rule 82    function_call_parameters -> epsilon
Rule 83    function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime
Rule 84    function_call_parameters_prime -> epsilon
Rule 85    create_era -> epsilon
Rule 86    create_param -> epsilon
Rule 87    create_gosub -> epsilon
Rule 88    mega_expression -> super_expression check_symbol_megaexp
Rule 89    mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp
Rule 90    mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp
Rule 91    check_symbol_megaexp -> epsilon
Rule 92    super_expression -> expression check_symbol_superexp
Rule 93    super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
Rule 94    super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp
Rule 95    super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 96    super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 97    super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
Rule 98    super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
Rule 99    check_symbol_superexp -> epsilon
Rule 100   expression -> term check_symbol_exp
Rule 101   expression -> term check_symbol_exp OP_PLUS push_symbol expression
Rule 102   expression -> term check_symbol_exp OP_MINUS push_symbol expression
Rule 103   push_symbol -> epsilon
Rule 104   check_symbol_exp -> epsilon
Rule 105   term -> fact check_symbol_term
Rule 106   term -> fact check_symbol_term OP_DIVISION push_symbol term
Rule 107   term -> fact check_symbol_term OP_TIMES push_symbol term
Rule 108   check_symbol_term -> epsilon
Rule 109   fact -> var_cte
Rule 110   fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
Rule 111   push_varID_to_Stack -> epsilon
Rule 112   push_bottle_bottom -> epsilon
Rule 113   remove_bottle_bottom -> epsilon
Rule 114   var_cte -> ID push_varID_to_Stack
Rule 115   var_cte -> VAR_INT push_cte_toTable
Rule 116   var_cte -> VAR_FLOAT push_cte_toTable
Rule 117   var_cte -> VAR_STRING push_cte_toTable
Rule 118   var_cte -> VAR_BOOLEAN
Rule 119   push_cte_toTable -> epsilon
Rule 120   fun_esp -> figure_creation
Rule 121   figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
Rule 122   figure -> POINT
Rule 123   figure -> LINE
Rule 124   figure -> SQUARE
Rule 125   figure -> RECTANGLE
Rule 126   figure -> TRIANGLE
Rule 127   figure -> CIRCLE
Rule 128   figure -> ARC
Rule 129   bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET
Rule 130   bloque_figura_primo -> bloque_figura_primo figura_attr
Rule 131   bloque_figura_primo -> epsilon
Rule 132   figura_attr -> vector
Rule 133   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 134   figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON
Rule 135   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON
Rule 136   var_cte_VARS -> ID
Rule 137   var_cte_VARS -> VAR_INT
Rule 138   var_cte_VARS -> VAR_FLOAT
Rule 139   var_cte_VARS -> VAR_STRING
Rule 140   var_cte_VARS -> VAR_BOOLEAN
Rule 141   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 89
ARC                  : 128
BOOLEAN              : 23
CARET                : 
CIRCLE               : 127
COLOR                : 133
COMA                 : 5 26 65 83 135
ELSE                 : 57
FIGURE               : 121
FLOAT                : 21
FOR                  : 73
FUNCTION             : 10 11
ID                   : 1 2 3 5 10 11 24 26 53 54 67 68 69 70 80 114 121 133 135 136
IF                   : 56 57
INT                  : 20
LCURLY_BRACKET       : 1 28 41 129
LINE                 : 123
MAIN                 : 17
OP_DIVISION          : 106
OP_EQUALS            : 2 53 54
OP_EQUALS_TWO        : 97
OP_GREATER_EQUALS_THAN : 95
OP_GREATER_THAN      : 93
OP_LESS_EQUALS_THAN  : 96
OP_LESS_THAN         : 94
OP_LPAREN            : 10 11 17 56 57 63 73 74 80 110 135
OP_LSQUARE_PAREN     : 54
OP_MINUS             : 70 70 102
OP_MINUS_EQUALS      : 68
OP_NOT_EQUALS        : 98
OP_PLUS              : 69 69 101
OP_PLUS_EQUALS       : 67
OP_RPAREN            : 10 11 17 56 57 63 73 74 80 110 135
OP_RSQUARE_PAREN     : 54
OP_TIMES             : 107
OP_TWO_POINTS        : 121 133 134 135
OR                   : 90
POINT                : 122
POSSESS              : 121
PRINT                : 63
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 28 41 129
RECTANGLE            : 125
RETURN               : 78
SEMICOLON            : 2 3 53 54 63 67 68 69 70 73 78 80 133 134 135
SIZE                 : 134
SQUARE               : 124
STRING               : 22
TRIANGLE             : 126
VAR                  : 
VAR_BOOLEAN          : 118 140
VAR_FLOAT            : 116 138
VAR_INT              : 54 115 137
VAR_STRING           : 117 139
VECTOR               : 135
VOID                 : 11
WHILE                : 74
error                : 

Nonterminals, with rules where they appear

add_Function_FirstQuadruple : 10 11
add_NumVars          : 10 11
assigment            : 31 44 73
bloque               : 56 57 57 73 74
bloque_figura        : 121
bloque_figura_primo  : 129 130
bloque_primo         : 41 42
check_symbol_exp     : 100 101 102
check_symbol_megaexp : 88 89 90
check_symbol_superexp : 92 93 94 95 96 97 98
check_symbol_term    : 105 106 107
create_era           : 80
create_gosub         : 80
create_param         : 81 83
epsilon              : 4 6 7 8 9 12 13 14 15 16 18 19 25 27 30 43 55 58 59 60 61 62 66 71 72 75 76 77 79 82 84 85 86 87 91 99 103 104 108 111 112 113 119 131
equals_quadruple     : 53
expression           : 92 93 93 94 94 95 95 96 96 97 97 98 98 101 102
fact                 : 105 106 107
figura_attr          : 130
figure               : 121
figure_creation      : 120
fill_firstQuadruple  : 17
fill_if_goto         : 57
fill_if_gotoF1       : 56
fill_if_gotoF2       : 57
for                  : 35 48
fun_esp              : 38 51
function             : 1 10 11
function_bloque      : 10 11 17
function_bloque_primo : 28 29
function_call        : 37 50
function_call_parameters : 80
function_call_parameters_prime : 81 83
function_parameters  : 10 11
function_parameters_prime : 24 26
function_statement   : 29
if                   : 32 45
if_gotoF_quadruple   : 56 57
if_goto_quadruple    : 57
impression           : 63 65
increment            : 34 47 73
incrementByOne       : 69 70
increment_equals     : 67 68
loop_fill            : 73 74
loop_gotoF           : 73 74
loop_jumpCount       : 73 74
main_function        : 1
mega_expression      : 53 54 56 57 64 65 67 68 73 74 78 81 83 110 134 135 135
printer              : 33 46
printer_quadruple    : 64 65
program              : 0
pushTo_FunctionDir   : 10 11 17
pushTo_functionSignature : 10 11
pushTo_varsTable     : 3 5 24 26
pushTo_varsTable_WithCTE : 2
push_bottle_bottom   : 110
push_cte_toTable     : 115 116 117
push_end_quadruple   : 17
push_symbol          : 53 67 68 89 90 93 94 95 96 97 98 101 102 106 107
push_varID_to_Stack  : 53 67 68 69 70 114
remove_bottle_bottom : 110
return               : 36 49
return_quadruple     : 78
save_type            : 2 3 24 26
statement            : 42
super_expression     : 88 89 89 90 90
term                 : 100 101 102 106 107
type                 : 2 3 10 24 26
var_cte              : 109
var_cte_VARS         : 2
vars                 : 1 2 3 39
vars_prime           : 3 5
vector               : 132
while_loop           : 40 52

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 4


state 4

    (1) program -> PROGRAM ID LCURLY_BRACKET . vars function main_function RCURLY_BRACKET
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN
    (141) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 141 (epsilon -> .)
    MAIN            reduce using rule 141 (epsilon -> .)

    vars                           shift and go to state 5
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 5

    (1) program -> PROGRAM ID LCURLY_BRACKET vars . function main_function RCURLY_BRACKET
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (12) function -> . epsilon
    (141) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 141 (epsilon -> .)

    function                       shift and go to state 12
    epsilon                        shift and go to state 14

state 6

    (2) vars -> type . save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type . save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (9) save_type -> . epsilon
    (141) epsilon -> .

    ID              reduce using rule 141 (epsilon -> .)

    save_type                      shift and go to state 15
    epsilon                        shift and go to state 16

state 7

    (4) vars -> epsilon .

    FUNCTION        reduce using rule 4 (vars -> epsilon .)
    MAIN            reduce using rule 4 (vars -> epsilon .)
    RCURLY_BRACKET  reduce using rule 4 (vars -> epsilon .)
    ID              reduce using rule 4 (vars -> epsilon .)
    IF              reduce using rule 4 (vars -> epsilon .)
    PRINT           reduce using rule 4 (vars -> epsilon .)
    FOR             reduce using rule 4 (vars -> epsilon .)
    RETURN          reduce using rule 4 (vars -> epsilon .)
    WHILE           reduce using rule 4 (vars -> epsilon .)
    FIGURE          reduce using rule 4 (vars -> epsilon .)
    INT             reduce using rule 4 (vars -> epsilon .)
    FLOAT           reduce using rule 4 (vars -> epsilon .)
    STRING          reduce using rule 4 (vars -> epsilon .)
    BOOLEAN         reduce using rule 4 (vars -> epsilon .)


state 8

    (20) type -> INT .

    ID              reduce using rule 20 (type -> INT .)


state 9

    (21) type -> FLOAT .

    ID              reduce using rule 21 (type -> FLOAT .)


state 10

    (22) type -> STRING .

    ID              reduce using rule 22 (type -> STRING .)


state 11

    (23) type -> BOOLEAN .

    ID              reduce using rule 23 (type -> BOOLEAN .)


state 12

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function . main_function RCURLY_BRACKET
    (17) main_function -> . MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple

    MAIN            shift and go to state 18

    main_function                  shift and go to state 17

state 13

    (10) function -> FUNCTION . type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> FUNCTION . VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN

    VOID            shift and go to state 20
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 19

state 14

    (12) function -> epsilon .

    MAIN            reduce using rule 12 (function -> epsilon .)


state 15

    (2) vars -> type save_type . ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type . ID pushTo_varsTable vars_prime SEMICOLON vars

    ID              shift and go to state 21


state 16

    (9) save_type -> epsilon .

    ID              reduce using rule 9 (save_type -> epsilon .)


state 17

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function . RCURLY_BRACKET

    RCURLY_BRACKET  shift and go to state 22


state 18

    (17) main_function -> MAIN . pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple
    (13) pushTo_FunctionDir -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 23
    epsilon                        shift and go to state 24

state 19

    (10) function -> FUNCTION type . ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    ID              shift and go to state 25


state 20

    (11) function -> FUNCTION VOID . ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    ID              shift and go to state 26


state 21

    (2) vars -> type save_type ID . OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type ID . pushTo_varsTable vars_prime SEMICOLON vars
    (8) pushTo_varsTable -> . epsilon
    (141) epsilon -> .

    OP_EQUALS       shift and go to state 27
    COMA            reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)

    pushTo_varsTable               shift and go to state 28
    epsilon                        shift and go to state 29

state 22

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .)


state 23

    (17) main_function -> MAIN pushTo_FunctionDir . OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple

    OP_LPAREN       shift and go to state 30


state 24

    (13) pushTo_FunctionDir -> epsilon .

    OP_LPAREN       reduce using rule 13 (pushTo_FunctionDir -> epsilon .)


state 25

    (10) function -> FUNCTION type ID . pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (13) pushTo_FunctionDir -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 31
    epsilon                        shift and go to state 24

state 26

    (11) function -> FUNCTION VOID ID . pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (13) pushTo_FunctionDir -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 32
    epsilon                        shift and go to state 24

state 27

    (2) vars -> type save_type ID OP_EQUALS . var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (136) var_cte_VARS -> . ID
    (137) var_cte_VARS -> . VAR_INT
    (138) var_cte_VARS -> . VAR_FLOAT
    (139) var_cte_VARS -> . VAR_STRING
    (140) var_cte_VARS -> . VAR_BOOLEAN

    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37
    VAR_BOOLEAN     shift and go to state 38

    var_cte_VARS                   shift and go to state 34

state 28

    (3) vars -> type save_type ID pushTo_varsTable . vars_prime SEMICOLON vars
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (141) epsilon -> .

    COMA            shift and go to state 40
    SEMICOLON       reduce using rule 141 (epsilon -> .)

    vars_prime                     shift and go to state 39
    epsilon                        shift and go to state 41

state 29

    (8) pushTo_varsTable -> epsilon .

    COMA            reduce using rule 8 (pushTo_varsTable -> epsilon .)
    SEMICOLON       reduce using rule 8 (pushTo_varsTable -> epsilon .)
    OP_RPAREN       reduce using rule 8 (pushTo_varsTable -> epsilon .)


state 30

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN . OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple

    OP_RPAREN       shift and go to state 42


state 31

    (10) function -> FUNCTION type ID pushTo_FunctionDir . OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_LPAREN       shift and go to state 43


state 32

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir . OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_LPAREN       shift and go to state 44


state 33

    (136) var_cte_VARS -> ID .

    SEMICOLON       reduce using rule 136 (var_cte_VARS -> ID .)


state 34

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS . pushTo_varsTable_WithCTE SEMICOLON vars
    (7) pushTo_varsTable_WithCTE -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    pushTo_varsTable_WithCTE       shift and go to state 45
    epsilon                        shift and go to state 46

state 35

    (137) var_cte_VARS -> VAR_INT .

    SEMICOLON       reduce using rule 137 (var_cte_VARS -> VAR_INT .)


state 36

    (138) var_cte_VARS -> VAR_FLOAT .

    SEMICOLON       reduce using rule 138 (var_cte_VARS -> VAR_FLOAT .)


state 37

    (139) var_cte_VARS -> VAR_STRING .

    SEMICOLON       reduce using rule 139 (var_cte_VARS -> VAR_STRING .)


state 38

    (140) var_cte_VARS -> VAR_BOOLEAN .

    SEMICOLON       reduce using rule 140 (var_cte_VARS -> VAR_BOOLEAN .)


state 39

    (3) vars -> type save_type ID pushTo_varsTable vars_prime . SEMICOLON vars

    SEMICOLON       shift and go to state 47


state 40

    (5) vars_prime -> COMA . ID pushTo_varsTable vars_prime

    ID              shift and go to state 48


state 41

    (6) vars_prime -> epsilon .

    SEMICOLON       reduce using rule 6 (vars_prime -> epsilon .)


state 42

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN . fill_firstQuadruple function_bloque push_end_quadruple
    (18) fill_firstQuadruple -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    fill_firstQuadruple            shift and go to state 49
    epsilon                        shift and go to state 50

state 43

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN . function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (24) function_parameters -> . type save_type ID pushTo_varsTable function_parameters_prime
    (25) function_parameters -> . epsilon
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN
    (141) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    type                           shift and go to state 51
    function_parameters            shift and go to state 52
    epsilon                        shift and go to state 53

state 44

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN . function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (24) function_parameters -> . type save_type ID pushTo_varsTable function_parameters_prime
    (25) function_parameters -> . epsilon
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN
    (141) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    function_parameters            shift and go to state 54
    type                           shift and go to state 51
    epsilon                        shift and go to state 53

state 45

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE . SEMICOLON vars

    SEMICOLON       shift and go to state 55


state 46

    (7) pushTo_varsTable_WithCTE -> epsilon .

    SEMICOLON       reduce using rule 7 (pushTo_varsTable_WithCTE -> epsilon .)


state 47

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN
    (141) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 141 (epsilon -> .)
    MAIN            reduce using rule 141 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)

  ! INT             [ reduce using rule 141 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 141 (epsilon -> .) ]
  ! STRING          [ reduce using rule 141 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 141 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 56
    epsilon                        shift and go to state 7

state 48

    (5) vars_prime -> COMA ID . pushTo_varsTable vars_prime
    (8) pushTo_varsTable -> . epsilon
    (141) epsilon -> .

    COMA            reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)

    pushTo_varsTable               shift and go to state 57
    epsilon                        shift and go to state 29

state 49

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple . function_bloque push_end_quadruple
    (28) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 59

    function_bloque                shift and go to state 58

state 50

    (18) fill_firstQuadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 18 (fill_firstQuadruple -> epsilon .)


state 51

    (24) function_parameters -> type . save_type ID pushTo_varsTable function_parameters_prime
    (9) save_type -> . epsilon
    (141) epsilon -> .

    ID              reduce using rule 141 (epsilon -> .)

    save_type                      shift and go to state 60
    epsilon                        shift and go to state 16

state 52

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters . OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_RPAREN       shift and go to state 61


state 53

    (25) function_parameters -> epsilon .

    OP_RPAREN       reduce using rule 25 (function_parameters -> epsilon .)


state 54

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters . OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_RPAREN       shift and go to state 62


state 55

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN
    (141) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 141 (epsilon -> .)
    MAIN            reduce using rule 141 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)

  ! INT             [ reduce using rule 141 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 141 (epsilon -> .) ]
  ! STRING          [ reduce using rule 141 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 141 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 63
    epsilon                        shift and go to state 7

state 56

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .

    FUNCTION        reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    MAIN            reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ID              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    IF              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    PRINT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FOR             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RETURN          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    WHILE           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FIGURE          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    INT             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FLOAT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    STRING          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    BOOLEAN         reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)


state 57

    (5) vars_prime -> COMA ID pushTo_varsTable . vars_prime
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (141) epsilon -> .

    COMA            shift and go to state 40
    SEMICOLON       reduce using rule 141 (epsilon -> .)

    vars_prime                     shift and go to state 64
    epsilon                        shift and go to state 41

state 58

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque . push_end_quadruple
    (19) push_end_quadruple -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    push_end_quadruple             shift and go to state 65
    epsilon                        shift and go to state 66

state 59

    (28) function_bloque -> LCURLY_BRACKET . function_bloque_primo RCURLY_BRACKET
    (29) function_bloque_primo -> . function_bloque_primo function_statement
    (30) function_bloque_primo -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)
    INT             reduce using rule 141 (epsilon -> .)
    FLOAT           reduce using rule 141 (epsilon -> .)
    STRING          reduce using rule 141 (epsilon -> .)
    BOOLEAN         reduce using rule 141 (epsilon -> .)

    function_bloque_primo          shift and go to state 67
    epsilon                        shift and go to state 68

state 60

    (24) function_parameters -> type save_type . ID pushTo_varsTable function_parameters_prime

    ID              shift and go to state 69


state 61

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN . add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (16) add_Function_FirstQuadruple -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    add_Function_FirstQuadruple    shift and go to state 70
    epsilon                        shift and go to state 71

state 62

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN . add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (16) add_Function_FirstQuadruple -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    add_Function_FirstQuadruple    shift and go to state 72
    epsilon                        shift and go to state 71

state 63

    (2) vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .

    FUNCTION        reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    MAIN            reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    ID              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    IF              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    PRINT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    FOR             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    RETURN          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    WHILE           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    FIGURE          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    INT             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    FLOAT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    STRING          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)
    BOOLEAN         reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars .)


state 64

    (5) vars_prime -> COMA ID pushTo_varsTable vars_prime .

    SEMICOLON       reduce using rule 5 (vars_prime -> COMA ID pushTo_varsTable vars_prime .)


state 65

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple .

    RCURLY_BRACKET  reduce using rule 17 (main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque push_end_quadruple .)


state 66

    (19) push_end_quadruple -> epsilon .

    RCURLY_BRACKET  reduce using rule 19 (push_end_quadruple -> epsilon .)


state 67

    (28) function_bloque -> LCURLY_BRACKET function_bloque_primo . RCURLY_BRACKET
    (29) function_bloque_primo -> function_bloque_primo . function_statement
    (31) function_statement -> . assigment
    (32) function_statement -> . if
    (33) function_statement -> . printer
    (34) function_statement -> . increment
    (35) function_statement -> . for
    (36) function_statement -> . return
    (37) function_statement -> . function_call
    (38) function_statement -> . fun_esp
    (39) function_statement -> . vars
    (40) function_statement -> . while_loop
    (53) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (54) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (56) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (57) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (63) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (67) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (73) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (78) return -> . RETURN mega_expression return_quadruple SEMICOLON
    (80) function_call -> . ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (120) fun_esp -> . figure_creation
    (2) vars -> . type save_type ID OP_EQUALS var_cte_VARS pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (74) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (121) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN
    (141) epsilon -> .

  ! shift/reduce conflict for RCURLY_BRACKET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FIGURE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RCURLY_BRACKET  shift and go to state 73
    ID              shift and go to state 85
    IF              shift and go to state 86
    PRINT           shift and go to state 87
    FOR             shift and go to state 88
    RETURN          shift and go to state 89
    WHILE           shift and go to state 91
    FIGURE          shift and go to state 92
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

  ! RCURLY_BRACKET  [ reduce using rule 141 (epsilon -> .) ]
  ! ID              [ reduce using rule 141 (epsilon -> .) ]
  ! IF              [ reduce using rule 141 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 141 (epsilon -> .) ]
  ! FOR             [ reduce using rule 141 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 141 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 141 (epsilon -> .) ]
  ! FIGURE          [ reduce using rule 141 (epsilon -> .) ]
  ! INT             [ reduce using rule 141 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 141 (epsilon -> .) ]
  ! STRING          [ reduce using rule 141 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 141 (epsilon -> .) ]

    function_statement             shift and go to state 74
    assigment                      shift and go to state 75
    if                             shift and go to state 76
    printer                        shift and go to state 77
    increment                      shift and go to state 78
    for                            shift and go to state 79
    return                         shift and go to state 80
    function_call                  shift and go to state 81
    fun_esp                        shift and go to state 82
    vars                           shift and go to state 83
    while_loop                     shift and go to state 84
    figure_creation                shift and go to state 90
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 68

    (30) function_bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 30 (function_bloque_primo -> epsilon .)
    ID              reduce using rule 30 (function_bloque_primo -> epsilon .)
    IF              reduce using rule 30 (function_bloque_primo -> epsilon .)
    PRINT           reduce using rule 30 (function_bloque_primo -> epsilon .)
    FOR             reduce using rule 30 (function_bloque_primo -> epsilon .)
    RETURN          reduce using rule 30 (function_bloque_primo -> epsilon .)
    WHILE           reduce using rule 30 (function_bloque_primo -> epsilon .)
    FIGURE          reduce using rule 30 (function_bloque_primo -> epsilon .)
    INT             reduce using rule 30 (function_bloque_primo -> epsilon .)
    FLOAT           reduce using rule 30 (function_bloque_primo -> epsilon .)
    STRING          reduce using rule 30 (function_bloque_primo -> epsilon .)
    BOOLEAN         reduce using rule 30 (function_bloque_primo -> epsilon .)


state 69

    (24) function_parameters -> type save_type ID . pushTo_varsTable function_parameters_prime
    (8) pushTo_varsTable -> . epsilon
    (141) epsilon -> .

    COMA            reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    pushTo_varsTable               shift and go to state 93
    epsilon                        shift and go to state 29

state 70

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple . pushTo_functionSignature function_bloque add_NumVars function
    (14) pushTo_functionSignature -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    pushTo_functionSignature       shift and go to state 94
    epsilon                        shift and go to state 95

state 71

    (16) add_Function_FirstQuadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 16 (add_Function_FirstQuadruple -> epsilon .)


state 72

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple . pushTo_functionSignature function_bloque add_NumVars function
    (14) pushTo_functionSignature -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    pushTo_functionSignature       shift and go to state 96
    epsilon                        shift and go to state 95

state 73

    (28) function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 28 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    FUNCTION        reduce using rule 28 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    MAIN            reduce using rule 28 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)


state 74

    (29) function_bloque_primo -> function_bloque_primo function_statement .

    RCURLY_BRACKET  reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    ID              reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    IF              reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    PRINT           reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    FOR             reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    RETURN          reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    WHILE           reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    FIGURE          reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    INT             reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    FLOAT           reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    STRING          reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)
    BOOLEAN         reduce using rule 29 (function_bloque_primo -> function_bloque_primo function_statement .)


state 75

    (31) function_statement -> assigment .

    RCURLY_BRACKET  reduce using rule 31 (function_statement -> assigment .)
    ID              reduce using rule 31 (function_statement -> assigment .)
    IF              reduce using rule 31 (function_statement -> assigment .)
    PRINT           reduce using rule 31 (function_statement -> assigment .)
    FOR             reduce using rule 31 (function_statement -> assigment .)
    RETURN          reduce using rule 31 (function_statement -> assigment .)
    WHILE           reduce using rule 31 (function_statement -> assigment .)
    FIGURE          reduce using rule 31 (function_statement -> assigment .)
    INT             reduce using rule 31 (function_statement -> assigment .)
    FLOAT           reduce using rule 31 (function_statement -> assigment .)
    STRING          reduce using rule 31 (function_statement -> assigment .)
    BOOLEAN         reduce using rule 31 (function_statement -> assigment .)


state 76

    (32) function_statement -> if .

    RCURLY_BRACKET  reduce using rule 32 (function_statement -> if .)
    ID              reduce using rule 32 (function_statement -> if .)
    IF              reduce using rule 32 (function_statement -> if .)
    PRINT           reduce using rule 32 (function_statement -> if .)
    FOR             reduce using rule 32 (function_statement -> if .)
    RETURN          reduce using rule 32 (function_statement -> if .)
    WHILE           reduce using rule 32 (function_statement -> if .)
    FIGURE          reduce using rule 32 (function_statement -> if .)
    INT             reduce using rule 32 (function_statement -> if .)
    FLOAT           reduce using rule 32 (function_statement -> if .)
    STRING          reduce using rule 32 (function_statement -> if .)
    BOOLEAN         reduce using rule 32 (function_statement -> if .)


state 77

    (33) function_statement -> printer .

    RCURLY_BRACKET  reduce using rule 33 (function_statement -> printer .)
    ID              reduce using rule 33 (function_statement -> printer .)
    IF              reduce using rule 33 (function_statement -> printer .)
    PRINT           reduce using rule 33 (function_statement -> printer .)
    FOR             reduce using rule 33 (function_statement -> printer .)
    RETURN          reduce using rule 33 (function_statement -> printer .)
    WHILE           reduce using rule 33 (function_statement -> printer .)
    FIGURE          reduce using rule 33 (function_statement -> printer .)
    INT             reduce using rule 33 (function_statement -> printer .)
    FLOAT           reduce using rule 33 (function_statement -> printer .)
    STRING          reduce using rule 33 (function_statement -> printer .)
    BOOLEAN         reduce using rule 33 (function_statement -> printer .)


state 78

    (34) function_statement -> increment .

    RCURLY_BRACKET  reduce using rule 34 (function_statement -> increment .)
    ID              reduce using rule 34 (function_statement -> increment .)
    IF              reduce using rule 34 (function_statement -> increment .)
    PRINT           reduce using rule 34 (function_statement -> increment .)
    FOR             reduce using rule 34 (function_statement -> increment .)
    RETURN          reduce using rule 34 (function_statement -> increment .)
    WHILE           reduce using rule 34 (function_statement -> increment .)
    FIGURE          reduce using rule 34 (function_statement -> increment .)
    INT             reduce using rule 34 (function_statement -> increment .)
    FLOAT           reduce using rule 34 (function_statement -> increment .)
    STRING          reduce using rule 34 (function_statement -> increment .)
    BOOLEAN         reduce using rule 34 (function_statement -> increment .)


state 79

    (35) function_statement -> for .

    RCURLY_BRACKET  reduce using rule 35 (function_statement -> for .)
    ID              reduce using rule 35 (function_statement -> for .)
    IF              reduce using rule 35 (function_statement -> for .)
    PRINT           reduce using rule 35 (function_statement -> for .)
    FOR             reduce using rule 35 (function_statement -> for .)
    RETURN          reduce using rule 35 (function_statement -> for .)
    WHILE           reduce using rule 35 (function_statement -> for .)
    FIGURE          reduce using rule 35 (function_statement -> for .)
    INT             reduce using rule 35 (function_statement -> for .)
    FLOAT           reduce using rule 35 (function_statement -> for .)
    STRING          reduce using rule 35 (function_statement -> for .)
    BOOLEAN         reduce using rule 35 (function_statement -> for .)


state 80

    (36) function_statement -> return .

    RCURLY_BRACKET  reduce using rule 36 (function_statement -> return .)
    ID              reduce using rule 36 (function_statement -> return .)
    IF              reduce using rule 36 (function_statement -> return .)
    PRINT           reduce using rule 36 (function_statement -> return .)
    FOR             reduce using rule 36 (function_statement -> return .)
    RETURN          reduce using rule 36 (function_statement -> return .)
    WHILE           reduce using rule 36 (function_statement -> return .)
    FIGURE          reduce using rule 36 (function_statement -> return .)
    INT             reduce using rule 36 (function_statement -> return .)
    FLOAT           reduce using rule 36 (function_statement -> return .)
    STRING          reduce using rule 36 (function_statement -> return .)
    BOOLEAN         reduce using rule 36 (function_statement -> return .)


state 81

    (37) function_statement -> function_call .

    RCURLY_BRACKET  reduce using rule 37 (function_statement -> function_call .)
    ID              reduce using rule 37 (function_statement -> function_call .)
    IF              reduce using rule 37 (function_statement -> function_call .)
    PRINT           reduce using rule 37 (function_statement -> function_call .)
    FOR             reduce using rule 37 (function_statement -> function_call .)
    RETURN          reduce using rule 37 (function_statement -> function_call .)
    WHILE           reduce using rule 37 (function_statement -> function_call .)
    FIGURE          reduce using rule 37 (function_statement -> function_call .)
    INT             reduce using rule 37 (function_statement -> function_call .)
    FLOAT           reduce using rule 37 (function_statement -> function_call .)
    STRING          reduce using rule 37 (function_statement -> function_call .)
    BOOLEAN         reduce using rule 37 (function_statement -> function_call .)


state 82

    (38) function_statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 38 (function_statement -> fun_esp .)
    ID              reduce using rule 38 (function_statement -> fun_esp .)
    IF              reduce using rule 38 (function_statement -> fun_esp .)
    PRINT           reduce using rule 38 (function_statement -> fun_esp .)
    FOR             reduce using rule 38 (function_statement -> fun_esp .)
    RETURN          reduce using rule 38 (function_statement -> fun_esp .)
    WHILE           reduce using rule 38 (function_statement -> fun_esp .)
    FIGURE          reduce using rule 38 (function_statement -> fun_esp .)
    INT             reduce using rule 38 (function_statement -> fun_esp .)
    FLOAT           reduce using rule 38 (function_statement -> fun_esp .)
    STRING          reduce using rule 38 (function_statement -> fun_esp .)
    BOOLEAN         reduce using rule 38 (function_statement -> fun_esp .)


state 83

    (39) function_statement -> vars .

    RCURLY_BRACKET  reduce using rule 39 (function_statement -> vars .)
    ID              reduce using rule 39 (function_statement -> vars .)
    IF              reduce using rule 39 (function_statement -> vars .)
    PRINT           reduce using rule 39 (function_statement -> vars .)
    FOR             reduce using rule 39 (function_statement -> vars .)
    RETURN          reduce using rule 39 (function_statement -> vars .)
    WHILE           reduce using rule 39 (function_statement -> vars .)
    FIGURE          reduce using rule 39 (function_statement -> vars .)
    INT             reduce using rule 39 (function_statement -> vars .)
    FLOAT           reduce using rule 39 (function_statement -> vars .)
    STRING          reduce using rule 39 (function_statement -> vars .)
    BOOLEAN         reduce using rule 39 (function_statement -> vars .)


state 84

    (40) function_statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 40 (function_statement -> while_loop .)
    ID              reduce using rule 40 (function_statement -> while_loop .)
    IF              reduce using rule 40 (function_statement -> while_loop .)
    PRINT           reduce using rule 40 (function_statement -> while_loop .)
    FOR             reduce using rule 40 (function_statement -> while_loop .)
    RETURN          reduce using rule 40 (function_statement -> while_loop .)
    WHILE           reduce using rule 40 (function_statement -> while_loop .)
    FIGURE          reduce using rule 40 (function_statement -> while_loop .)
    INT             reduce using rule 40 (function_statement -> while_loop .)
    FLOAT           reduce using rule 40 (function_statement -> while_loop .)
    STRING          reduce using rule 40 (function_statement -> while_loop .)
    BOOLEAN         reduce using rule 40 (function_statement -> while_loop .)


state 85

    (53) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (54) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (67) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (80) function_call -> ID . create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (111) push_varID_to_Stack -> . epsilon
    (85) create_era -> . epsilon
    (141) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 98
    OP_EQUALS       reduce using rule 141 (epsilon -> .)
    OP_PLUS_EQUALS  reduce using rule 141 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_LPAREN       reduce using rule 141 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 97
    create_era                     shift and go to state 99
    epsilon                        shift and go to state 100

state 86

    (56) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (57) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_LPAREN       shift and go to state 101


state 87

    (63) printer -> PRINT . OP_LPAREN impression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 102


state 88

    (73) for -> FOR . OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    OP_LPAREN       shift and go to state 103


state 89

    (78) return -> RETURN . mega_expression return_quadruple SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 104
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 90

    (120) fun_esp -> figure_creation .

    RCURLY_BRACKET  reduce using rule 120 (fun_esp -> figure_creation .)
    ID              reduce using rule 120 (fun_esp -> figure_creation .)
    IF              reduce using rule 120 (fun_esp -> figure_creation .)
    PRINT           reduce using rule 120 (fun_esp -> figure_creation .)
    FOR             reduce using rule 120 (fun_esp -> figure_creation .)
    RETURN          reduce using rule 120 (fun_esp -> figure_creation .)
    WHILE           reduce using rule 120 (fun_esp -> figure_creation .)
    FIGURE          reduce using rule 120 (fun_esp -> figure_creation .)
    INT             reduce using rule 120 (fun_esp -> figure_creation .)
    FLOAT           reduce using rule 120 (fun_esp -> figure_creation .)
    STRING          reduce using rule 120 (fun_esp -> figure_creation .)
    BOOLEAN         reduce using rule 120 (fun_esp -> figure_creation .)


state 91

    (74) while_loop -> WHILE . loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (75) loop_jumpCount -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)

    loop_jumpCount                 shift and go to state 116
    epsilon                        shift and go to state 117

state 92

    (121) figure_creation -> FIGURE . ID OP_TWO_POINTS figure POSSESS bloque_figura

    ID              shift and go to state 118


state 93

    (24) function_parameters -> type save_type ID pushTo_varsTable . function_parameters_prime
    (26) function_parameters_prime -> . COMA type save_type ID pushTo_varsTable function_parameters_prime
    (27) function_parameters_prime -> . epsilon
    (141) epsilon -> .

    COMA            shift and go to state 120
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    function_parameters_prime      shift and go to state 119
    epsilon                        shift and go to state 121

state 94

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature . function_bloque add_NumVars function
    (28) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 59

    function_bloque                shift and go to state 122

state 95

    (14) pushTo_functionSignature -> epsilon .

    LCURLY_BRACKET  reduce using rule 14 (pushTo_functionSignature -> epsilon .)


state 96

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature . function_bloque add_NumVars function
    (28) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 59

    function_bloque                shift and go to state 123

state 97

    (53) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (67) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_EQUALS       shift and go to state 124
    OP_PLUS_EQUALS  shift and go to state 125
    OP_MINUS_EQUALS shift and go to state 126
    OP_PLUS         shift and go to state 127
    OP_MINUS        shift and go to state 128


state 98

    (54) assigment -> ID OP_LSQUARE_PAREN . VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    VAR_INT         shift and go to state 129


state 99

    (80) function_call -> ID create_era . OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON

    OP_LPAREN       shift and go to state 130


state 100

    (111) push_varID_to_Stack -> epsilon .
    (85) create_era -> epsilon .

    OP_EQUALS       reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_LPAREN       reduce using rule 85 (create_era -> epsilon .)


state 101

    (56) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (57) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 131
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 102

    (63) printer -> PRINT OP_LPAREN . impression OP_RPAREN SEMICOLON
    (64) impression -> . mega_expression printer_quadruple
    (65) impression -> . mega_expression printer_quadruple COMA impression
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    impression                     shift and go to state 132
    mega_expression                shift and go to state 133
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 103

    (73) for -> FOR OP_LPAREN . assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (53) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (54) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    ID              shift and go to state 135

    assigment                      shift and go to state 134

state 104

    (78) return -> RETURN mega_expression . return_quadruple SEMICOLON
    (79) return_quadruple -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    return_quadruple               shift and go to state 136
    epsilon                        shift and go to state 137

state 105

    (88) mega_expression -> super_expression . check_symbol_megaexp
    (89) mega_expression -> super_expression . AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> super_expression . OR push_symbol super_expression check_symbol_megaexp
    (91) check_symbol_megaexp -> . epsilon
    (141) epsilon -> .

    AND             shift and go to state 139
    OR              shift and go to state 140
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 138
    epsilon                        shift and go to state 141

state 106

    (92) super_expression -> expression . check_symbol_superexp
    (93) super_expression -> expression . OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> expression . OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> expression . OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> expression . OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> expression . OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> expression . OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    OP_GREATER_THAN shift and go to state 143
    OP_LESS_THAN    shift and go to state 144
    OP_GREATER_EQUALS_THAN shift and go to state 145
    OP_LESS_EQUALS_THAN shift and go to state 146
    OP_EQUALS_TWO   shift and go to state 147
    OP_NOT_EQUALS   shift and go to state 148
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 142
    epsilon                        shift and go to state 149

state 107

    (100) expression -> term . check_symbol_exp
    (101) expression -> term . check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> term . check_symbol_exp OP_MINUS push_symbol expression
    (104) check_symbol_exp -> . epsilon
    (141) epsilon -> .

    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_exp               shift and go to state 150
    epsilon                        shift and go to state 151

state 108

    (105) term -> fact . check_symbol_term
    (106) term -> fact . check_symbol_term OP_DIVISION push_symbol term
    (107) term -> fact . check_symbol_term OP_TIMES push_symbol term
    (108) check_symbol_term -> . epsilon
    (141) epsilon -> .

    OP_DIVISION     reduce using rule 141 (epsilon -> .)
    OP_TIMES        reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_term              shift and go to state 152
    epsilon                        shift and go to state 153

state 109

    (109) fact -> var_cte .

    OP_DIVISION     reduce using rule 109 (fact -> var_cte .)
    OP_TIMES        reduce using rule 109 (fact -> var_cte .)
    OP_PLUS         reduce using rule 109 (fact -> var_cte .)
    OP_MINUS        reduce using rule 109 (fact -> var_cte .)
    OP_GREATER_THAN reduce using rule 109 (fact -> var_cte .)
    OP_LESS_THAN    reduce using rule 109 (fact -> var_cte .)
    OP_GREATER_EQUALS_THAN reduce using rule 109 (fact -> var_cte .)
    OP_LESS_EQUALS_THAN reduce using rule 109 (fact -> var_cte .)
    OP_EQUALS_TWO   reduce using rule 109 (fact -> var_cte .)
    OP_NOT_EQUALS   reduce using rule 109 (fact -> var_cte .)
    AND             reduce using rule 109 (fact -> var_cte .)
    OR              reduce using rule 109 (fact -> var_cte .)
    SEMICOLON       reduce using rule 109 (fact -> var_cte .)
    OP_RPAREN       reduce using rule 109 (fact -> var_cte .)
    COMA            reduce using rule 109 (fact -> var_cte .)


state 110

    (110) fact -> OP_LPAREN . push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (112) push_bottle_bottom -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_bottle_bottom             shift and go to state 154
    epsilon                        shift and go to state 155

state 111

    (114) var_cte -> ID . push_varID_to_Stack
    (111) push_varID_to_Stack -> . epsilon
    (141) epsilon -> .

    OP_DIVISION     reduce using rule 141 (epsilon -> .)
    OP_TIMES        reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 156
    epsilon                        shift and go to state 157

state 112

    (115) var_cte -> VAR_INT . push_cte_toTable
    (119) push_cte_toTable -> . epsilon
    (141) epsilon -> .

    OP_DIVISION     reduce using rule 141 (epsilon -> .)
    OP_TIMES        reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    push_cte_toTable               shift and go to state 158
    epsilon                        shift and go to state 159

state 113

    (116) var_cte -> VAR_FLOAT . push_cte_toTable
    (119) push_cte_toTable -> . epsilon
    (141) epsilon -> .

    OP_DIVISION     reduce using rule 141 (epsilon -> .)
    OP_TIMES        reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    push_cte_toTable               shift and go to state 160
    epsilon                        shift and go to state 159

state 114

    (117) var_cte -> VAR_STRING . push_cte_toTable
    (119) push_cte_toTable -> . epsilon
    (141) epsilon -> .

    OP_DIVISION     reduce using rule 141 (epsilon -> .)
    OP_TIMES        reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    push_cte_toTable               shift and go to state 161
    epsilon                        shift and go to state 159

state 115

    (118) var_cte -> VAR_BOOLEAN .

    OP_DIVISION     reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_TIMES        reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_PLUS         reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_MINUS        reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_GREATER_THAN reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_LESS_THAN    reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_GREATER_EQUALS_THAN reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_LESS_EQUALS_THAN reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_EQUALS_TWO   reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_NOT_EQUALS   reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    AND             reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OR              reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    SEMICOLON       reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    OP_RPAREN       reduce using rule 118 (var_cte -> VAR_BOOLEAN .)
    COMA            reduce using rule 118 (var_cte -> VAR_BOOLEAN .)


state 116

    (74) while_loop -> WHILE loop_jumpCount . OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill

    OP_LPAREN       shift and go to state 162


state 117

    (75) loop_jumpCount -> epsilon .

    OP_LPAREN       reduce using rule 75 (loop_jumpCount -> epsilon .)
    ID              reduce using rule 75 (loop_jumpCount -> epsilon .)
    VAR_INT         reduce using rule 75 (loop_jumpCount -> epsilon .)
    VAR_FLOAT       reduce using rule 75 (loop_jumpCount -> epsilon .)
    VAR_STRING      reduce using rule 75 (loop_jumpCount -> epsilon .)
    VAR_BOOLEAN     reduce using rule 75 (loop_jumpCount -> epsilon .)


state 118

    (121) figure_creation -> FIGURE ID . OP_TWO_POINTS figure POSSESS bloque_figura

    OP_TWO_POINTS   shift and go to state 163


state 119

    (24) function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime .

    OP_RPAREN       reduce using rule 24 (function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime .)


state 120

    (26) function_parameters_prime -> COMA . type save_type ID pushTo_varsTable function_parameters_prime
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . STRING
    (23) type -> . BOOLEAN

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 164

state 121

    (27) function_parameters_prime -> epsilon .

    OP_RPAREN       reduce using rule 27 (function_parameters_prime -> epsilon .)


state 122

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque . add_NumVars function
    (15) add_NumVars -> . epsilon
    (141) epsilon -> .

    FUNCTION        reduce using rule 141 (epsilon -> .)
    MAIN            reduce using rule 141 (epsilon -> .)

    add_NumVars                    shift and go to state 165
    epsilon                        shift and go to state 166

state 123

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque . add_NumVars function
    (15) add_NumVars -> . epsilon
    (141) epsilon -> .

    FUNCTION        reduce using rule 141 (epsilon -> .)
    MAIN            reduce using rule 141 (epsilon -> .)

    add_NumVars                    shift and go to state 167
    epsilon                        shift and go to state 166

state 124

    (53) assigment -> ID push_varID_to_Stack OP_EQUALS . push_symbol mega_expression equals_quadruple SEMICOLON
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 168
    epsilon                        shift and go to state 169

state 125

    (67) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 170
    epsilon                        shift and go to state 169

state 126

    (68) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 171
    epsilon                        shift and go to state 169

state 127

    (69) increment -> ID push_varID_to_Stack OP_PLUS . OP_PLUS incrementByOne SEMICOLON

    OP_PLUS         shift and go to state 172


state 128

    (70) increment -> ID push_varID_to_Stack OP_MINUS . OP_MINUS incrementByOne SEMICOLON

    OP_MINUS        shift and go to state 173


state 129

    (54) assigment -> ID OP_LSQUARE_PAREN VAR_INT . OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    OP_RSQUARE_PAREN shift and go to state 174


state 130

    (80) function_call -> ID create_era OP_LPAREN . function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (81) function_call_parameters -> . mega_expression create_param function_call_parameters_prime
    (82) function_call_parameters -> . epsilon
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (141) epsilon -> .
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    function_call_parameters       shift and go to state 175
    mega_expression                shift and go to state 176
    epsilon                        shift and go to state 177
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 131

    (56) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (57) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_RPAREN       shift and go to state 178


state 132

    (63) printer -> PRINT OP_LPAREN impression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 179


state 133

    (64) impression -> mega_expression . printer_quadruple
    (65) impression -> mega_expression . printer_quadruple COMA impression
    (66) printer_quadruple -> . epsilon
    (141) epsilon -> .

    COMA            reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    printer_quadruple              shift and go to state 180
    epsilon                        shift and go to state 181

state 134

    (73) for -> FOR OP_LPAREN assigment . loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (75) loop_jumpCount -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    loop_jumpCount                 shift and go to state 182
    epsilon                        shift and go to state 117

state 135

    (53) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (54) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (111) push_varID_to_Stack -> . epsilon
    (141) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 98
    OP_EQUALS       reduce using rule 141 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 183
    epsilon                        shift and go to state 157

state 136

    (78) return -> RETURN mega_expression return_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 184


state 137

    (79) return_quadruple -> epsilon .

    SEMICOLON       reduce using rule 79 (return_quadruple -> epsilon .)


state 138

    (88) mega_expression -> super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 88 (mega_expression -> super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 88 (mega_expression -> super_expression check_symbol_megaexp .)
    COMA            reduce using rule 88 (mega_expression -> super_expression check_symbol_megaexp .)


state 139

    (89) mega_expression -> super_expression AND . push_symbol super_expression check_symbol_megaexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 185
    epsilon                        shift and go to state 169

state 140

    (90) mega_expression -> super_expression OR . push_symbol super_expression check_symbol_megaexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 186
    epsilon                        shift and go to state 169

state 141

    (91) check_symbol_megaexp -> epsilon .

    SEMICOLON       reduce using rule 91 (check_symbol_megaexp -> epsilon .)
    OP_RPAREN       reduce using rule 91 (check_symbol_megaexp -> epsilon .)
    COMA            reduce using rule 91 (check_symbol_megaexp -> epsilon .)


state 142

    (92) super_expression -> expression check_symbol_superexp .

    AND             reduce using rule 92 (super_expression -> expression check_symbol_superexp .)
    OR              reduce using rule 92 (super_expression -> expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 92 (super_expression -> expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 92 (super_expression -> expression check_symbol_superexp .)
    COMA            reduce using rule 92 (super_expression -> expression check_symbol_superexp .)


state 143

    (93) super_expression -> expression OP_GREATER_THAN . push_symbol expression check_symbol_superexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 187
    epsilon                        shift and go to state 169

state 144

    (94) super_expression -> expression OP_LESS_THAN . push_symbol expression check_symbol_superexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 188
    epsilon                        shift and go to state 169

state 145

    (95) super_expression -> expression OP_GREATER_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 189
    epsilon                        shift and go to state 169

state 146

    (96) super_expression -> expression OP_LESS_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 190
    epsilon                        shift and go to state 169

state 147

    (97) super_expression -> expression OP_EQUALS_TWO . push_symbol expression check_symbol_superexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 191
    epsilon                        shift and go to state 169

state 148

    (98) super_expression -> expression OP_NOT_EQUALS . push_symbol expression check_symbol_superexp
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 192
    epsilon                        shift and go to state 169

state 149

    (99) check_symbol_superexp -> epsilon .

    AND             reduce using rule 99 (check_symbol_superexp -> epsilon .)
    OR              reduce using rule 99 (check_symbol_superexp -> epsilon .)
    SEMICOLON       reduce using rule 99 (check_symbol_superexp -> epsilon .)
    OP_RPAREN       reduce using rule 99 (check_symbol_superexp -> epsilon .)
    COMA            reduce using rule 99 (check_symbol_superexp -> epsilon .)


state 150

    (100) expression -> term check_symbol_exp .
    (101) expression -> term check_symbol_exp . OP_PLUS push_symbol expression
    (102) expression -> term check_symbol_exp . OP_MINUS push_symbol expression

    OP_GREATER_THAN reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_LESS_THAN    reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_GREATER_EQUALS_THAN reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_LESS_EQUALS_THAN reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_EQUALS_TWO   reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_NOT_EQUALS   reduce using rule 100 (expression -> term check_symbol_exp .)
    AND             reduce using rule 100 (expression -> term check_symbol_exp .)
    OR              reduce using rule 100 (expression -> term check_symbol_exp .)
    SEMICOLON       reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_RPAREN       reduce using rule 100 (expression -> term check_symbol_exp .)
    COMA            reduce using rule 100 (expression -> term check_symbol_exp .)
    OP_PLUS         shift and go to state 193
    OP_MINUS        shift and go to state 194


state 151

    (104) check_symbol_exp -> epsilon .

    OP_PLUS         reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_MINUS        reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_GREATER_THAN reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_LESS_THAN    reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 104 (check_symbol_exp -> epsilon .)
    AND             reduce using rule 104 (check_symbol_exp -> epsilon .)
    OR              reduce using rule 104 (check_symbol_exp -> epsilon .)
    SEMICOLON       reduce using rule 104 (check_symbol_exp -> epsilon .)
    OP_RPAREN       reduce using rule 104 (check_symbol_exp -> epsilon .)
    COMA            reduce using rule 104 (check_symbol_exp -> epsilon .)


state 152

    (105) term -> fact check_symbol_term .
    (106) term -> fact check_symbol_term . OP_DIVISION push_symbol term
    (107) term -> fact check_symbol_term . OP_TIMES push_symbol term

    OP_PLUS         reduce using rule 105 (term -> fact check_symbol_term .)
    OP_MINUS        reduce using rule 105 (term -> fact check_symbol_term .)
    OP_GREATER_THAN reduce using rule 105 (term -> fact check_symbol_term .)
    OP_LESS_THAN    reduce using rule 105 (term -> fact check_symbol_term .)
    OP_GREATER_EQUALS_THAN reduce using rule 105 (term -> fact check_symbol_term .)
    OP_LESS_EQUALS_THAN reduce using rule 105 (term -> fact check_symbol_term .)
    OP_EQUALS_TWO   reduce using rule 105 (term -> fact check_symbol_term .)
    OP_NOT_EQUALS   reduce using rule 105 (term -> fact check_symbol_term .)
    AND             reduce using rule 105 (term -> fact check_symbol_term .)
    OR              reduce using rule 105 (term -> fact check_symbol_term .)
    SEMICOLON       reduce using rule 105 (term -> fact check_symbol_term .)
    OP_RPAREN       reduce using rule 105 (term -> fact check_symbol_term .)
    COMA            reduce using rule 105 (term -> fact check_symbol_term .)
    OP_DIVISION     shift and go to state 195
    OP_TIMES        shift and go to state 196


state 153

    (108) check_symbol_term -> epsilon .

    OP_DIVISION     reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_TIMES        reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_PLUS         reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_MINUS        reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_GREATER_THAN reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_LESS_THAN    reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 108 (check_symbol_term -> epsilon .)
    AND             reduce using rule 108 (check_symbol_term -> epsilon .)
    OR              reduce using rule 108 (check_symbol_term -> epsilon .)
    SEMICOLON       reduce using rule 108 (check_symbol_term -> epsilon .)
    OP_RPAREN       reduce using rule 108 (check_symbol_term -> epsilon .)
    COMA            reduce using rule 108 (check_symbol_term -> epsilon .)


state 154

    (110) fact -> OP_LPAREN push_bottle_bottom . mega_expression OP_RPAREN remove_bottle_bottom
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 197
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 155

    (112) push_bottle_bottom -> epsilon .

    OP_LPAREN       reduce using rule 112 (push_bottle_bottom -> epsilon .)
    ID              reduce using rule 112 (push_bottle_bottom -> epsilon .)
    VAR_INT         reduce using rule 112 (push_bottle_bottom -> epsilon .)
    VAR_FLOAT       reduce using rule 112 (push_bottle_bottom -> epsilon .)
    VAR_STRING      reduce using rule 112 (push_bottle_bottom -> epsilon .)
    VAR_BOOLEAN     reduce using rule 112 (push_bottle_bottom -> epsilon .)


state 156

    (114) var_cte -> ID push_varID_to_Stack .

    OP_DIVISION     reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_TIMES        reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_PLUS         reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_MINUS        reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_THAN reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_THAN    reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_EQUALS_THAN reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_EQUALS_THAN reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_EQUALS_TWO   reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_NOT_EQUALS   reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    AND             reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OR              reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    SEMICOLON       reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    OP_RPAREN       reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)
    COMA            reduce using rule 114 (var_cte -> ID push_varID_to_Stack .)


state 157

    (111) push_varID_to_Stack -> epsilon .

    OP_DIVISION     reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_TIMES        reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_THAN reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_LESS_THAN    reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    AND             reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OR              reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    SEMICOLON       reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_RPAREN       reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    COMA            reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS       reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 111 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 111 (push_varID_to_Stack -> epsilon .)


state 158

    (115) var_cte -> VAR_INT push_cte_toTable .

    OP_DIVISION     reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_TIMES        reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_PLUS         reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_MINUS        reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    AND             reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OR              reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    SEMICOLON       reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    OP_RPAREN       reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)
    COMA            reduce using rule 115 (var_cte -> VAR_INT push_cte_toTable .)


state 159

    (119) push_cte_toTable -> epsilon .

    OP_DIVISION     reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_TIMES        reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_PLUS         reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_MINUS        reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_GREATER_THAN reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_LESS_THAN    reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 119 (push_cte_toTable -> epsilon .)
    AND             reduce using rule 119 (push_cte_toTable -> epsilon .)
    OR              reduce using rule 119 (push_cte_toTable -> epsilon .)
    SEMICOLON       reduce using rule 119 (push_cte_toTable -> epsilon .)
    OP_RPAREN       reduce using rule 119 (push_cte_toTable -> epsilon .)
    COMA            reduce using rule 119 (push_cte_toTable -> epsilon .)


state 160

    (116) var_cte -> VAR_FLOAT push_cte_toTable .

    OP_DIVISION     reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_TIMES        reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_PLUS         reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_MINUS        reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    AND             reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OR              reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    SEMICOLON       reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_RPAREN       reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)
    COMA            reduce using rule 116 (var_cte -> VAR_FLOAT push_cte_toTable .)


state 161

    (117) var_cte -> VAR_STRING push_cte_toTable .

    OP_DIVISION     reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_TIMES        reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_PLUS         reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_MINUS        reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    AND             reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OR              reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    SEMICOLON       reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_RPAREN       reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)
    COMA            reduce using rule 117 (var_cte -> VAR_STRING push_cte_toTable .)


state 162

    (74) while_loop -> WHILE loop_jumpCount OP_LPAREN . mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 198
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 163

    (121) figure_creation -> FIGURE ID OP_TWO_POINTS . figure POSSESS bloque_figura
    (122) figure -> . POINT
    (123) figure -> . LINE
    (124) figure -> . SQUARE
    (125) figure -> . RECTANGLE
    (126) figure -> . TRIANGLE
    (127) figure -> . CIRCLE
    (128) figure -> . ARC

    POINT           shift and go to state 200
    LINE            shift and go to state 201
    SQUARE          shift and go to state 202
    RECTANGLE       shift and go to state 203
    TRIANGLE        shift and go to state 204
    CIRCLE          shift and go to state 205
    ARC             shift and go to state 206

    figure                         shift and go to state 199

state 164

    (26) function_parameters_prime -> COMA type . save_type ID pushTo_varsTable function_parameters_prime
    (9) save_type -> . epsilon
    (141) epsilon -> .

    ID              reduce using rule 141 (epsilon -> .)

    save_type                      shift and go to state 207
    epsilon                        shift and go to state 16

state 165

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (12) function -> . epsilon
    (141) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 141 (epsilon -> .)

    function                       shift and go to state 208
    epsilon                        shift and go to state 14

state 166

    (15) add_NumVars -> epsilon .

    FUNCTION        reduce using rule 15 (add_NumVars -> epsilon .)
    MAIN            reduce using rule 15 (add_NumVars -> epsilon .)


state 167

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (12) function -> . epsilon
    (141) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 141 (epsilon -> .)

    function                       shift and go to state 209
    epsilon                        shift and go to state 14

state 168

    (53) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol . mega_expression equals_quadruple SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 210
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 169

    (103) push_symbol -> epsilon .

    OP_LPAREN       reduce using rule 103 (push_symbol -> epsilon .)
    ID              reduce using rule 103 (push_symbol -> epsilon .)
    VAR_INT         reduce using rule 103 (push_symbol -> epsilon .)
    VAR_FLOAT       reduce using rule 103 (push_symbol -> epsilon .)
    VAR_STRING      reduce using rule 103 (push_symbol -> epsilon .)
    VAR_BOOLEAN     reduce using rule 103 (push_symbol -> epsilon .)


state 170

    (67) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 211
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 171

    (68) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 212
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 172

    (69) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS . incrementByOne SEMICOLON
    (71) incrementByOne -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    incrementByOne                 shift and go to state 213
    epsilon                        shift and go to state 214

state 173

    (70) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS . incrementByOne SEMICOLON
    (71) incrementByOne -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    incrementByOne                 shift and go to state 215
    epsilon                        shift and go to state 214

state 174

    (54) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN . OP_EQUALS mega_expression SEMICOLON

    OP_EQUALS       shift and go to state 216


state 175

    (80) function_call -> ID create_era OP_LPAREN function_call_parameters . OP_RPAREN create_gosub SEMICOLON

    OP_RPAREN       shift and go to state 217


state 176

    (81) function_call_parameters -> mega_expression . create_param function_call_parameters_prime
    (86) create_param -> . epsilon
    (141) epsilon -> .

    COMA            reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    create_param                   shift and go to state 218
    epsilon                        shift and go to state 219

state 177

    (82) function_call_parameters -> epsilon .

    OP_RPAREN       reduce using rule 82 (function_call_parameters -> epsilon .)


state 178

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF1
    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (58) if_gotoF_quadruple -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    if_gotoF_quadruple             shift and go to state 220
    epsilon                        shift and go to state 221

state 179

    (63) printer -> PRINT OP_LPAREN impression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 222


state 180

    (64) impression -> mega_expression printer_quadruple .
    (65) impression -> mega_expression printer_quadruple . COMA impression

    OP_RPAREN       reduce using rule 64 (impression -> mega_expression printer_quadruple .)
    COMA            shift and go to state 223


state 181

    (66) printer_quadruple -> epsilon .

    COMA            reduce using rule 66 (printer_quadruple -> epsilon .)
    OP_RPAREN       reduce using rule 66 (printer_quadruple -> epsilon .)


state 182

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount . mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 224
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 183

    (53) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    OP_EQUALS       shift and go to state 124


state 184

    (78) return -> RETURN mega_expression return_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    ID              reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    IF              reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    PRINT           reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FOR             reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    RETURN          reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    WHILE           reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FIGURE          reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    INT             reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FLOAT           reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    STRING          reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 78 (return -> RETURN mega_expression return_quadruple SEMICOLON .)


state 185

    (89) mega_expression -> super_expression AND push_symbol . super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    super_expression               shift and go to state 225
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 186

    (90) mega_expression -> super_expression OR push_symbol . super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    super_expression               shift and go to state 226
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 187

    (93) super_expression -> expression OP_GREATER_THAN push_symbol . expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    expression                     shift and go to state 227
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 188

    (94) super_expression -> expression OP_LESS_THAN push_symbol . expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    expression                     shift and go to state 228
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 189

    (95) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    expression                     shift and go to state 229
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 190

    (96) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    expression                     shift and go to state 230
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 191

    (97) super_expression -> expression OP_EQUALS_TWO push_symbol . expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    expression                     shift and go to state 231
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 192

    (98) super_expression -> expression OP_NOT_EQUALS push_symbol . expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    expression                     shift and go to state 232
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 193

    (101) expression -> term check_symbol_exp OP_PLUS . push_symbol expression
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 233
    epsilon                        shift and go to state 169

state 194

    (102) expression -> term check_symbol_exp OP_MINUS . push_symbol expression
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 234
    epsilon                        shift and go to state 169

state 195

    (106) term -> fact check_symbol_term OP_DIVISION . push_symbol term
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 235
    epsilon                        shift and go to state 169

state 196

    (107) term -> fact check_symbol_term OP_TIMES . push_symbol term
    (103) push_symbol -> . epsilon
    (141) epsilon -> .

    OP_LPAREN       reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    VAR_INT         reduce using rule 141 (epsilon -> .)
    VAR_FLOAT       reduce using rule 141 (epsilon -> .)
    VAR_STRING      reduce using rule 141 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 141 (epsilon -> .)

    push_symbol                    shift and go to state 236
    epsilon                        shift and go to state 169

state 197

    (110) fact -> OP_LPAREN push_bottle_bottom mega_expression . OP_RPAREN remove_bottle_bottom

    OP_RPAREN       shift and go to state 237


state 198

    (74) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression . OP_RPAREN loop_gotoF bloque loop_fill

    OP_RPAREN       shift and go to state 238


state 199

    (121) figure_creation -> FIGURE ID OP_TWO_POINTS figure . POSSESS bloque_figura

    POSSESS         shift and go to state 239


state 200

    (122) figure -> POINT .

    POSSESS         reduce using rule 122 (figure -> POINT .)


state 201

    (123) figure -> LINE .

    POSSESS         reduce using rule 123 (figure -> LINE .)


state 202

    (124) figure -> SQUARE .

    POSSESS         reduce using rule 124 (figure -> SQUARE .)


state 203

    (125) figure -> RECTANGLE .

    POSSESS         reduce using rule 125 (figure -> RECTANGLE .)


state 204

    (126) figure -> TRIANGLE .

    POSSESS         reduce using rule 126 (figure -> TRIANGLE .)


state 205

    (127) figure -> CIRCLE .

    POSSESS         reduce using rule 127 (figure -> CIRCLE .)


state 206

    (128) figure -> ARC .

    POSSESS         reduce using rule 128 (figure -> ARC .)


state 207

    (26) function_parameters_prime -> COMA type save_type . ID pushTo_varsTable function_parameters_prime

    ID              shift and go to state 240


state 208

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .

    MAIN            reduce using rule 10 (function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .)


state 209

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .

    MAIN            reduce using rule 11 (function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .)


state 210

    (53) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression . equals_quadruple SEMICOLON
    (55) equals_quadruple -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    equals_quadruple               shift and go to state 241
    epsilon                        shift and go to state 242

state 211

    (67) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (72) increment_equals -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    increment_equals               shift and go to state 243
    epsilon                        shift and go to state 244

state 212

    (68) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (72) increment_equals -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    increment_equals               shift and go to state 245
    epsilon                        shift and go to state 244

state 213

    (69) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 246


state 214

    (71) incrementByOne -> epsilon .

    SEMICOLON       reduce using rule 71 (incrementByOne -> epsilon .)


state 215

    (70) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 247


state 216

    (54) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS . mega_expression SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 248
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 217

    (80) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN . create_gosub SEMICOLON
    (87) create_gosub -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)

    create_gosub                   shift and go to state 249
    epsilon                        shift and go to state 250

state 218

    (81) function_call_parameters -> mega_expression create_param . function_call_parameters_prime
    (83) function_call_parameters_prime -> . COMA mega_expression create_param function_call_parameters_prime
    (84) function_call_parameters_prime -> . epsilon
    (141) epsilon -> .

    COMA            shift and go to state 252
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    function_call_parameters_prime shift and go to state 251
    epsilon                        shift and go to state 253

state 219

    (86) create_param -> epsilon .

    COMA            reduce using rule 86 (create_param -> epsilon .)
    OP_RPAREN       reduce using rule 86 (create_param -> epsilon .)


state 220

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF1
    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (41) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 255

    bloque                         shift and go to state 254

state 221

    (58) if_gotoF_quadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 58 (if_gotoF_quadruple -> epsilon .)


state 222

    (63) printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ID              reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    IF              reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    WHILE           reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    INT             reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 63 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)


state 223

    (65) impression -> mega_expression printer_quadruple COMA . impression
    (64) impression -> . mega_expression printer_quadruple
    (65) impression -> . mega_expression printer_quadruple COMA impression
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 133
    impression                     shift and go to state 256
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 224

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression . SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    SEMICOLON       shift and go to state 257


state 225

    (89) mega_expression -> super_expression AND push_symbol super_expression . check_symbol_megaexp
    (91) check_symbol_megaexp -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 258
    epsilon                        shift and go to state 141

state 226

    (90) mega_expression -> super_expression OR push_symbol super_expression . check_symbol_megaexp
    (91) check_symbol_megaexp -> . epsilon
    (141) epsilon -> .

    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 259
    epsilon                        shift and go to state 141

state 227

    (93) super_expression -> expression OP_GREATER_THAN push_symbol expression . check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 260
    epsilon                        shift and go to state 149

state 228

    (94) super_expression -> expression OP_LESS_THAN push_symbol expression . check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 261
    epsilon                        shift and go to state 149

state 229

    (95) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 262
    epsilon                        shift and go to state 149

state 230

    (96) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 263
    epsilon                        shift and go to state 149

state 231

    (97) super_expression -> expression OP_EQUALS_TWO push_symbol expression . check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 264
    epsilon                        shift and go to state 149

state 232

    (98) super_expression -> expression OP_NOT_EQUALS push_symbol expression . check_symbol_superexp
    (99) check_symbol_superexp -> . epsilon
    (141) epsilon -> .

    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    check_symbol_superexp          shift and go to state 265
    epsilon                        shift and go to state 149

state 233

    (101) expression -> term check_symbol_exp OP_PLUS push_symbol . expression
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    term                           shift and go to state 107
    expression                     shift and go to state 266
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 234

    (102) expression -> term check_symbol_exp OP_MINUS push_symbol . expression
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    term                           shift and go to state 107
    expression                     shift and go to state 267
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 235

    (106) term -> fact check_symbol_term OP_DIVISION push_symbol . term
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    fact                           shift and go to state 108
    term                           shift and go to state 268
    var_cte                        shift and go to state 109

state 236

    (107) term -> fact check_symbol_term OP_TIMES push_symbol . term
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    fact                           shift and go to state 108
    term                           shift and go to state 269
    var_cte                        shift and go to state 109

state 237

    (110) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN . remove_bottle_bottom
    (113) remove_bottle_bottom -> . epsilon
    (141) epsilon -> .

    OP_DIVISION     reduce using rule 141 (epsilon -> .)
    OP_TIMES        reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 141 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 141 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 141 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 141 (epsilon -> .)
    AND             reduce using rule 141 (epsilon -> .)
    OR              reduce using rule 141 (epsilon -> .)
    SEMICOLON       reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)
    COMA            reduce using rule 141 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 270
    epsilon                        shift and go to state 271

state 238

    (74) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN . loop_gotoF bloque loop_fill
    (76) loop_gotoF -> . epsilon
    (141) epsilon -> .

    LCURLY_BRACKET  reduce using rule 141 (epsilon -> .)

    loop_gotoF                     shift and go to state 272
    epsilon                        shift and go to state 273

state 239

    (121) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS . bloque_figura
    (129) bloque_figura -> . LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 275

    bloque_figura                  shift and go to state 274

state 240

    (26) function_parameters_prime -> COMA type save_type ID . pushTo_varsTable function_parameters_prime
    (8) pushTo_varsTable -> . epsilon
    (141) epsilon -> .

    COMA            reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    pushTo_varsTable               shift and go to state 276
    epsilon                        shift and go to state 29

state 241

    (53) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 277


state 242

    (55) equals_quadruple -> epsilon .

    SEMICOLON       reduce using rule 55 (equals_quadruple -> epsilon .)


state 243

    (67) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 278


state 244

    (72) increment_equals -> epsilon .

    SEMICOLON       reduce using rule 72 (increment_equals -> epsilon .)


state 245

    (68) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 279


state 246

    (69) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    ID              reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    IF              reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FIGURE          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    INT             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)


state 247

    (70) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    ID              reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    IF              reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FIGURE          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    INT             reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)


state 248

    (54) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 280


state 249

    (80) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub . SEMICOLON

    SEMICOLON       shift and go to state 281


state 250

    (87) create_gosub -> epsilon .

    SEMICOLON       reduce using rule 87 (create_gosub -> epsilon .)


state 251

    (81) function_call_parameters -> mega_expression create_param function_call_parameters_prime .

    OP_RPAREN       reduce using rule 81 (function_call_parameters -> mega_expression create_param function_call_parameters_prime .)


state 252

    (83) function_call_parameters_prime -> COMA . mega_expression create_param function_call_parameters_prime
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 282
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 253

    (84) function_call_parameters_prime -> epsilon .

    OP_RPAREN       reduce using rule 84 (function_call_parameters_prime -> epsilon .)


state 254

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF1
    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (59) fill_if_gotoF1 -> . epsilon
    (60) fill_if_gotoF2 -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)
    INT             reduce using rule 141 (epsilon -> .)
    FLOAT           reduce using rule 141 (epsilon -> .)
    STRING          reduce using rule 141 (epsilon -> .)
    BOOLEAN         reduce using rule 141 (epsilon -> .)
    ELSE            reduce using rule 141 (epsilon -> .)

    fill_if_gotoF1                 shift and go to state 283
    fill_if_gotoF2                 shift and go to state 284
    epsilon                        shift and go to state 285

state 255

    (41) bloque -> LCURLY_BRACKET . bloque_primo RCURLY_BRACKET
    (42) bloque_primo -> . bloque_primo statement
    (43) bloque_primo -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)

    bloque_primo                   shift and go to state 286
    epsilon                        shift and go to state 287

state 256

    (65) impression -> mega_expression printer_quadruple COMA impression .

    OP_RPAREN       reduce using rule 65 (impression -> mega_expression printer_quadruple COMA impression .)


state 257

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON . loop_gotoF increment OP_RPAREN bloque loop_fill
    (76) loop_gotoF -> . epsilon
    (141) epsilon -> .

    ID              reduce using rule 141 (epsilon -> .)

    loop_gotoF                     shift and go to state 288
    epsilon                        shift and go to state 273

state 258

    (89) mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 89 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 89 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 89 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)


state 259

    (90) mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 90 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 90 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 90 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)


state 260

    (93) super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 93 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 93 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 93 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 93 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 93 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)


state 261

    (94) super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 94 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 94 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 94 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 94 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 94 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)


state 262

    (95) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 95 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 95 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 95 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 95 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 95 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 263

    (96) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 96 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 96 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 96 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 96 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 96 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 264

    (97) super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .

    AND             reduce using rule 97 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 97 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 97 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 97 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 97 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)


state 265

    (98) super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .

    AND             reduce using rule 98 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 98 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 98 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 98 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 98 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)


state 266

    (101) expression -> term check_symbol_exp OP_PLUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    AND             reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OR              reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    SEMICOLON       reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_RPAREN       reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    COMA            reduce using rule 101 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)


state 267

    (102) expression -> term check_symbol_exp OP_MINUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    AND             reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OR              reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    SEMICOLON       reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_RPAREN       reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    COMA            reduce using rule 102 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)


state 268

    (106) term -> fact check_symbol_term OP_DIVISION push_symbol term .

    OP_PLUS         reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_MINUS        reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_THAN reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_THAN    reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    AND             reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OR              reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    SEMICOLON       reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_RPAREN       reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    COMA            reduce using rule 106 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)


state 269

    (107) term -> fact check_symbol_term OP_TIMES push_symbol term .

    OP_PLUS         reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_MINUS        reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_THAN reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_THAN    reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    AND             reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OR              reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    SEMICOLON       reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_RPAREN       reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    COMA            reduce using rule 107 (term -> fact check_symbol_term OP_TIMES push_symbol term .)


state 270

    (110) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .

    OP_DIVISION     reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_TIMES        reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_PLUS         reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_MINUS        reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    AND             reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OR              reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    SEMICOLON       reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    COMA            reduce using rule 110 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)


state 271

    (113) remove_bottle_bottom -> epsilon .

    OP_DIVISION     reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_TIMES        reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_PLUS         reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_MINUS        reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_THAN reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_LESS_THAN    reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    AND             reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OR              reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    SEMICOLON       reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    OP_RPAREN       reduce using rule 113 (remove_bottle_bottom -> epsilon .)
    COMA            reduce using rule 113 (remove_bottle_bottom -> epsilon .)


state 272

    (74) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF . bloque loop_fill
    (41) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 255

    bloque                         shift and go to state 289

state 273

    (76) loop_gotoF -> epsilon .

    LCURLY_BRACKET  reduce using rule 76 (loop_gotoF -> epsilon .)
    ID              reduce using rule 76 (loop_gotoF -> epsilon .)


state 274

    (121) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .

    RCURLY_BRACKET  reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    ID              reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    IF              reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    PRINT           reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FOR             reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    RETURN          reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    WHILE           reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FIGURE          reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    INT             reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FLOAT           reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    STRING          reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    BOOLEAN         reduce using rule 121 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)


state 275

    (129) bloque_figura -> LCURLY_BRACKET . bloque_figura_primo RCURLY_BRACKET
    (130) bloque_figura_primo -> . bloque_figura_primo figura_attr
    (131) bloque_figura_primo -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    COLOR           reduce using rule 141 (epsilon -> .)
    SIZE            reduce using rule 141 (epsilon -> .)
    VECTOR          reduce using rule 141 (epsilon -> .)

    bloque_figura_primo            shift and go to state 290
    epsilon                        shift and go to state 291

state 276

    (26) function_parameters_prime -> COMA type save_type ID pushTo_varsTable . function_parameters_prime
    (26) function_parameters_prime -> . COMA type save_type ID pushTo_varsTable function_parameters_prime
    (27) function_parameters_prime -> . epsilon
    (141) epsilon -> .

    COMA            shift and go to state 120
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    function_parameters_prime      shift and go to state 292
    epsilon                        shift and go to state 121

state 277

    (53) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ID              reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    IF              reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    PRINT           reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FOR             reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RETURN          reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    WHILE           reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FIGURE          reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    INT             reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FLOAT           reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    STRING          reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    OP_LPAREN       reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_INT         reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_FLOAT       reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_STRING      reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 53 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)


state 278

    (67) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FIGURE          reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 67 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 279

    (68) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FIGURE          reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 68 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 280

    (54) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    ID              reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    IF              reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    PRINT           reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FOR             reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    RETURN          reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    WHILE           reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FIGURE          reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    INT             reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FLOAT           reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    STRING          reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    OP_LPAREN       reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_INT         reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_STRING      reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 54 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)


state 281

    (80) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .

    RCURLY_BRACKET  reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    ID              reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    IF              reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    PRINT           reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FOR             reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    RETURN          reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    WHILE           reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FIGURE          reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    INT             reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FLOAT           reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    STRING          reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    BOOLEAN         reduce using rule 80 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)


state 282

    (83) function_call_parameters_prime -> COMA mega_expression . create_param function_call_parameters_prime
    (86) create_param -> . epsilon
    (141) epsilon -> .

    COMA            reduce using rule 141 (epsilon -> .)
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    create_param                   shift and go to state 293
    epsilon                        shift and go to state 219

state 283

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .

    RCURLY_BRACKET  reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    ID              reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    IF              reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    PRINT           reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FOR             reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    RETURN          reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    WHILE           reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FIGURE          reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    INT             reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FLOAT           reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    STRING          reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    BOOLEAN         reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)


state 284

    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 . if_goto_quadruple ELSE bloque fill_if_goto
    (62) if_goto_quadruple -> . epsilon
    (141) epsilon -> .

    ELSE            reduce using rule 141 (epsilon -> .)

    if_goto_quadruple              shift and go to state 294
    epsilon                        shift and go to state 295

state 285

    (59) fill_if_gotoF1 -> epsilon .
    (60) fill_if_gotoF2 -> epsilon .

    RCURLY_BRACKET  reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    ID              reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    IF              reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    PRINT           reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    FOR             reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    RETURN          reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    WHILE           reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    FIGURE          reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    INT             reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    FLOAT           reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    STRING          reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    BOOLEAN         reduce using rule 59 (fill_if_gotoF1 -> epsilon .)
    ELSE            reduce using rule 60 (fill_if_gotoF2 -> epsilon .)


state 286

    (41) bloque -> LCURLY_BRACKET bloque_primo . RCURLY_BRACKET
    (42) bloque_primo -> bloque_primo . statement
    (44) statement -> . assigment
    (45) statement -> . if
    (46) statement -> . printer
    (47) statement -> . increment
    (48) statement -> . for
    (49) statement -> . return
    (50) statement -> . function_call
    (51) statement -> . fun_esp
    (52) statement -> . while_loop
    (53) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (54) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (56) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (57) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (63) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (67) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (73) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (78) return -> . RETURN mega_expression return_quadruple SEMICOLON
    (80) function_call -> . ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (120) fun_esp -> . figure_creation
    (74) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (121) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura

    RCURLY_BRACKET  shift and go to state 296
    ID              shift and go to state 85
    IF              shift and go to state 86
    PRINT           shift and go to state 87
    FOR             shift and go to state 88
    RETURN          shift and go to state 89
    WHILE           shift and go to state 91
    FIGURE          shift and go to state 92

    statement                      shift and go to state 297
    assigment                      shift and go to state 298
    if                             shift and go to state 299
    printer                        shift and go to state 300
    increment                      shift and go to state 301
    for                            shift and go to state 302
    return                         shift and go to state 303
    function_call                  shift and go to state 304
    fun_esp                        shift and go to state 305
    while_loop                     shift and go to state 306
    figure_creation                shift and go to state 90

state 287

    (43) bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 43 (bloque_primo -> epsilon .)
    ID              reduce using rule 43 (bloque_primo -> epsilon .)
    IF              reduce using rule 43 (bloque_primo -> epsilon .)
    PRINT           reduce using rule 43 (bloque_primo -> epsilon .)
    FOR             reduce using rule 43 (bloque_primo -> epsilon .)
    RETURN          reduce using rule 43 (bloque_primo -> epsilon .)
    WHILE           reduce using rule 43 (bloque_primo -> epsilon .)
    FIGURE          reduce using rule 43 (bloque_primo -> epsilon .)


state 288

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF . increment OP_RPAREN bloque loop_fill
    (67) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON

    ID              shift and go to state 308

    increment                      shift and go to state 307

state 289

    (74) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque . loop_fill
    (77) loop_fill -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)
    INT             reduce using rule 141 (epsilon -> .)
    FLOAT           reduce using rule 141 (epsilon -> .)
    STRING          reduce using rule 141 (epsilon -> .)
    BOOLEAN         reduce using rule 141 (epsilon -> .)

    loop_fill                      shift and go to state 309
    epsilon                        shift and go to state 310

state 290

    (129) bloque_figura -> LCURLY_BRACKET bloque_figura_primo . RCURLY_BRACKET
    (130) bloque_figura_primo -> bloque_figura_primo . figura_attr
    (132) figura_attr -> . vector
    (133) figura_attr -> . COLOR OP_TWO_POINTS ID SEMICOLON
    (134) figura_attr -> . SIZE OP_TWO_POINTS mega_expression SEMICOLON
    (135) vector -> . VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    RCURLY_BRACKET  shift and go to state 311
    COLOR           shift and go to state 314
    SIZE            shift and go to state 315
    VECTOR          shift and go to state 316

    figura_attr                    shift and go to state 312
    vector                         shift and go to state 313

state 291

    (131) bloque_figura_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 131 (bloque_figura_primo -> epsilon .)
    COLOR           reduce using rule 131 (bloque_figura_primo -> epsilon .)
    SIZE            reduce using rule 131 (bloque_figura_primo -> epsilon .)
    VECTOR          reduce using rule 131 (bloque_figura_primo -> epsilon .)


state 292

    (26) function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime .

    OP_RPAREN       reduce using rule 26 (function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime .)


state 293

    (83) function_call_parameters_prime -> COMA mega_expression create_param . function_call_parameters_prime
    (83) function_call_parameters_prime -> . COMA mega_expression create_param function_call_parameters_prime
    (84) function_call_parameters_prime -> . epsilon
    (141) epsilon -> .

    COMA            shift and go to state 252
    OP_RPAREN       reduce using rule 141 (epsilon -> .)

    function_call_parameters_prime shift and go to state 317
    epsilon                        shift and go to state 253

state 294

    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple . ELSE bloque fill_if_goto

    ELSE            shift and go to state 318


state 295

    (62) if_goto_quadruple -> epsilon .

    ELSE            reduce using rule 62 (if_goto_quadruple -> epsilon .)


state 296

    (41) bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .

    ELSE            reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RCURLY_BRACKET  reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ID              reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    IF              reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FOR             reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    INT             reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    STRING          reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 41 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)


state 297

    (42) bloque_primo -> bloque_primo statement .

    RCURLY_BRACKET  reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    ID              reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    IF              reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    PRINT           reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    FOR             reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    RETURN          reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    WHILE           reduce using rule 42 (bloque_primo -> bloque_primo statement .)
    FIGURE          reduce using rule 42 (bloque_primo -> bloque_primo statement .)


state 298

    (44) statement -> assigment .

    RCURLY_BRACKET  reduce using rule 44 (statement -> assigment .)
    ID              reduce using rule 44 (statement -> assigment .)
    IF              reduce using rule 44 (statement -> assigment .)
    PRINT           reduce using rule 44 (statement -> assigment .)
    FOR             reduce using rule 44 (statement -> assigment .)
    RETURN          reduce using rule 44 (statement -> assigment .)
    WHILE           reduce using rule 44 (statement -> assigment .)
    FIGURE          reduce using rule 44 (statement -> assigment .)


state 299

    (45) statement -> if .

    RCURLY_BRACKET  reduce using rule 45 (statement -> if .)
    ID              reduce using rule 45 (statement -> if .)
    IF              reduce using rule 45 (statement -> if .)
    PRINT           reduce using rule 45 (statement -> if .)
    FOR             reduce using rule 45 (statement -> if .)
    RETURN          reduce using rule 45 (statement -> if .)
    WHILE           reduce using rule 45 (statement -> if .)
    FIGURE          reduce using rule 45 (statement -> if .)


state 300

    (46) statement -> printer .

    RCURLY_BRACKET  reduce using rule 46 (statement -> printer .)
    ID              reduce using rule 46 (statement -> printer .)
    IF              reduce using rule 46 (statement -> printer .)
    PRINT           reduce using rule 46 (statement -> printer .)
    FOR             reduce using rule 46 (statement -> printer .)
    RETURN          reduce using rule 46 (statement -> printer .)
    WHILE           reduce using rule 46 (statement -> printer .)
    FIGURE          reduce using rule 46 (statement -> printer .)


state 301

    (47) statement -> increment .

    RCURLY_BRACKET  reduce using rule 47 (statement -> increment .)
    ID              reduce using rule 47 (statement -> increment .)
    IF              reduce using rule 47 (statement -> increment .)
    PRINT           reduce using rule 47 (statement -> increment .)
    FOR             reduce using rule 47 (statement -> increment .)
    RETURN          reduce using rule 47 (statement -> increment .)
    WHILE           reduce using rule 47 (statement -> increment .)
    FIGURE          reduce using rule 47 (statement -> increment .)


state 302

    (48) statement -> for .

    RCURLY_BRACKET  reduce using rule 48 (statement -> for .)
    ID              reduce using rule 48 (statement -> for .)
    IF              reduce using rule 48 (statement -> for .)
    PRINT           reduce using rule 48 (statement -> for .)
    FOR             reduce using rule 48 (statement -> for .)
    RETURN          reduce using rule 48 (statement -> for .)
    WHILE           reduce using rule 48 (statement -> for .)
    FIGURE          reduce using rule 48 (statement -> for .)


state 303

    (49) statement -> return .

    RCURLY_BRACKET  reduce using rule 49 (statement -> return .)
    ID              reduce using rule 49 (statement -> return .)
    IF              reduce using rule 49 (statement -> return .)
    PRINT           reduce using rule 49 (statement -> return .)
    FOR             reduce using rule 49 (statement -> return .)
    RETURN          reduce using rule 49 (statement -> return .)
    WHILE           reduce using rule 49 (statement -> return .)
    FIGURE          reduce using rule 49 (statement -> return .)


state 304

    (50) statement -> function_call .

    RCURLY_BRACKET  reduce using rule 50 (statement -> function_call .)
    ID              reduce using rule 50 (statement -> function_call .)
    IF              reduce using rule 50 (statement -> function_call .)
    PRINT           reduce using rule 50 (statement -> function_call .)
    FOR             reduce using rule 50 (statement -> function_call .)
    RETURN          reduce using rule 50 (statement -> function_call .)
    WHILE           reduce using rule 50 (statement -> function_call .)
    FIGURE          reduce using rule 50 (statement -> function_call .)


state 305

    (51) statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 51 (statement -> fun_esp .)
    ID              reduce using rule 51 (statement -> fun_esp .)
    IF              reduce using rule 51 (statement -> fun_esp .)
    PRINT           reduce using rule 51 (statement -> fun_esp .)
    FOR             reduce using rule 51 (statement -> fun_esp .)
    RETURN          reduce using rule 51 (statement -> fun_esp .)
    WHILE           reduce using rule 51 (statement -> fun_esp .)
    FIGURE          reduce using rule 51 (statement -> fun_esp .)


state 306

    (52) statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 52 (statement -> while_loop .)
    ID              reduce using rule 52 (statement -> while_loop .)
    IF              reduce using rule 52 (statement -> while_loop .)
    PRINT           reduce using rule 52 (statement -> while_loop .)
    FOR             reduce using rule 52 (statement -> while_loop .)
    RETURN          reduce using rule 52 (statement -> while_loop .)
    WHILE           reduce using rule 52 (statement -> while_loop .)
    FIGURE          reduce using rule 52 (statement -> while_loop .)


state 307

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment . OP_RPAREN bloque loop_fill

    OP_RPAREN       shift and go to state 319


state 308

    (67) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (111) push_varID_to_Stack -> . epsilon
    (141) epsilon -> .

    OP_PLUS_EQUALS  reduce using rule 141 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 141 (epsilon -> .)
    OP_PLUS         reduce using rule 141 (epsilon -> .)
    OP_MINUS        reduce using rule 141 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 320
    epsilon                        shift and go to state 157

state 309

    (74) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    ID              reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    IF              reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    PRINT           reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FOR             reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    RETURN          reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    WHILE           reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FIGURE          reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    INT             reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FLOAT           reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    STRING          reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    BOOLEAN         reduce using rule 74 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)


state 310

    (77) loop_fill -> epsilon .

    RCURLY_BRACKET  reduce using rule 77 (loop_fill -> epsilon .)
    ID              reduce using rule 77 (loop_fill -> epsilon .)
    IF              reduce using rule 77 (loop_fill -> epsilon .)
    PRINT           reduce using rule 77 (loop_fill -> epsilon .)
    FOR             reduce using rule 77 (loop_fill -> epsilon .)
    RETURN          reduce using rule 77 (loop_fill -> epsilon .)
    WHILE           reduce using rule 77 (loop_fill -> epsilon .)
    FIGURE          reduce using rule 77 (loop_fill -> epsilon .)
    INT             reduce using rule 77 (loop_fill -> epsilon .)
    FLOAT           reduce using rule 77 (loop_fill -> epsilon .)
    STRING          reduce using rule 77 (loop_fill -> epsilon .)
    BOOLEAN         reduce using rule 77 (loop_fill -> epsilon .)


state 311

    (129) bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    ID              reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    IF              reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FOR             reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    INT             reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    STRING          reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 129 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)


state 312

    (130) bloque_figura_primo -> bloque_figura_primo figura_attr .

    RCURLY_BRACKET  reduce using rule 130 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    COLOR           reduce using rule 130 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    SIZE            reduce using rule 130 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    VECTOR          reduce using rule 130 (bloque_figura_primo -> bloque_figura_primo figura_attr .)


state 313

    (132) figura_attr -> vector .

    RCURLY_BRACKET  reduce using rule 132 (figura_attr -> vector .)
    COLOR           reduce using rule 132 (figura_attr -> vector .)
    SIZE            reduce using rule 132 (figura_attr -> vector .)
    VECTOR          reduce using rule 132 (figura_attr -> vector .)


state 314

    (133) figura_attr -> COLOR . OP_TWO_POINTS ID SEMICOLON

    OP_TWO_POINTS   shift and go to state 321


state 315

    (134) figura_attr -> SIZE . OP_TWO_POINTS mega_expression SEMICOLON

    OP_TWO_POINTS   shift and go to state 322


state 316

    (135) vector -> VECTOR . ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    ID              shift and go to state 323


state 317

    (83) function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime .

    OP_RPAREN       reduce using rule 83 (function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime .)


state 318

    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE . bloque fill_if_goto
    (41) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 255

    bloque                         shift and go to state 324

state 319

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN . bloque loop_fill
    (41) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 255

    bloque                         shift and go to state 325

state 320

    (67) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (69) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (70) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_PLUS_EQUALS  shift and go to state 125
    OP_MINUS_EQUALS shift and go to state 126
    OP_PLUS         shift and go to state 127
    OP_MINUS        shift and go to state 128


state 321

    (133) figura_attr -> COLOR OP_TWO_POINTS . ID SEMICOLON

    ID              shift and go to state 326


state 322

    (134) figura_attr -> SIZE OP_TWO_POINTS . mega_expression SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 327
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 323

    (135) vector -> VECTOR ID . OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_TWO_POINTS   shift and go to state 328


state 324

    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque . fill_if_goto
    (61) fill_if_goto -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)
    INT             reduce using rule 141 (epsilon -> .)
    FLOAT           reduce using rule 141 (epsilon -> .)
    STRING          reduce using rule 141 (epsilon -> .)
    BOOLEAN         reduce using rule 141 (epsilon -> .)

    fill_if_goto                   shift and go to state 329
    epsilon                        shift and go to state 330

state 325

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque . loop_fill
    (77) loop_fill -> . epsilon
    (141) epsilon -> .

    RCURLY_BRACKET  reduce using rule 141 (epsilon -> .)
    ID              reduce using rule 141 (epsilon -> .)
    IF              reduce using rule 141 (epsilon -> .)
    PRINT           reduce using rule 141 (epsilon -> .)
    FOR             reduce using rule 141 (epsilon -> .)
    RETURN          reduce using rule 141 (epsilon -> .)
    WHILE           reduce using rule 141 (epsilon -> .)
    FIGURE          reduce using rule 141 (epsilon -> .)
    INT             reduce using rule 141 (epsilon -> .)
    FLOAT           reduce using rule 141 (epsilon -> .)
    STRING          reduce using rule 141 (epsilon -> .)
    BOOLEAN         reduce using rule 141 (epsilon -> .)

    loop_fill                      shift and go to state 331
    epsilon                        shift and go to state 310

state 326

    (133) figura_attr -> COLOR OP_TWO_POINTS ID . SEMICOLON

    SEMICOLON       shift and go to state 332


state 327

    (134) figura_attr -> SIZE OP_TWO_POINTS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 333


state 328

    (135) vector -> VECTOR ID OP_TWO_POINTS . OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 334


state 329

    (57) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .

    RCURLY_BRACKET  reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    ID              reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    IF              reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    PRINT           reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FOR             reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    RETURN          reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    WHILE           reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FIGURE          reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    INT             reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FLOAT           reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    STRING          reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    BOOLEAN         reduce using rule 57 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)


state 330

    (61) fill_if_goto -> epsilon .

    RCURLY_BRACKET  reduce using rule 61 (fill_if_goto -> epsilon .)
    ID              reduce using rule 61 (fill_if_goto -> epsilon .)
    IF              reduce using rule 61 (fill_if_goto -> epsilon .)
    PRINT           reduce using rule 61 (fill_if_goto -> epsilon .)
    FOR             reduce using rule 61 (fill_if_goto -> epsilon .)
    RETURN          reduce using rule 61 (fill_if_goto -> epsilon .)
    WHILE           reduce using rule 61 (fill_if_goto -> epsilon .)
    FIGURE          reduce using rule 61 (fill_if_goto -> epsilon .)
    INT             reduce using rule 61 (fill_if_goto -> epsilon .)
    FLOAT           reduce using rule 61 (fill_if_goto -> epsilon .)
    STRING          reduce using rule 61 (fill_if_goto -> epsilon .)
    BOOLEAN         reduce using rule 61 (fill_if_goto -> epsilon .)


state 331

    (73) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    ID              reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    IF              reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    PRINT           reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FOR             reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    RETURN          reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    WHILE           reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FIGURE          reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    INT             reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FLOAT           reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    STRING          reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    BOOLEAN         reduce using rule 73 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)


state 332

    (133) figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .

    RCURLY_BRACKET  reduce using rule 133 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    COLOR           reduce using rule 133 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    SIZE            reduce using rule 133 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    VECTOR          reduce using rule 133 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)


state 333

    (134) figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 134 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    COLOR           reduce using rule 134 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    SIZE            reduce using rule 134 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    VECTOR          reduce using rule 134 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)


state 334

    (135) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN . mega_expression COMA mega_expression OP_RPAREN SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 335
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 335

    (135) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression . COMA mega_expression OP_RPAREN SEMICOLON

    COMA            shift and go to state 336


state 336

    (135) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA . mega_expression OP_RPAREN SEMICOLON
    (88) mega_expression -> . super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (90) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (92) super_expression -> . expression check_symbol_superexp
    (93) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (100) expression -> . term check_symbol_exp
    (101) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (102) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (105) term -> . fact check_symbol_term
    (106) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (107) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (109) fact -> . var_cte
    (110) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (114) var_cte -> . ID push_varID_to_Stack
    (115) var_cte -> . VAR_INT push_cte_toTable
    (116) var_cte -> . VAR_FLOAT push_cte_toTable
    (117) var_cte -> . VAR_STRING push_cte_toTable
    (118) var_cte -> . VAR_BOOLEAN

    OP_LPAREN       shift and go to state 110
    ID              shift and go to state 111
    VAR_INT         shift and go to state 112
    VAR_FLOAT       shift and go to state 113
    VAR_STRING      shift and go to state 114
    VAR_BOOLEAN     shift and go to state 115

    mega_expression                shift and go to state 337
    super_expression               shift and go to state 105
    expression                     shift and go to state 106
    term                           shift and go to state 107
    fact                           shift and go to state 108
    var_cte                        shift and go to state 109

state 337

    (135) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 338


state 338

    (135) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 339


state 339

    (135) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 135 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    COLOR           reduce using rule 135 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    SIZE            reduce using rule 135 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    VECTOR          reduce using rule 135 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for STRING in state 47 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 55 resolved as shift
WARNING: shift/reduce conflict for RCURLY_BRACKET in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for FIGURE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 67 resolved as shift
