Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CARET
    QUOT_MARK
    VAR
    FIGURE
    POSSESS
    DRAW

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 3     vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
Rule 4     vars -> epsilon
Rule 5     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 6     vars_prime -> epsilon
Rule 7     pushTo_varsTable -> epsilon
Rule 8     save_type -> epsilon
Rule 9     create_arr_info -> epsilon
Rule 10    function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 11    function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 12    function -> epsilon
Rule 13    pushTo_FunctionDir -> epsilon
Rule 14    pushTo_functionSignature -> epsilon
Rule 15    add_NumVars -> epsilon
Rule 16    add_Function_FirstQuadruple -> epsilon
Rule 17    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
Rule 18    fill_firstQuadruple -> epsilon
Rule 19    add_NumVars_Main_Global -> epsilon
Rule 20    push_end_quadruple -> epsilon
Rule 21    type -> INT
Rule 22    type -> FLOAT
Rule 23    type -> STRING
Rule 24    type -> BOOLEAN
Rule 25    function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime
Rule 26    function_parameters -> epsilon
Rule 27    function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime
Rule 28    function_parameters_prime -> epsilon
Rule 29    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 30    function_bloque_primo -> function_bloque_primo function_statement
Rule 31    function_bloque_primo -> epsilon
Rule 32    function_statement -> assigment
Rule 33    function_statement -> if
Rule 34    function_statement -> printer
Rule 35    function_statement -> increment
Rule 36    function_statement -> for
Rule 37    function_statement -> return
Rule 38    function_statement -> function_call
Rule 39    function_statement -> vars
Rule 40    function_statement -> while_loop
Rule 41    function_statement -> draw_figure
Rule 42    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 43    bloque_primo -> bloque_primo statement
Rule 44    bloque_primo -> epsilon
Rule 45    statement -> assigment
Rule 46    statement -> if
Rule 47    statement -> printer
Rule 48    statement -> increment
Rule 49    statement -> for
Rule 50    statement -> return
Rule 51    statement -> function_call
Rule 52    statement -> while_loop
Rule 53    statement -> draw_figure
Rule 54    assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 55    assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 56    ver_quadruples -> epsilon
Rule 57    equals_quadruple -> epsilon
Rule 58    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
Rule 59    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
Rule 60    if_gotoF_quadruple -> epsilon
Rule 61    fill_if_gotoF1 -> epsilon
Rule 62    fill_if_gotoF2 -> epsilon
Rule 63    fill_if_goto -> epsilon
Rule 64    if_goto_quadruple -> epsilon
Rule 65    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 66    impression -> mega_expression printer_quadruple
Rule 67    impression -> mega_expression printer_quadruple COMA impression
Rule 68    printer_quadruple -> epsilon
Rule 69    increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 70    increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 71    increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
Rule 72    increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
Rule 73    incrementByOne -> epsilon
Rule 74    increment_equals -> epsilon
Rule 75    for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
Rule 76    while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
Rule 77    loop_jumpCount -> epsilon
Rule 78    loop_gotoF -> epsilon
Rule 79    loop_fill -> epsilon
Rule 80    return -> RETURN mega_expression return_quadruple SEMICOLON
Rule 81    return_quadruple -> epsilon
Rule 82    function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
Rule 83    function_call_parameters -> mega_expression create_param function_call_parameters_prime
Rule 84    function_call_parameters -> epsilon
Rule 85    function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime
Rule 86    function_call_parameters_prime -> epsilon
Rule 87    create_era -> epsilon
Rule 88    create_param -> epsilon
Rule 89    create_gosub -> epsilon
Rule 90    mega_expression -> super_expression check_symbol_megaexp
Rule 91    mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp
Rule 92    mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp
Rule 93    check_symbol_megaexp -> epsilon
Rule 94    super_expression -> expression check_symbol_superexp
Rule 95    super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
Rule 96    super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp
Rule 97    super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 98    super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 99    super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
Rule 100   super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
Rule 101   check_symbol_superexp -> epsilon
Rule 102   expression -> term check_symbol_exp
Rule 103   expression -> term check_symbol_exp OP_PLUS push_symbol expression
Rule 104   expression -> term check_symbol_exp OP_MINUS push_symbol expression
Rule 105   push_symbol -> epsilon
Rule 106   check_symbol_exp -> epsilon
Rule 107   term -> fact check_symbol_term
Rule 108   term -> fact check_symbol_term OP_DIVISION push_symbol term
Rule 109   term -> fact check_symbol_term OP_TIMES push_symbol term
Rule 110   check_symbol_term -> epsilon
Rule 111   fact -> var_cte
Rule 112   fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
Rule 113   fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
Rule 114   fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
Rule 115   push_varID_to_Stack -> epsilon
Rule 116   push_bottle_bottom -> epsilon
Rule 117   remove_bottle_bottom -> epsilon
Rule 118   var_cte -> ID push_varID_to_Stack
Rule 119   var_cte -> VAR_INT push_cte_toTable
Rule 120   var_cte -> VAR_FLOAT push_cte_toTable
Rule 121   var_cte -> VAR_STRING push_cte_toTable
Rule 122   var_cte -> VAR_BOOLEAN push_cte_toTable
Rule 123   push_cte_toTable -> epsilon
Rule 124   figure -> POINT
Rule 125   figure -> LINE
Rule 126   figure -> SQUARE
Rule 127   figure -> RECTANGLE
Rule 128   figure -> TRIANGLE
Rule 129   figure -> CIRCLE
Rule 130   figure -> ARC
Rule 131   figura_attr -> vector
Rule 132   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 133   figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON
Rule 134   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON
Rule 135   draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON
Rule 136   figure_quadruple -> epsilon
Rule 137   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 91
ARC                  : 130
ARRAY                : 3
BOOLEAN              : 24
CARET                : 
CIRCLE               : 129
COLOR                : 132
COMA                 : 3 5 27 67 85 134 135 135
DRAW                 : 
ELSE                 : 59
FIGURE               : 
FLOAT                : 22
FOR                  : 75
FUNCTION             : 10 11
ID                   : 1 2 3 5 10 11 25 27 54 55 69 70 71 72 82 113 114 118 132 134
IF                   : 58 59
INT                  : 21
LCURLY_BRACKET       : 1 29 42
LINE                 : 125
MAIN                 : 17
OP_DIVISION          : 108
OP_EQUALS            : 54 55
OP_EQUALS_TWO        : 99
OP_GREATER_EQUALS_THAN : 97
OP_GREATER_THAN      : 95
OP_LESS_EQUALS_THAN  : 98
OP_LESS_THAN         : 96
OP_LPAREN            : 10 11 17 58 59 65 75 76 82 112 114 134 135
OP_LSQUARE_PAREN     : 3 55 113
OP_MINUS             : 72 72 104
OP_MINUS_EQUALS      : 70
OP_NOT_EQUALS        : 100
OP_PLUS              : 71 71 103
OP_PLUS_EQUALS       : 69
OP_RPAREN            : 10 11 17 58 59 65 75 76 82 112 114 134 135
OP_RSQUARE_PAREN     : 3 55 113
OP_TIMES             : 109
OP_TWO_POINTS        : 132 133 134
OR                   : 92
POINT                : 124
POSSESS              : 
PRINT                : 65
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 29 42
RECTANGLE            : 127
RETURN               : 80
SEMICOLON            : 2 3 54 55 65 69 70 71 72 75 80 82 132 133 134 135
SIZE                 : 133
SQUARE               : 126
STRING               : 23
TRIANGLE             : 128
VAR                  : 
VAR_BOOLEAN          : 122
VAR_FLOAT            : 120
VAR_INT              : 3 3 119
VAR_STRING           : 121
VECTOR               : 134
VOID                 : 11
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

add_Function_FirstQuadruple : 10 11
add_NumVars          : 10 11
add_NumVars_Main_Global : 1 17
assigment            : 32 45 75
bloque               : 58 59 59 75 76
bloque_primo         : 42 43
check_symbol_exp     : 102 103 104
check_symbol_megaexp : 90 91 92
check_symbol_superexp : 94 95 96 97 98 99 100
check_symbol_term    : 107 108 109
create_arr_info      : 3
create_era           : 82 114
create_gosub         : 82 114
create_param         : 83 85
draw_figure          : 41 53
epsilon              : 4 6 7 8 9 12 13 14 15 16 18 19 20 26 28 31 44 56 57 60 61 62 63 64 68 73 74 77 78 79 81 84 86 87 88 89 93 101 105 106 110 115 116 117 123 136
equals_quadruple     : 54 55
expression           : 94 95 95 96 96 97 97 98 98 99 99 100 100 103 104
fact                 : 107 108 109
figura_attr          : 
figure               : 135
figure_quadruple     : 135
fill_firstQuadruple  : 17
fill_if_goto         : 59
fill_if_gotoF1       : 58
fill_if_gotoF2       : 59
for                  : 36 49
function             : 1 10 11
function_bloque      : 10 11 17
function_bloque_primo : 29 30
function_call        : 38 51
function_call_parameters : 82 114
function_call_parameters_prime : 83 85
function_parameters  : 10 11
function_parameters_prime : 25 27
function_statement   : 30
if                   : 33 46
if_gotoF_quadruple   : 58 59
if_goto_quadruple    : 59
impression           : 65 67
increment            : 35 48 75
incrementByOne       : 71 72
increment_equals     : 69 70
loop_fill            : 75 76
loop_gotoF           : 75 76
loop_jumpCount       : 75 76
main_function        : 1
mega_expression      : 54 55 55 58 59 66 67 69 70 75 76 80 83 85 112 113 133 134 134 135 135 135
printer              : 34 47
printer_quadruple    : 66 67
program              : 0
pushTo_FunctionDir   : 10 11 17
pushTo_functionSignature : 10 11
pushTo_varsTable     : 2 3 5 25 27
push_bottle_bottom   : 112 113 114
push_cte_toTable     : 119 120 121 122
push_end_quadruple   : 17
push_symbol          : 54 55 69 70 91 92 95 96 97 98 99 100 103 104 108 109
push_varID_to_Stack  : 54 55 69 70 71 72 113 118
remove_bottle_bottom : 112 113 114
return               : 37 50
return_quadruple     : 80
save_type            : 2 3 25 27
statement            : 43
super_expression     : 90 91 91 92 92
term                 : 102 103 104 108 109
type                 : 2 3 10 25 27
var_cte              : 111
vars                 : 1 2 3 39
vars_prime           : 2 5
vector               : 131
ver_quadruples       : 55 113
while_loop           : 40 52

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 4


state 4

    (1) program -> PROGRAM ID LCURLY_BRACKET . vars add_NumVars_Main_Global function main_function RCURLY_BRACKET
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (4) vars -> . epsilon
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN
    (137) epsilon -> .

    ARRAY           shift and go to state 7
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12
    FUNCTION        reduce using rule 137 (epsilon -> .)
    MAIN            reduce using rule 137 (epsilon -> .)

    vars                           shift and go to state 5
    type                           shift and go to state 6
    epsilon                        shift and go to state 8

state 5

    (1) program -> PROGRAM ID LCURLY_BRACKET vars . add_NumVars_Main_Global function main_function RCURLY_BRACKET
    (19) add_NumVars_Main_Global -> . epsilon
    (137) epsilon -> .

    FUNCTION        reduce using rule 137 (epsilon -> .)
    MAIN            reduce using rule 137 (epsilon -> .)

    add_NumVars_Main_Global        shift and go to state 13
    epsilon                        shift and go to state 14

state 6

    (2) vars -> type . save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (8) save_type -> . epsilon
    (137) epsilon -> .

    ID              reduce using rule 137 (epsilon -> .)

    save_type                      shift and go to state 15
    epsilon                        shift and go to state 16

state 7

    (3) vars -> ARRAY . type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12

    type                           shift and go to state 17

state 8

    (4) vars -> epsilon .

    FUNCTION        reduce using rule 4 (vars -> epsilon .)
    MAIN            reduce using rule 4 (vars -> epsilon .)
    RCURLY_BRACKET  reduce using rule 4 (vars -> epsilon .)
    ID              reduce using rule 4 (vars -> epsilon .)
    IF              reduce using rule 4 (vars -> epsilon .)
    PRINT           reduce using rule 4 (vars -> epsilon .)
    FOR             reduce using rule 4 (vars -> epsilon .)
    RETURN          reduce using rule 4 (vars -> epsilon .)
    ARRAY           reduce using rule 4 (vars -> epsilon .)
    WHILE           reduce using rule 4 (vars -> epsilon .)
    INT             reduce using rule 4 (vars -> epsilon .)
    FLOAT           reduce using rule 4 (vars -> epsilon .)
    STRING          reduce using rule 4 (vars -> epsilon .)
    BOOLEAN         reduce using rule 4 (vars -> epsilon .)
    POINT           reduce using rule 4 (vars -> epsilon .)
    LINE            reduce using rule 4 (vars -> epsilon .)
    SQUARE          reduce using rule 4 (vars -> epsilon .)
    RECTANGLE       reduce using rule 4 (vars -> epsilon .)
    TRIANGLE        reduce using rule 4 (vars -> epsilon .)
    CIRCLE          reduce using rule 4 (vars -> epsilon .)
    ARC             reduce using rule 4 (vars -> epsilon .)


state 9

    (21) type -> INT .

    ID              reduce using rule 21 (type -> INT .)


state 10

    (22) type -> FLOAT .

    ID              reduce using rule 22 (type -> FLOAT .)


state 11

    (23) type -> STRING .

    ID              reduce using rule 23 (type -> STRING .)


state 12

    (24) type -> BOOLEAN .

    ID              reduce using rule 24 (type -> BOOLEAN .)


state 13

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global . function main_function RCURLY_BRACKET
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (12) function -> . epsilon
    (137) epsilon -> .

    FUNCTION        shift and go to state 19
    MAIN            reduce using rule 137 (epsilon -> .)

    function                       shift and go to state 18
    epsilon                        shift and go to state 20

state 14

    (19) add_NumVars_Main_Global -> epsilon .

    FUNCTION        reduce using rule 19 (add_NumVars_Main_Global -> epsilon .)
    MAIN            reduce using rule 19 (add_NumVars_Main_Global -> epsilon .)
    RCURLY_BRACKET  reduce using rule 19 (add_NumVars_Main_Global -> epsilon .)


state 15

    (2) vars -> type save_type . ID pushTo_varsTable vars_prime SEMICOLON vars

    ID              shift and go to state 21


state 16

    (8) save_type -> epsilon .

    ID              reduce using rule 8 (save_type -> epsilon .)


state 17

    (3) vars -> ARRAY type . save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (8) save_type -> . epsilon
    (137) epsilon -> .

    ID              reduce using rule 137 (epsilon -> .)

    save_type                      shift and go to state 22
    epsilon                        shift and go to state 16

state 18

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function . main_function RCURLY_BRACKET
    (17) main_function -> . MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple

    MAIN            shift and go to state 24

    main_function                  shift and go to state 23

state 19

    (10) function -> FUNCTION . type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> FUNCTION . VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN

    VOID            shift and go to state 26
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12

    type                           shift and go to state 25

state 20

    (12) function -> epsilon .

    MAIN            reduce using rule 12 (function -> epsilon .)


state 21

    (2) vars -> type save_type ID . pushTo_varsTable vars_prime SEMICOLON vars
    (7) pushTo_varsTable -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)

    pushTo_varsTable               shift and go to state 27
    epsilon                        shift and go to state 28

state 22

    (3) vars -> ARRAY type save_type . ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars

    ID              shift and go to state 29


state 23

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function . RCURLY_BRACKET

    RCURLY_BRACKET  shift and go to state 30


state 24

    (17) main_function -> MAIN . pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
    (13) pushTo_FunctionDir -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 31
    epsilon                        shift and go to state 32

state 25

    (10) function -> FUNCTION type . ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    ID              shift and go to state 33


state 26

    (11) function -> FUNCTION VOID . ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    ID              shift and go to state 34


state 27

    (2) vars -> type save_type ID pushTo_varsTable . vars_prime SEMICOLON vars
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (137) epsilon -> .

    COMA            shift and go to state 36
    SEMICOLON       reduce using rule 137 (epsilon -> .)

    vars_prime                     shift and go to state 35
    epsilon                        shift and go to state 37

state 28

    (7) pushTo_varsTable -> epsilon .

    COMA            reduce using rule 7 (pushTo_varsTable -> epsilon .)
    SEMICOLON       reduce using rule 7 (pushTo_varsTable -> epsilon .)
    OP_LSQUARE_PAREN reduce using rule 7 (pushTo_varsTable -> epsilon .)
    OP_RPAREN       reduce using rule 7 (pushTo_varsTable -> epsilon .)


state 29

    (3) vars -> ARRAY type save_type ID . pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (7) pushTo_varsTable -> . epsilon
    (137) epsilon -> .

    OP_LSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    pushTo_varsTable               shift and go to state 38
    epsilon                        shift and go to state 28

state 30

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET .)


state 31

    (17) main_function -> MAIN pushTo_FunctionDir . OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple

    OP_LPAREN       shift and go to state 39


state 32

    (13) pushTo_FunctionDir -> epsilon .

    OP_LPAREN       reduce using rule 13 (pushTo_FunctionDir -> epsilon .)


state 33

    (10) function -> FUNCTION type ID . pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (13) pushTo_FunctionDir -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 40
    epsilon                        shift and go to state 32

state 34

    (11) function -> FUNCTION VOID ID . pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (13) pushTo_FunctionDir -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 41
    epsilon                        shift and go to state 32

state 35

    (2) vars -> type save_type ID pushTo_varsTable vars_prime . SEMICOLON vars

    SEMICOLON       shift and go to state 42


state 36

    (5) vars_prime -> COMA . ID pushTo_varsTable vars_prime

    ID              shift and go to state 43


state 37

    (6) vars_prime -> epsilon .

    SEMICOLON       reduce using rule 6 (vars_prime -> epsilon .)


state 38

    (3) vars -> ARRAY type save_type ID pushTo_varsTable . OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars

    OP_LSQUARE_PAREN shift and go to state 44


state 39

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN . OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple

    OP_RPAREN       shift and go to state 45


state 40

    (10) function -> FUNCTION type ID pushTo_FunctionDir . OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_LPAREN       shift and go to state 46


state 41

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir . OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_LPAREN       shift and go to state 47


state 42

    (2) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON . vars
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (4) vars -> . epsilon
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN
    (137) epsilon -> .

  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    ARRAY           shift and go to state 7
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12
    FUNCTION        reduce using rule 137 (epsilon -> .)
    MAIN            reduce using rule 137 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

  ! ARRAY           [ reduce using rule 137 (epsilon -> .) ]
  ! INT             [ reduce using rule 137 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 137 (epsilon -> .) ]
  ! STRING          [ reduce using rule 137 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 137 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 48
    epsilon                        shift and go to state 8

state 43

    (5) vars_prime -> COMA ID . pushTo_varsTable vars_prime
    (7) pushTo_varsTable -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)

    pushTo_varsTable               shift and go to state 49
    epsilon                        shift and go to state 28

state 44

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN . VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars

    VAR_INT         shift and go to state 50


state 45

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN . fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
    (18) fill_firstQuadruple -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    fill_firstQuadruple            shift and go to state 51
    epsilon                        shift and go to state 52

state 46

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN . function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (25) function_parameters -> . type save_type ID pushTo_varsTable function_parameters_prime
    (26) function_parameters -> . epsilon
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN
    (137) epsilon -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    type                           shift and go to state 53
    function_parameters            shift and go to state 54
    epsilon                        shift and go to state 55

state 47

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN . function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (25) function_parameters -> . type save_type ID pushTo_varsTable function_parameters_prime
    (26) function_parameters -> . epsilon
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN
    (137) epsilon -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    function_parameters            shift and go to state 56
    type                           shift and go to state 53
    epsilon                        shift and go to state 55

state 48

    (2) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .

    FUNCTION        reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    MAIN            reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ID              reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    IF              reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    PRINT           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FOR             reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RETURN          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ARRAY           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    WHILE           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    INT             reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FLOAT           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    STRING          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    BOOLEAN         reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    POINT           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    LINE            reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    SQUARE          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RECTANGLE       reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    TRIANGLE        reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    CIRCLE          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ARC             reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)


state 49

    (5) vars_prime -> COMA ID pushTo_varsTable . vars_prime
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (137) epsilon -> .

    COMA            shift and go to state 36
    SEMICOLON       reduce using rule 137 (epsilon -> .)

    vars_prime                     shift and go to state 57
    epsilon                        shift and go to state 37

state 50

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT . COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars

    COMA            shift and go to state 58


state 51

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple . function_bloque add_NumVars_Main_Global push_end_quadruple
    (29) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 60

    function_bloque                shift and go to state 59

state 52

    (18) fill_firstQuadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 18 (fill_firstQuadruple -> epsilon .)


state 53

    (25) function_parameters -> type . save_type ID pushTo_varsTable function_parameters_prime
    (8) save_type -> . epsilon
    (137) epsilon -> .

    ID              reduce using rule 137 (epsilon -> .)

    save_type                      shift and go to state 61
    epsilon                        shift and go to state 16

state 54

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters . OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_RPAREN       shift and go to state 62


state 55

    (26) function_parameters -> epsilon .

    OP_RPAREN       reduce using rule 26 (function_parameters -> epsilon .)


state 56

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters . OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_RPAREN       shift and go to state 63


state 57

    (5) vars_prime -> COMA ID pushTo_varsTable vars_prime .

    SEMICOLON       reduce using rule 5 (vars_prime -> COMA ID pushTo_varsTable vars_prime .)


state 58

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA . VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars

    VAR_INT         shift and go to state 64


state 59

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque . add_NumVars_Main_Global push_end_quadruple
    (19) add_NumVars_Main_Global -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    add_NumVars_Main_Global        shift and go to state 65
    epsilon                        shift and go to state 14

state 60

    (29) function_bloque -> LCURLY_BRACKET . function_bloque_primo RCURLY_BRACKET
    (30) function_bloque_primo -> . function_bloque_primo function_statement
    (31) function_bloque_primo -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    ARRAY           reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    INT             reduce using rule 137 (epsilon -> .)
    FLOAT           reduce using rule 137 (epsilon -> .)
    STRING          reduce using rule 137 (epsilon -> .)
    BOOLEAN         reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

    function_bloque_primo          shift and go to state 66
    epsilon                        shift and go to state 67

state 61

    (25) function_parameters -> type save_type . ID pushTo_varsTable function_parameters_prime

    ID              shift and go to state 68


state 62

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN . add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (16) add_Function_FirstQuadruple -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    add_Function_FirstQuadruple    shift and go to state 69
    epsilon                        shift and go to state 70

state 63

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN . add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (16) add_Function_FirstQuadruple -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    add_Function_FirstQuadruple    shift and go to state 71
    epsilon                        shift and go to state 70

state 64

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT . create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (9) create_arr_info -> . epsilon
    (137) epsilon -> .

    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    create_arr_info                shift and go to state 72
    epsilon                        shift and go to state 73

state 65

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global . push_end_quadruple
    (20) push_end_quadruple -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    push_end_quadruple             shift and go to state 74
    epsilon                        shift and go to state 75

state 66

    (29) function_bloque -> LCURLY_BRACKET function_bloque_primo . RCURLY_BRACKET
    (30) function_bloque_primo -> function_bloque_primo . function_statement
    (32) function_statement -> . assigment
    (33) function_statement -> . if
    (34) function_statement -> . printer
    (35) function_statement -> . increment
    (36) function_statement -> . for
    (37) function_statement -> . return
    (38) function_statement -> . function_call
    (39) function_statement -> . vars
    (40) function_statement -> . while_loop
    (41) function_statement -> . draw_figure
    (54) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> . ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (58) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (59) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (65) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (75) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (80) return -> . RETURN mega_expression return_quadruple SEMICOLON
    (82) function_call -> . ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (4) vars -> . epsilon
    (76) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (135) draw_figure -> . figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN
    (137) epsilon -> .
    (124) figure -> . POINT
    (125) figure -> . LINE
    (126) figure -> . SQUARE
    (127) figure -> . RECTANGLE
    (128) figure -> . TRIANGLE
    (129) figure -> . CIRCLE
    (130) figure -> . ARC

  ! shift/reduce conflict for RCURLY_BRACKET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for RECTANGLE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for ARC resolved as shift
    RCURLY_BRACKET  shift and go to state 76
    ID              shift and go to state 88
    IF              shift and go to state 89
    PRINT           shift and go to state 90
    FOR             shift and go to state 91
    RETURN          shift and go to state 92
    ARRAY           shift and go to state 7
    WHILE           shift and go to state 93
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12
    POINT           shift and go to state 95
    LINE            shift and go to state 96
    SQUARE          shift and go to state 97
    RECTANGLE       shift and go to state 98
    TRIANGLE        shift and go to state 99
    CIRCLE          shift and go to state 100
    ARC             shift and go to state 101

  ! RCURLY_BRACKET  [ reduce using rule 137 (epsilon -> .) ]
  ! ID              [ reduce using rule 137 (epsilon -> .) ]
  ! IF              [ reduce using rule 137 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 137 (epsilon -> .) ]
  ! FOR             [ reduce using rule 137 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 137 (epsilon -> .) ]
  ! ARRAY           [ reduce using rule 137 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 137 (epsilon -> .) ]
  ! INT             [ reduce using rule 137 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 137 (epsilon -> .) ]
  ! STRING          [ reduce using rule 137 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 137 (epsilon -> .) ]
  ! POINT           [ reduce using rule 137 (epsilon -> .) ]
  ! LINE            [ reduce using rule 137 (epsilon -> .) ]
  ! SQUARE          [ reduce using rule 137 (epsilon -> .) ]
  ! RECTANGLE       [ reduce using rule 137 (epsilon -> .) ]
  ! TRIANGLE        [ reduce using rule 137 (epsilon -> .) ]
  ! CIRCLE          [ reduce using rule 137 (epsilon -> .) ]
  ! ARC             [ reduce using rule 137 (epsilon -> .) ]

    function_statement             shift and go to state 77
    assigment                      shift and go to state 78
    if                             shift and go to state 79
    printer                        shift and go to state 80
    increment                      shift and go to state 81
    for                            shift and go to state 82
    return                         shift and go to state 83
    function_call                  shift and go to state 84
    vars                           shift and go to state 85
    while_loop                     shift and go to state 86
    draw_figure                    shift and go to state 87
    type                           shift and go to state 6
    epsilon                        shift and go to state 8
    figure                         shift and go to state 94

state 67

    (31) function_bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 31 (function_bloque_primo -> epsilon .)
    ID              reduce using rule 31 (function_bloque_primo -> epsilon .)
    IF              reduce using rule 31 (function_bloque_primo -> epsilon .)
    PRINT           reduce using rule 31 (function_bloque_primo -> epsilon .)
    FOR             reduce using rule 31 (function_bloque_primo -> epsilon .)
    RETURN          reduce using rule 31 (function_bloque_primo -> epsilon .)
    ARRAY           reduce using rule 31 (function_bloque_primo -> epsilon .)
    WHILE           reduce using rule 31 (function_bloque_primo -> epsilon .)
    INT             reduce using rule 31 (function_bloque_primo -> epsilon .)
    FLOAT           reduce using rule 31 (function_bloque_primo -> epsilon .)
    STRING          reduce using rule 31 (function_bloque_primo -> epsilon .)
    BOOLEAN         reduce using rule 31 (function_bloque_primo -> epsilon .)
    POINT           reduce using rule 31 (function_bloque_primo -> epsilon .)
    LINE            reduce using rule 31 (function_bloque_primo -> epsilon .)
    SQUARE          reduce using rule 31 (function_bloque_primo -> epsilon .)
    RECTANGLE       reduce using rule 31 (function_bloque_primo -> epsilon .)
    TRIANGLE        reduce using rule 31 (function_bloque_primo -> epsilon .)
    CIRCLE          reduce using rule 31 (function_bloque_primo -> epsilon .)
    ARC             reduce using rule 31 (function_bloque_primo -> epsilon .)


state 68

    (25) function_parameters -> type save_type ID . pushTo_varsTable function_parameters_prime
    (7) pushTo_varsTable -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    pushTo_varsTable               shift and go to state 102
    epsilon                        shift and go to state 28

state 69

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple . pushTo_functionSignature function_bloque add_NumVars function
    (14) pushTo_functionSignature -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    pushTo_functionSignature       shift and go to state 103
    epsilon                        shift and go to state 104

state 70

    (16) add_Function_FirstQuadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 16 (add_Function_FirstQuadruple -> epsilon .)


state 71

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple . pushTo_functionSignature function_bloque add_NumVars function
    (14) pushTo_functionSignature -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    pushTo_functionSignature       shift and go to state 105
    epsilon                        shift and go to state 104

state 72

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info . OP_RSQUARE_PAREN SEMICOLON vars

    OP_RSQUARE_PAREN shift and go to state 106


state 73

    (9) create_arr_info -> epsilon .

    OP_RSQUARE_PAREN reduce using rule 9 (create_arr_info -> epsilon .)


state 74

    (17) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple .

    RCURLY_BRACKET  reduce using rule 17 (main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple .)


state 75

    (20) push_end_quadruple -> epsilon .

    RCURLY_BRACKET  reduce using rule 20 (push_end_quadruple -> epsilon .)


state 76

    (29) function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 29 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    FUNCTION        reduce using rule 29 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    MAIN            reduce using rule 29 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)


state 77

    (30) function_bloque_primo -> function_bloque_primo function_statement .

    RCURLY_BRACKET  reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    ID              reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    IF              reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    PRINT           reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    FOR             reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    RETURN          reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    ARRAY           reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    WHILE           reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    INT             reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    FLOAT           reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    STRING          reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    BOOLEAN         reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    POINT           reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    LINE            reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    SQUARE          reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    RECTANGLE       reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    TRIANGLE        reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    CIRCLE          reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)
    ARC             reduce using rule 30 (function_bloque_primo -> function_bloque_primo function_statement .)


state 78

    (32) function_statement -> assigment .

    RCURLY_BRACKET  reduce using rule 32 (function_statement -> assigment .)
    ID              reduce using rule 32 (function_statement -> assigment .)
    IF              reduce using rule 32 (function_statement -> assigment .)
    PRINT           reduce using rule 32 (function_statement -> assigment .)
    FOR             reduce using rule 32 (function_statement -> assigment .)
    RETURN          reduce using rule 32 (function_statement -> assigment .)
    ARRAY           reduce using rule 32 (function_statement -> assigment .)
    WHILE           reduce using rule 32 (function_statement -> assigment .)
    INT             reduce using rule 32 (function_statement -> assigment .)
    FLOAT           reduce using rule 32 (function_statement -> assigment .)
    STRING          reduce using rule 32 (function_statement -> assigment .)
    BOOLEAN         reduce using rule 32 (function_statement -> assigment .)
    POINT           reduce using rule 32 (function_statement -> assigment .)
    LINE            reduce using rule 32 (function_statement -> assigment .)
    SQUARE          reduce using rule 32 (function_statement -> assigment .)
    RECTANGLE       reduce using rule 32 (function_statement -> assigment .)
    TRIANGLE        reduce using rule 32 (function_statement -> assigment .)
    CIRCLE          reduce using rule 32 (function_statement -> assigment .)
    ARC             reduce using rule 32 (function_statement -> assigment .)


state 79

    (33) function_statement -> if .

    RCURLY_BRACKET  reduce using rule 33 (function_statement -> if .)
    ID              reduce using rule 33 (function_statement -> if .)
    IF              reduce using rule 33 (function_statement -> if .)
    PRINT           reduce using rule 33 (function_statement -> if .)
    FOR             reduce using rule 33 (function_statement -> if .)
    RETURN          reduce using rule 33 (function_statement -> if .)
    ARRAY           reduce using rule 33 (function_statement -> if .)
    WHILE           reduce using rule 33 (function_statement -> if .)
    INT             reduce using rule 33 (function_statement -> if .)
    FLOAT           reduce using rule 33 (function_statement -> if .)
    STRING          reduce using rule 33 (function_statement -> if .)
    BOOLEAN         reduce using rule 33 (function_statement -> if .)
    POINT           reduce using rule 33 (function_statement -> if .)
    LINE            reduce using rule 33 (function_statement -> if .)
    SQUARE          reduce using rule 33 (function_statement -> if .)
    RECTANGLE       reduce using rule 33 (function_statement -> if .)
    TRIANGLE        reduce using rule 33 (function_statement -> if .)
    CIRCLE          reduce using rule 33 (function_statement -> if .)
    ARC             reduce using rule 33 (function_statement -> if .)


state 80

    (34) function_statement -> printer .

    RCURLY_BRACKET  reduce using rule 34 (function_statement -> printer .)
    ID              reduce using rule 34 (function_statement -> printer .)
    IF              reduce using rule 34 (function_statement -> printer .)
    PRINT           reduce using rule 34 (function_statement -> printer .)
    FOR             reduce using rule 34 (function_statement -> printer .)
    RETURN          reduce using rule 34 (function_statement -> printer .)
    ARRAY           reduce using rule 34 (function_statement -> printer .)
    WHILE           reduce using rule 34 (function_statement -> printer .)
    INT             reduce using rule 34 (function_statement -> printer .)
    FLOAT           reduce using rule 34 (function_statement -> printer .)
    STRING          reduce using rule 34 (function_statement -> printer .)
    BOOLEAN         reduce using rule 34 (function_statement -> printer .)
    POINT           reduce using rule 34 (function_statement -> printer .)
    LINE            reduce using rule 34 (function_statement -> printer .)
    SQUARE          reduce using rule 34 (function_statement -> printer .)
    RECTANGLE       reduce using rule 34 (function_statement -> printer .)
    TRIANGLE        reduce using rule 34 (function_statement -> printer .)
    CIRCLE          reduce using rule 34 (function_statement -> printer .)
    ARC             reduce using rule 34 (function_statement -> printer .)


state 81

    (35) function_statement -> increment .

    RCURLY_BRACKET  reduce using rule 35 (function_statement -> increment .)
    ID              reduce using rule 35 (function_statement -> increment .)
    IF              reduce using rule 35 (function_statement -> increment .)
    PRINT           reduce using rule 35 (function_statement -> increment .)
    FOR             reduce using rule 35 (function_statement -> increment .)
    RETURN          reduce using rule 35 (function_statement -> increment .)
    ARRAY           reduce using rule 35 (function_statement -> increment .)
    WHILE           reduce using rule 35 (function_statement -> increment .)
    INT             reduce using rule 35 (function_statement -> increment .)
    FLOAT           reduce using rule 35 (function_statement -> increment .)
    STRING          reduce using rule 35 (function_statement -> increment .)
    BOOLEAN         reduce using rule 35 (function_statement -> increment .)
    POINT           reduce using rule 35 (function_statement -> increment .)
    LINE            reduce using rule 35 (function_statement -> increment .)
    SQUARE          reduce using rule 35 (function_statement -> increment .)
    RECTANGLE       reduce using rule 35 (function_statement -> increment .)
    TRIANGLE        reduce using rule 35 (function_statement -> increment .)
    CIRCLE          reduce using rule 35 (function_statement -> increment .)
    ARC             reduce using rule 35 (function_statement -> increment .)


state 82

    (36) function_statement -> for .

    RCURLY_BRACKET  reduce using rule 36 (function_statement -> for .)
    ID              reduce using rule 36 (function_statement -> for .)
    IF              reduce using rule 36 (function_statement -> for .)
    PRINT           reduce using rule 36 (function_statement -> for .)
    FOR             reduce using rule 36 (function_statement -> for .)
    RETURN          reduce using rule 36 (function_statement -> for .)
    ARRAY           reduce using rule 36 (function_statement -> for .)
    WHILE           reduce using rule 36 (function_statement -> for .)
    INT             reduce using rule 36 (function_statement -> for .)
    FLOAT           reduce using rule 36 (function_statement -> for .)
    STRING          reduce using rule 36 (function_statement -> for .)
    BOOLEAN         reduce using rule 36 (function_statement -> for .)
    POINT           reduce using rule 36 (function_statement -> for .)
    LINE            reduce using rule 36 (function_statement -> for .)
    SQUARE          reduce using rule 36 (function_statement -> for .)
    RECTANGLE       reduce using rule 36 (function_statement -> for .)
    TRIANGLE        reduce using rule 36 (function_statement -> for .)
    CIRCLE          reduce using rule 36 (function_statement -> for .)
    ARC             reduce using rule 36 (function_statement -> for .)


state 83

    (37) function_statement -> return .

    RCURLY_BRACKET  reduce using rule 37 (function_statement -> return .)
    ID              reduce using rule 37 (function_statement -> return .)
    IF              reduce using rule 37 (function_statement -> return .)
    PRINT           reduce using rule 37 (function_statement -> return .)
    FOR             reduce using rule 37 (function_statement -> return .)
    RETURN          reduce using rule 37 (function_statement -> return .)
    ARRAY           reduce using rule 37 (function_statement -> return .)
    WHILE           reduce using rule 37 (function_statement -> return .)
    INT             reduce using rule 37 (function_statement -> return .)
    FLOAT           reduce using rule 37 (function_statement -> return .)
    STRING          reduce using rule 37 (function_statement -> return .)
    BOOLEAN         reduce using rule 37 (function_statement -> return .)
    POINT           reduce using rule 37 (function_statement -> return .)
    LINE            reduce using rule 37 (function_statement -> return .)
    SQUARE          reduce using rule 37 (function_statement -> return .)
    RECTANGLE       reduce using rule 37 (function_statement -> return .)
    TRIANGLE        reduce using rule 37 (function_statement -> return .)
    CIRCLE          reduce using rule 37 (function_statement -> return .)
    ARC             reduce using rule 37 (function_statement -> return .)


state 84

    (38) function_statement -> function_call .

    RCURLY_BRACKET  reduce using rule 38 (function_statement -> function_call .)
    ID              reduce using rule 38 (function_statement -> function_call .)
    IF              reduce using rule 38 (function_statement -> function_call .)
    PRINT           reduce using rule 38 (function_statement -> function_call .)
    FOR             reduce using rule 38 (function_statement -> function_call .)
    RETURN          reduce using rule 38 (function_statement -> function_call .)
    ARRAY           reduce using rule 38 (function_statement -> function_call .)
    WHILE           reduce using rule 38 (function_statement -> function_call .)
    INT             reduce using rule 38 (function_statement -> function_call .)
    FLOAT           reduce using rule 38 (function_statement -> function_call .)
    STRING          reduce using rule 38 (function_statement -> function_call .)
    BOOLEAN         reduce using rule 38 (function_statement -> function_call .)
    POINT           reduce using rule 38 (function_statement -> function_call .)
    LINE            reduce using rule 38 (function_statement -> function_call .)
    SQUARE          reduce using rule 38 (function_statement -> function_call .)
    RECTANGLE       reduce using rule 38 (function_statement -> function_call .)
    TRIANGLE        reduce using rule 38 (function_statement -> function_call .)
    CIRCLE          reduce using rule 38 (function_statement -> function_call .)
    ARC             reduce using rule 38 (function_statement -> function_call .)


state 85

    (39) function_statement -> vars .

    RCURLY_BRACKET  reduce using rule 39 (function_statement -> vars .)
    ID              reduce using rule 39 (function_statement -> vars .)
    IF              reduce using rule 39 (function_statement -> vars .)
    PRINT           reduce using rule 39 (function_statement -> vars .)
    FOR             reduce using rule 39 (function_statement -> vars .)
    RETURN          reduce using rule 39 (function_statement -> vars .)
    ARRAY           reduce using rule 39 (function_statement -> vars .)
    WHILE           reduce using rule 39 (function_statement -> vars .)
    INT             reduce using rule 39 (function_statement -> vars .)
    FLOAT           reduce using rule 39 (function_statement -> vars .)
    STRING          reduce using rule 39 (function_statement -> vars .)
    BOOLEAN         reduce using rule 39 (function_statement -> vars .)
    POINT           reduce using rule 39 (function_statement -> vars .)
    LINE            reduce using rule 39 (function_statement -> vars .)
    SQUARE          reduce using rule 39 (function_statement -> vars .)
    RECTANGLE       reduce using rule 39 (function_statement -> vars .)
    TRIANGLE        reduce using rule 39 (function_statement -> vars .)
    CIRCLE          reduce using rule 39 (function_statement -> vars .)
    ARC             reduce using rule 39 (function_statement -> vars .)


state 86

    (40) function_statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 40 (function_statement -> while_loop .)
    ID              reduce using rule 40 (function_statement -> while_loop .)
    IF              reduce using rule 40 (function_statement -> while_loop .)
    PRINT           reduce using rule 40 (function_statement -> while_loop .)
    FOR             reduce using rule 40 (function_statement -> while_loop .)
    RETURN          reduce using rule 40 (function_statement -> while_loop .)
    ARRAY           reduce using rule 40 (function_statement -> while_loop .)
    WHILE           reduce using rule 40 (function_statement -> while_loop .)
    INT             reduce using rule 40 (function_statement -> while_loop .)
    FLOAT           reduce using rule 40 (function_statement -> while_loop .)
    STRING          reduce using rule 40 (function_statement -> while_loop .)
    BOOLEAN         reduce using rule 40 (function_statement -> while_loop .)
    POINT           reduce using rule 40 (function_statement -> while_loop .)
    LINE            reduce using rule 40 (function_statement -> while_loop .)
    SQUARE          reduce using rule 40 (function_statement -> while_loop .)
    RECTANGLE       reduce using rule 40 (function_statement -> while_loop .)
    TRIANGLE        reduce using rule 40 (function_statement -> while_loop .)
    CIRCLE          reduce using rule 40 (function_statement -> while_loop .)
    ARC             reduce using rule 40 (function_statement -> while_loop .)


state 87

    (41) function_statement -> draw_figure .

    RCURLY_BRACKET  reduce using rule 41 (function_statement -> draw_figure .)
    ID              reduce using rule 41 (function_statement -> draw_figure .)
    IF              reduce using rule 41 (function_statement -> draw_figure .)
    PRINT           reduce using rule 41 (function_statement -> draw_figure .)
    FOR             reduce using rule 41 (function_statement -> draw_figure .)
    RETURN          reduce using rule 41 (function_statement -> draw_figure .)
    ARRAY           reduce using rule 41 (function_statement -> draw_figure .)
    WHILE           reduce using rule 41 (function_statement -> draw_figure .)
    INT             reduce using rule 41 (function_statement -> draw_figure .)
    FLOAT           reduce using rule 41 (function_statement -> draw_figure .)
    STRING          reduce using rule 41 (function_statement -> draw_figure .)
    BOOLEAN         reduce using rule 41 (function_statement -> draw_figure .)
    POINT           reduce using rule 41 (function_statement -> draw_figure .)
    LINE            reduce using rule 41 (function_statement -> draw_figure .)
    SQUARE          reduce using rule 41 (function_statement -> draw_figure .)
    RECTANGLE       reduce using rule 41 (function_statement -> draw_figure .)
    TRIANGLE        reduce using rule 41 (function_statement -> draw_figure .)
    CIRCLE          reduce using rule 41 (function_statement -> draw_figure .)
    ARC             reduce using rule 41 (function_statement -> draw_figure .)


state 88

    (54) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> ID . push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (69) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (82) function_call -> ID . create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (115) push_varID_to_Stack -> . epsilon
    (87) create_era -> . epsilon
    (137) epsilon -> .

    OP_EQUALS       reduce using rule 137 (epsilon -> .)
    OP_LSQUARE_PAREN reduce using rule 137 (epsilon -> .)
    OP_PLUS_EQUALS  reduce using rule 137 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_LPAREN       reduce using rule 137 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 107
    create_era                     shift and go to state 108
    epsilon                        shift and go to state 109

state 89

    (58) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (59) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_LPAREN       shift and go to state 110


state 90

    (65) printer -> PRINT . OP_LPAREN impression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 111


state 91

    (75) for -> FOR . OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    OP_LPAREN       shift and go to state 112


state 92

    (80) return -> RETURN . mega_expression return_quadruple SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 113
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 93

    (76) while_loop -> WHILE . loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (77) loop_jumpCount -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)

    loop_jumpCount                 shift and go to state 125
    epsilon                        shift and go to state 126

state 94

    (135) draw_figure -> figure . OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 127


state 95

    (124) figure -> POINT .

    OP_LPAREN       reduce using rule 124 (figure -> POINT .)


state 96

    (125) figure -> LINE .

    OP_LPAREN       reduce using rule 125 (figure -> LINE .)


state 97

    (126) figure -> SQUARE .

    OP_LPAREN       reduce using rule 126 (figure -> SQUARE .)


state 98

    (127) figure -> RECTANGLE .

    OP_LPAREN       reduce using rule 127 (figure -> RECTANGLE .)


state 99

    (128) figure -> TRIANGLE .

    OP_LPAREN       reduce using rule 128 (figure -> TRIANGLE .)


state 100

    (129) figure -> CIRCLE .

    OP_LPAREN       reduce using rule 129 (figure -> CIRCLE .)


state 101

    (130) figure -> ARC .

    OP_LPAREN       reduce using rule 130 (figure -> ARC .)


state 102

    (25) function_parameters -> type save_type ID pushTo_varsTable . function_parameters_prime
    (27) function_parameters_prime -> . COMA type save_type ID pushTo_varsTable function_parameters_prime
    (28) function_parameters_prime -> . epsilon
    (137) epsilon -> .

    COMA            shift and go to state 129
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    function_parameters_prime      shift and go to state 128
    epsilon                        shift and go to state 130

state 103

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature . function_bloque add_NumVars function
    (29) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 60

    function_bloque                shift and go to state 131

state 104

    (14) pushTo_functionSignature -> epsilon .

    LCURLY_BRACKET  reduce using rule 14 (pushTo_functionSignature -> epsilon .)


state 105

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature . function_bloque add_NumVars function
    (29) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 60

    function_bloque                shift and go to state 132

state 106

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN . SEMICOLON vars

    SEMICOLON       shift and go to state 133


state 107

    (54) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> ID push_varID_to_Stack . OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (69) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_EQUALS       shift and go to state 134
    OP_LSQUARE_PAREN shift and go to state 135
    OP_PLUS_EQUALS  shift and go to state 136
    OP_MINUS_EQUALS shift and go to state 137
    OP_PLUS         shift and go to state 138
    OP_MINUS        shift and go to state 139


state 108

    (82) function_call -> ID create_era . OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON

    OP_LPAREN       shift and go to state 140


state 109

    (115) push_varID_to_Stack -> epsilon .
    (87) create_era -> epsilon .

    OP_EQUALS       reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_LSQUARE_PAREN reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_DIVISION     reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_TIMES        reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_THAN reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_LESS_THAN    reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    AND             reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OR              reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    SEMICOLON       reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_RPAREN       reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    COMA            reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_LPAREN       reduce using rule 87 (create_era -> epsilon .)


state 110

    (58) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (59) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 141
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 111

    (65) printer -> PRINT OP_LPAREN . impression OP_RPAREN SEMICOLON
    (66) impression -> . mega_expression printer_quadruple
    (67) impression -> . mega_expression printer_quadruple COMA impression
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    impression                     shift and go to state 142
    mega_expression                shift and go to state 143
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 112

    (75) for -> FOR OP_LPAREN . assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (54) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> . ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    ID              shift and go to state 145

    assigment                      shift and go to state 144

state 113

    (80) return -> RETURN mega_expression . return_quadruple SEMICOLON
    (81) return_quadruple -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    return_quadruple               shift and go to state 146
    epsilon                        shift and go to state 147

state 114

    (90) mega_expression -> super_expression . check_symbol_megaexp
    (91) mega_expression -> super_expression . AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> super_expression . OR push_symbol super_expression check_symbol_megaexp
    (93) check_symbol_megaexp -> . epsilon
    (137) epsilon -> .

    AND             shift and go to state 149
    OR              shift and go to state 150
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 148
    epsilon                        shift and go to state 151

state 115

    (94) super_expression -> expression . check_symbol_superexp
    (95) super_expression -> expression . OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> expression . OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> expression . OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> expression . OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> expression . OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> expression . OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    OP_GREATER_THAN shift and go to state 153
    OP_LESS_THAN    shift and go to state 154
    OP_GREATER_EQUALS_THAN shift and go to state 155
    OP_LESS_EQUALS_THAN shift and go to state 156
    OP_EQUALS_TWO   shift and go to state 157
    OP_NOT_EQUALS   shift and go to state 158
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 152
    epsilon                        shift and go to state 159

state 116

    (102) expression -> term . check_symbol_exp
    (103) expression -> term . check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> term . check_symbol_exp OP_MINUS push_symbol expression
    (106) check_symbol_exp -> . epsilon
    (137) epsilon -> .

    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_exp               shift and go to state 160
    epsilon                        shift and go to state 161

state 117

    (107) term -> fact . check_symbol_term
    (108) term -> fact . check_symbol_term OP_DIVISION push_symbol term
    (109) term -> fact . check_symbol_term OP_TIMES push_symbol term
    (110) check_symbol_term -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_term              shift and go to state 162
    epsilon                        shift and go to state 163

state 118

    (111) fact -> var_cte .

    OP_DIVISION     reduce using rule 111 (fact -> var_cte .)
    OP_TIMES        reduce using rule 111 (fact -> var_cte .)
    OP_PLUS         reduce using rule 111 (fact -> var_cte .)
    OP_MINUS        reduce using rule 111 (fact -> var_cte .)
    OP_GREATER_THAN reduce using rule 111 (fact -> var_cte .)
    OP_LESS_THAN    reduce using rule 111 (fact -> var_cte .)
    OP_GREATER_EQUALS_THAN reduce using rule 111 (fact -> var_cte .)
    OP_LESS_EQUALS_THAN reduce using rule 111 (fact -> var_cte .)
    OP_EQUALS_TWO   reduce using rule 111 (fact -> var_cte .)
    OP_NOT_EQUALS   reduce using rule 111 (fact -> var_cte .)
    AND             reduce using rule 111 (fact -> var_cte .)
    OR              reduce using rule 111 (fact -> var_cte .)
    SEMICOLON       reduce using rule 111 (fact -> var_cte .)
    OP_RPAREN       reduce using rule 111 (fact -> var_cte .)
    COMA            reduce using rule 111 (fact -> var_cte .)
    OP_RSQUARE_PAREN reduce using rule 111 (fact -> var_cte .)


state 119

    (112) fact -> OP_LPAREN . push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (116) push_bottle_bottom -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_bottle_bottom             shift and go to state 164
    epsilon                        shift and go to state 165

state 120

    (113) fact -> ID . push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> ID . create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> ID . push_varID_to_Stack
    (115) push_varID_to_Stack -> . epsilon
    (87) create_era -> . epsilon
    (137) epsilon -> .

    OP_LSQUARE_PAREN reduce using rule 137 (epsilon -> .)
    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)
    OP_LPAREN       reduce using rule 137 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 166
    create_era                     shift and go to state 167
    epsilon                        shift and go to state 109

state 121

    (119) var_cte -> VAR_INT . push_cte_toTable
    (123) push_cte_toTable -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    push_cte_toTable               shift and go to state 168
    epsilon                        shift and go to state 169

state 122

    (120) var_cte -> VAR_FLOAT . push_cte_toTable
    (123) push_cte_toTable -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    push_cte_toTable               shift and go to state 170
    epsilon                        shift and go to state 169

state 123

    (121) var_cte -> VAR_STRING . push_cte_toTable
    (123) push_cte_toTable -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    push_cte_toTable               shift and go to state 171
    epsilon                        shift and go to state 169

state 124

    (122) var_cte -> VAR_BOOLEAN . push_cte_toTable
    (123) push_cte_toTable -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    push_cte_toTable               shift and go to state 172
    epsilon                        shift and go to state 169

state 125

    (76) while_loop -> WHILE loop_jumpCount . OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill

    OP_LPAREN       shift and go to state 173


state 126

    (77) loop_jumpCount -> epsilon .

    OP_LPAREN       reduce using rule 77 (loop_jumpCount -> epsilon .)
    ID              reduce using rule 77 (loop_jumpCount -> epsilon .)
    VAR_INT         reduce using rule 77 (loop_jumpCount -> epsilon .)
    VAR_FLOAT       reduce using rule 77 (loop_jumpCount -> epsilon .)
    VAR_STRING      reduce using rule 77 (loop_jumpCount -> epsilon .)
    VAR_BOOLEAN     reduce using rule 77 (loop_jumpCount -> epsilon .)


state 127

    (135) draw_figure -> figure OP_LPAREN . mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 174
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 128

    (25) function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime .

    OP_RPAREN       reduce using rule 25 (function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime .)


state 129

    (27) function_parameters_prime -> COMA . type save_type ID pushTo_varsTable function_parameters_prime
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12

    type                           shift and go to state 175

state 130

    (28) function_parameters_prime -> epsilon .

    OP_RPAREN       reduce using rule 28 (function_parameters_prime -> epsilon .)


state 131

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque . add_NumVars function
    (15) add_NumVars -> . epsilon
    (137) epsilon -> .

    FUNCTION        reduce using rule 137 (epsilon -> .)
    MAIN            reduce using rule 137 (epsilon -> .)

    add_NumVars                    shift and go to state 176
    epsilon                        shift and go to state 177

state 132

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque . add_NumVars function
    (15) add_NumVars -> . epsilon
    (137) epsilon -> .

    FUNCTION        reduce using rule 137 (epsilon -> .)
    MAIN            reduce using rule 137 (epsilon -> .)

    add_NumVars                    shift and go to state 178
    epsilon                        shift and go to state 177

state 133

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON . vars
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
    (4) vars -> . epsilon
    (21) type -> . INT
    (22) type -> . FLOAT
    (23) type -> . STRING
    (24) type -> . BOOLEAN
    (137) epsilon -> .

  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    ARRAY           shift and go to state 7
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11
    BOOLEAN         shift and go to state 12
    FUNCTION        reduce using rule 137 (epsilon -> .)
    MAIN            reduce using rule 137 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

  ! ARRAY           [ reduce using rule 137 (epsilon -> .) ]
  ! INT             [ reduce using rule 137 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 137 (epsilon -> .) ]
  ! STRING          [ reduce using rule 137 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 137 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 179
    epsilon                        shift and go to state 8

state 134

    (54) assigment -> ID push_varID_to_Stack OP_EQUALS . push_symbol mega_expression equals_quadruple SEMICOLON
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 180
    epsilon                        shift and go to state 181

state 135

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN . mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 182
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 136

    (69) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 183
    epsilon                        shift and go to state 181

state 137

    (70) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 184
    epsilon                        shift and go to state 181

state 138

    (71) increment -> ID push_varID_to_Stack OP_PLUS . OP_PLUS incrementByOne SEMICOLON

    OP_PLUS         shift and go to state 185


state 139

    (72) increment -> ID push_varID_to_Stack OP_MINUS . OP_MINUS incrementByOne SEMICOLON

    OP_MINUS        shift and go to state 186


state 140

    (82) function_call -> ID create_era OP_LPAREN . function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (83) function_call_parameters -> . mega_expression create_param function_call_parameters_prime
    (84) function_call_parameters -> . epsilon
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (137) epsilon -> .
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    function_call_parameters       shift and go to state 187
    mega_expression                shift and go to state 188
    epsilon                        shift and go to state 189
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 141

    (58) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (59) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_RPAREN       shift and go to state 190


state 142

    (65) printer -> PRINT OP_LPAREN impression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 191


state 143

    (66) impression -> mega_expression . printer_quadruple
    (67) impression -> mega_expression . printer_quadruple COMA impression
    (68) printer_quadruple -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    printer_quadruple              shift and go to state 192
    epsilon                        shift and go to state 193

state 144

    (75) for -> FOR OP_LPAREN assigment . loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (77) loop_jumpCount -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    loop_jumpCount                 shift and go to state 194
    epsilon                        shift and go to state 126

state 145

    (54) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> ID . push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (115) push_varID_to_Stack -> . epsilon
    (137) epsilon -> .

    OP_EQUALS       reduce using rule 137 (epsilon -> .)
    OP_LSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 195
    epsilon                        shift and go to state 196

state 146

    (80) return -> RETURN mega_expression return_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 197


state 147

    (81) return_quadruple -> epsilon .

    SEMICOLON       reduce using rule 81 (return_quadruple -> epsilon .)


state 148

    (90) mega_expression -> super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 90 (mega_expression -> super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 90 (mega_expression -> super_expression check_symbol_megaexp .)
    COMA            reduce using rule 90 (mega_expression -> super_expression check_symbol_megaexp .)
    OP_RSQUARE_PAREN reduce using rule 90 (mega_expression -> super_expression check_symbol_megaexp .)


state 149

    (91) mega_expression -> super_expression AND . push_symbol super_expression check_symbol_megaexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 198
    epsilon                        shift and go to state 181

state 150

    (92) mega_expression -> super_expression OR . push_symbol super_expression check_symbol_megaexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 199
    epsilon                        shift and go to state 181

state 151

    (93) check_symbol_megaexp -> epsilon .

    SEMICOLON       reduce using rule 93 (check_symbol_megaexp -> epsilon .)
    OP_RPAREN       reduce using rule 93 (check_symbol_megaexp -> epsilon .)
    COMA            reduce using rule 93 (check_symbol_megaexp -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 93 (check_symbol_megaexp -> epsilon .)


state 152

    (94) super_expression -> expression check_symbol_superexp .

    AND             reduce using rule 94 (super_expression -> expression check_symbol_superexp .)
    OR              reduce using rule 94 (super_expression -> expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 94 (super_expression -> expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 94 (super_expression -> expression check_symbol_superexp .)
    COMA            reduce using rule 94 (super_expression -> expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 94 (super_expression -> expression check_symbol_superexp .)


state 153

    (95) super_expression -> expression OP_GREATER_THAN . push_symbol expression check_symbol_superexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 200
    epsilon                        shift and go to state 181

state 154

    (96) super_expression -> expression OP_LESS_THAN . push_symbol expression check_symbol_superexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 201
    epsilon                        shift and go to state 181

state 155

    (97) super_expression -> expression OP_GREATER_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 202
    epsilon                        shift and go to state 181

state 156

    (98) super_expression -> expression OP_LESS_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 203
    epsilon                        shift and go to state 181

state 157

    (99) super_expression -> expression OP_EQUALS_TWO . push_symbol expression check_symbol_superexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 204
    epsilon                        shift and go to state 181

state 158

    (100) super_expression -> expression OP_NOT_EQUALS . push_symbol expression check_symbol_superexp
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 205
    epsilon                        shift and go to state 181

state 159

    (101) check_symbol_superexp -> epsilon .

    AND             reduce using rule 101 (check_symbol_superexp -> epsilon .)
    OR              reduce using rule 101 (check_symbol_superexp -> epsilon .)
    SEMICOLON       reduce using rule 101 (check_symbol_superexp -> epsilon .)
    OP_RPAREN       reduce using rule 101 (check_symbol_superexp -> epsilon .)
    COMA            reduce using rule 101 (check_symbol_superexp -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 101 (check_symbol_superexp -> epsilon .)


state 160

    (102) expression -> term check_symbol_exp .
    (103) expression -> term check_symbol_exp . OP_PLUS push_symbol expression
    (104) expression -> term check_symbol_exp . OP_MINUS push_symbol expression

    OP_GREATER_THAN reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_LESS_THAN    reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_GREATER_EQUALS_THAN reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_LESS_EQUALS_THAN reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_EQUALS_TWO   reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_NOT_EQUALS   reduce using rule 102 (expression -> term check_symbol_exp .)
    AND             reduce using rule 102 (expression -> term check_symbol_exp .)
    OR              reduce using rule 102 (expression -> term check_symbol_exp .)
    SEMICOLON       reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_RPAREN       reduce using rule 102 (expression -> term check_symbol_exp .)
    COMA            reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_RSQUARE_PAREN reduce using rule 102 (expression -> term check_symbol_exp .)
    OP_PLUS         shift and go to state 206
    OP_MINUS        shift and go to state 207


state 161

    (106) check_symbol_exp -> epsilon .

    OP_PLUS         reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_MINUS        reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_GREATER_THAN reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_LESS_THAN    reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 106 (check_symbol_exp -> epsilon .)
    AND             reduce using rule 106 (check_symbol_exp -> epsilon .)
    OR              reduce using rule 106 (check_symbol_exp -> epsilon .)
    SEMICOLON       reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_RPAREN       reduce using rule 106 (check_symbol_exp -> epsilon .)
    COMA            reduce using rule 106 (check_symbol_exp -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 106 (check_symbol_exp -> epsilon .)


state 162

    (107) term -> fact check_symbol_term .
    (108) term -> fact check_symbol_term . OP_DIVISION push_symbol term
    (109) term -> fact check_symbol_term . OP_TIMES push_symbol term

    OP_PLUS         reduce using rule 107 (term -> fact check_symbol_term .)
    OP_MINUS        reduce using rule 107 (term -> fact check_symbol_term .)
    OP_GREATER_THAN reduce using rule 107 (term -> fact check_symbol_term .)
    OP_LESS_THAN    reduce using rule 107 (term -> fact check_symbol_term .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (term -> fact check_symbol_term .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (term -> fact check_symbol_term .)
    OP_EQUALS_TWO   reduce using rule 107 (term -> fact check_symbol_term .)
    OP_NOT_EQUALS   reduce using rule 107 (term -> fact check_symbol_term .)
    AND             reduce using rule 107 (term -> fact check_symbol_term .)
    OR              reduce using rule 107 (term -> fact check_symbol_term .)
    SEMICOLON       reduce using rule 107 (term -> fact check_symbol_term .)
    OP_RPAREN       reduce using rule 107 (term -> fact check_symbol_term .)
    COMA            reduce using rule 107 (term -> fact check_symbol_term .)
    OP_RSQUARE_PAREN reduce using rule 107 (term -> fact check_symbol_term .)
    OP_DIVISION     shift and go to state 208
    OP_TIMES        shift and go to state 209


state 163

    (110) check_symbol_term -> epsilon .

    OP_DIVISION     reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_TIMES        reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_PLUS         reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_MINUS        reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_GREATER_THAN reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_LESS_THAN    reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 110 (check_symbol_term -> epsilon .)
    AND             reduce using rule 110 (check_symbol_term -> epsilon .)
    OR              reduce using rule 110 (check_symbol_term -> epsilon .)
    SEMICOLON       reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_RPAREN       reduce using rule 110 (check_symbol_term -> epsilon .)
    COMA            reduce using rule 110 (check_symbol_term -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 110 (check_symbol_term -> epsilon .)


state 164

    (112) fact -> OP_LPAREN push_bottle_bottom . mega_expression OP_RPAREN remove_bottle_bottom
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 210
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 165

    (116) push_bottle_bottom -> epsilon .

    OP_LPAREN       reduce using rule 116 (push_bottle_bottom -> epsilon .)
    ID              reduce using rule 116 (push_bottle_bottom -> epsilon .)
    VAR_INT         reduce using rule 116 (push_bottle_bottom -> epsilon .)
    VAR_FLOAT       reduce using rule 116 (push_bottle_bottom -> epsilon .)
    VAR_STRING      reduce using rule 116 (push_bottle_bottom -> epsilon .)
    VAR_BOOLEAN     reduce using rule 116 (push_bottle_bottom -> epsilon .)
    OP_RPAREN       reduce using rule 116 (push_bottle_bottom -> epsilon .)


state 166

    (113) fact -> ID push_varID_to_Stack . OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (118) var_cte -> ID push_varID_to_Stack .

    OP_LSQUARE_PAREN shift and go to state 211
    OP_DIVISION     reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_TIMES        reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_PLUS         reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_MINUS        reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_THAN reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_THAN    reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_EQUALS_THAN reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_EQUALS_THAN reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_EQUALS_TWO   reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_NOT_EQUALS   reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    AND             reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OR              reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    SEMICOLON       reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_RPAREN       reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    COMA            reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)
    OP_RSQUARE_PAREN reduce using rule 118 (var_cte -> ID push_varID_to_Stack .)


state 167

    (114) fact -> ID create_era . OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom

    OP_LPAREN       shift and go to state 212


state 168

    (119) var_cte -> VAR_INT push_cte_toTable .

    OP_DIVISION     reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_TIMES        reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_PLUS         reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_MINUS        reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    AND             reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OR              reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    SEMICOLON       reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_RPAREN       reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    COMA            reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)
    OP_RSQUARE_PAREN reduce using rule 119 (var_cte -> VAR_INT push_cte_toTable .)


state 169

    (123) push_cte_toTable -> epsilon .

    OP_DIVISION     reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_TIMES        reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_PLUS         reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_MINUS        reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_GREATER_THAN reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_LESS_THAN    reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 123 (push_cte_toTable -> epsilon .)
    AND             reduce using rule 123 (push_cte_toTable -> epsilon .)
    OR              reduce using rule 123 (push_cte_toTable -> epsilon .)
    SEMICOLON       reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_RPAREN       reduce using rule 123 (push_cte_toTable -> epsilon .)
    COMA            reduce using rule 123 (push_cte_toTable -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 123 (push_cte_toTable -> epsilon .)


state 170

    (120) var_cte -> VAR_FLOAT push_cte_toTable .

    OP_DIVISION     reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_TIMES        reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_PLUS         reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_MINUS        reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    AND             reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OR              reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    SEMICOLON       reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_RPAREN       reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    COMA            reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_RSQUARE_PAREN reduce using rule 120 (var_cte -> VAR_FLOAT push_cte_toTable .)


state 171

    (121) var_cte -> VAR_STRING push_cte_toTable .

    OP_DIVISION     reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_TIMES        reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_PLUS         reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_MINUS        reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    AND             reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OR              reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    SEMICOLON       reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_RPAREN       reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    COMA            reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_RSQUARE_PAREN reduce using rule 121 (var_cte -> VAR_STRING push_cte_toTable .)


state 172

    (122) var_cte -> VAR_BOOLEAN push_cte_toTable .

    OP_DIVISION     reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_TIMES        reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_PLUS         reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_MINUS        reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    AND             reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OR              reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    SEMICOLON       reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_RPAREN       reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    COMA            reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_RSQUARE_PAREN reduce using rule 122 (var_cte -> VAR_BOOLEAN push_cte_toTable .)


state 173

    (76) while_loop -> WHILE loop_jumpCount OP_LPAREN . mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 213
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 174

    (135) draw_figure -> figure OP_LPAREN mega_expression . COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON

    COMA            shift and go to state 214


state 175

    (27) function_parameters_prime -> COMA type . save_type ID pushTo_varsTable function_parameters_prime
    (8) save_type -> . epsilon
    (137) epsilon -> .

    ID              reduce using rule 137 (epsilon -> .)

    save_type                      shift and go to state 215
    epsilon                        shift and go to state 16

state 176

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (12) function -> . epsilon
    (137) epsilon -> .

    FUNCTION        shift and go to state 19
    MAIN            reduce using rule 137 (epsilon -> .)

    function                       shift and go to state 216
    epsilon                        shift and go to state 20

state 177

    (15) add_NumVars -> epsilon .

    FUNCTION        reduce using rule 15 (add_NumVars -> epsilon .)
    MAIN            reduce using rule 15 (add_NumVars -> epsilon .)


state 178

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (12) function -> . epsilon
    (137) epsilon -> .

    FUNCTION        shift and go to state 19
    MAIN            reduce using rule 137 (epsilon -> .)

    function                       shift and go to state 217
    epsilon                        shift and go to state 20

state 179

    (3) vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .

    FUNCTION        reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    MAIN            reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    ID              reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    IF              reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    PRINT           reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    FOR             reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    RETURN          reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    ARRAY           reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    WHILE           reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    INT             reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    FLOAT           reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    STRING          reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    BOOLEAN         reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    POINT           reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    LINE            reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    SQUARE          reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    RECTANGLE       reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    TRIANGLE        reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    CIRCLE          reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)
    ARC             reduce using rule 3 (vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars .)


state 180

    (54) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol . mega_expression equals_quadruple SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 218
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 181

    (105) push_symbol -> epsilon .

    OP_LPAREN       reduce using rule 105 (push_symbol -> epsilon .)
    ID              reduce using rule 105 (push_symbol -> epsilon .)
    VAR_INT         reduce using rule 105 (push_symbol -> epsilon .)
    VAR_FLOAT       reduce using rule 105 (push_symbol -> epsilon .)
    VAR_STRING      reduce using rule 105 (push_symbol -> epsilon .)
    VAR_BOOLEAN     reduce using rule 105 (push_symbol -> epsilon .)


state 182

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression . OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    OP_RSQUARE_PAREN shift and go to state 219


state 183

    (69) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 220
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 184

    (70) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 221
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 185

    (71) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS . incrementByOne SEMICOLON
    (73) incrementByOne -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    incrementByOne                 shift and go to state 222
    epsilon                        shift and go to state 223

state 186

    (72) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS . incrementByOne SEMICOLON
    (73) incrementByOne -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    incrementByOne                 shift and go to state 224
    epsilon                        shift and go to state 223

state 187

    (82) function_call -> ID create_era OP_LPAREN function_call_parameters . OP_RPAREN create_gosub SEMICOLON

    OP_RPAREN       shift and go to state 225


state 188

    (83) function_call_parameters -> mega_expression . create_param function_call_parameters_prime
    (88) create_param -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    create_param                   shift and go to state 226
    epsilon                        shift and go to state 227

state 189

    (84) function_call_parameters -> epsilon .

    OP_RPAREN       reduce using rule 84 (function_call_parameters -> epsilon .)


state 190

    (58) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF1
    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (60) if_gotoF_quadruple -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    if_gotoF_quadruple             shift and go to state 228
    epsilon                        shift and go to state 229

state 191

    (65) printer -> PRINT OP_LPAREN impression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 192

    (66) impression -> mega_expression printer_quadruple .
    (67) impression -> mega_expression printer_quadruple . COMA impression

    OP_RPAREN       reduce using rule 66 (impression -> mega_expression printer_quadruple .)
    COMA            shift and go to state 231


state 193

    (68) printer_quadruple -> epsilon .

    COMA            reduce using rule 68 (printer_quadruple -> epsilon .)
    OP_RPAREN       reduce using rule 68 (printer_quadruple -> epsilon .)


state 194

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount . mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 232
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 195

    (54) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> ID push_varID_to_Stack . OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    OP_EQUALS       shift and go to state 134
    OP_LSQUARE_PAREN shift and go to state 135


state 196

    (115) push_varID_to_Stack -> epsilon .

    OP_EQUALS       reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_LSQUARE_PAREN reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 115 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 115 (push_varID_to_Stack -> epsilon .)


state 197

    (80) return -> RETURN mega_expression return_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    ID              reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    IF              reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    PRINT           reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FOR             reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    RETURN          reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    ARRAY           reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    WHILE           reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    INT             reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FLOAT           reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    STRING          reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    POINT           reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    LINE            reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    SQUARE          reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    RECTANGLE       reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    TRIANGLE        reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    CIRCLE          reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    ARC             reduce using rule 80 (return -> RETURN mega_expression return_quadruple SEMICOLON .)


state 198

    (91) mega_expression -> super_expression AND push_symbol . super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    super_expression               shift and go to state 233
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 199

    (92) mega_expression -> super_expression OR push_symbol . super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    super_expression               shift and go to state 234
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 200

    (95) super_expression -> expression OP_GREATER_THAN push_symbol . expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    expression                     shift and go to state 235
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 201

    (96) super_expression -> expression OP_LESS_THAN push_symbol . expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    expression                     shift and go to state 236
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 202

    (97) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    expression                     shift and go to state 237
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 203

    (98) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    expression                     shift and go to state 238
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 204

    (99) super_expression -> expression OP_EQUALS_TWO push_symbol . expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    expression                     shift and go to state 239
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 205

    (100) super_expression -> expression OP_NOT_EQUALS push_symbol . expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    expression                     shift and go to state 240
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 206

    (103) expression -> term check_symbol_exp OP_PLUS . push_symbol expression
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 241
    epsilon                        shift and go to state 181

state 207

    (104) expression -> term check_symbol_exp OP_MINUS . push_symbol expression
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 242
    epsilon                        shift and go to state 181

state 208

    (108) term -> fact check_symbol_term OP_DIVISION . push_symbol term
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 243
    epsilon                        shift and go to state 181

state 209

    (109) term -> fact check_symbol_term OP_TIMES . push_symbol term
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 244
    epsilon                        shift and go to state 181

state 210

    (112) fact -> OP_LPAREN push_bottle_bottom mega_expression . OP_RPAREN remove_bottle_bottom

    OP_RPAREN       shift and go to state 245


state 211

    (113) fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN . push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (116) push_bottle_bottom -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_bottle_bottom             shift and go to state 246
    epsilon                        shift and go to state 165

state 212

    (114) fact -> ID create_era OP_LPAREN . push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (116) push_bottle_bottom -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    push_bottle_bottom             shift and go to state 247
    epsilon                        shift and go to state 165

state 213

    (76) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression . OP_RPAREN loop_gotoF bloque loop_fill

    OP_RPAREN       shift and go to state 248


state 214

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA . mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 249
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 215

    (27) function_parameters_prime -> COMA type save_type . ID pushTo_varsTable function_parameters_prime

    ID              shift and go to state 250


state 216

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .

    MAIN            reduce using rule 10 (function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .)


state 217

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .

    MAIN            reduce using rule 11 (function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .)


state 218

    (54) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression . equals_quadruple SEMICOLON
    (57) equals_quadruple -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    equals_quadruple               shift and go to state 251
    epsilon                        shift and go to state 252

state 219

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN . ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (56) ver_quadruples -> . epsilon
    (137) epsilon -> .

    OP_EQUALS       reduce using rule 137 (epsilon -> .)

    ver_quadruples                 shift and go to state 253
    epsilon                        shift and go to state 254

state 220

    (69) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (74) increment_equals -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    increment_equals               shift and go to state 255
    epsilon                        shift and go to state 256

state 221

    (70) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (74) increment_equals -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    increment_equals               shift and go to state 257
    epsilon                        shift and go to state 256

state 222

    (71) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 258


state 223

    (73) incrementByOne -> epsilon .

    SEMICOLON       reduce using rule 73 (incrementByOne -> epsilon .)


state 224

    (72) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 259


state 225

    (82) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN . create_gosub SEMICOLON
    (89) create_gosub -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    create_gosub                   shift and go to state 260
    epsilon                        shift and go to state 261

state 226

    (83) function_call_parameters -> mega_expression create_param . function_call_parameters_prime
    (85) function_call_parameters_prime -> . COMA mega_expression create_param function_call_parameters_prime
    (86) function_call_parameters_prime -> . epsilon
    (137) epsilon -> .

    COMA            shift and go to state 263
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    function_call_parameters_prime shift and go to state 262
    epsilon                        shift and go to state 264

state 227

    (88) create_param -> epsilon .

    COMA            reduce using rule 88 (create_param -> epsilon .)
    OP_RPAREN       reduce using rule 88 (create_param -> epsilon .)


state 228

    (58) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF1
    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (42) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 266

    bloque                         shift and go to state 265

state 229

    (60) if_gotoF_quadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 60 (if_gotoF_quadruple -> epsilon .)


state 230

    (65) printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ID              reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    IF              reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ARRAY           reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    INT             reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    POINT           reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    LINE            reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ARC             reduce using rule 65 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)


state 231

    (67) impression -> mega_expression printer_quadruple COMA . impression
    (66) impression -> . mega_expression printer_quadruple
    (67) impression -> . mega_expression printer_quadruple COMA impression
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 143
    impression                     shift and go to state 267
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 232

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression . SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    SEMICOLON       shift and go to state 268


state 233

    (91) mega_expression -> super_expression AND push_symbol super_expression . check_symbol_megaexp
    (93) check_symbol_megaexp -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 269
    epsilon                        shift and go to state 151

state 234

    (92) mega_expression -> super_expression OR push_symbol super_expression . check_symbol_megaexp
    (93) check_symbol_megaexp -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 270
    epsilon                        shift and go to state 151

state 235

    (95) super_expression -> expression OP_GREATER_THAN push_symbol expression . check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 271
    epsilon                        shift and go to state 159

state 236

    (96) super_expression -> expression OP_LESS_THAN push_symbol expression . check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 272
    epsilon                        shift and go to state 159

state 237

    (97) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 273
    epsilon                        shift and go to state 159

state 238

    (98) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 274
    epsilon                        shift and go to state 159

state 239

    (99) super_expression -> expression OP_EQUALS_TWO push_symbol expression . check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 275
    epsilon                        shift and go to state 159

state 240

    (100) super_expression -> expression OP_NOT_EQUALS push_symbol expression . check_symbol_superexp
    (101) check_symbol_superexp -> . epsilon
    (137) epsilon -> .

    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    check_symbol_superexp          shift and go to state 276
    epsilon                        shift and go to state 159

state 241

    (103) expression -> term check_symbol_exp OP_PLUS push_symbol . expression
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    term                           shift and go to state 116
    expression                     shift and go to state 277
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 242

    (104) expression -> term check_symbol_exp OP_MINUS push_symbol . expression
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    term                           shift and go to state 116
    expression                     shift and go to state 278
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 243

    (108) term -> fact check_symbol_term OP_DIVISION push_symbol . term
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    fact                           shift and go to state 117
    term                           shift and go to state 279
    var_cte                        shift and go to state 118

state 244

    (109) term -> fact check_symbol_term OP_TIMES push_symbol . term
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    fact                           shift and go to state 117
    term                           shift and go to state 280
    var_cte                        shift and go to state 118

state 245

    (112) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN . remove_bottle_bottom
    (117) remove_bottle_bottom -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 281
    epsilon                        shift and go to state 282

state 246

    (113) fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom . mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 283
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 247

    (114) fact -> ID create_era OP_LPAREN push_bottle_bottom . function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (83) function_call_parameters -> . mega_expression create_param function_call_parameters_prime
    (84) function_call_parameters -> . epsilon
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (137) epsilon -> .
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    function_call_parameters       shift and go to state 284
    mega_expression                shift and go to state 188
    epsilon                        shift and go to state 189
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 248

    (76) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN . loop_gotoF bloque loop_fill
    (78) loop_gotoF -> . epsilon
    (137) epsilon -> .

    LCURLY_BRACKET  reduce using rule 137 (epsilon -> .)

    loop_gotoF                     shift and go to state 285
    epsilon                        shift and go to state 286

state 249

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression . COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON

    COMA            shift and go to state 287


state 250

    (27) function_parameters_prime -> COMA type save_type ID . pushTo_varsTable function_parameters_prime
    (7) pushTo_varsTable -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    pushTo_varsTable               shift and go to state 288
    epsilon                        shift and go to state 28

state 251

    (54) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 289


state 252

    (57) equals_quadruple -> epsilon .

    SEMICOLON       reduce using rule 57 (equals_quadruple -> epsilon .)


state 253

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    OP_EQUALS       shift and go to state 290


state 254

    (56) ver_quadruples -> epsilon .

    OP_EQUALS       reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_DIVISION     reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_TIMES        reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_PLUS         reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_MINUS        reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_GREATER_THAN reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_LESS_THAN    reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 56 (ver_quadruples -> epsilon .)
    AND             reduce using rule 56 (ver_quadruples -> epsilon .)
    OR              reduce using rule 56 (ver_quadruples -> epsilon .)
    SEMICOLON       reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_RPAREN       reduce using rule 56 (ver_quadruples -> epsilon .)
    COMA            reduce using rule 56 (ver_quadruples -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 56 (ver_quadruples -> epsilon .)


state 255

    (69) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 291


state 256

    (74) increment_equals -> epsilon .

    SEMICOLON       reduce using rule 74 (increment_equals -> epsilon .)


state 257

    (70) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 292


state 258

    (71) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    ID              reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    IF              reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    ARRAY           reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    INT             reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    POINT           reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    LINE            reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    SQUARE          reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    RECTANGLE       reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    TRIANGLE        reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    CIRCLE          reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    ARC             reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 71 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)


state 259

    (72) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    ID              reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    IF              reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    ARRAY           reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    INT             reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    POINT           reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    LINE            reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    SQUARE          reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    RECTANGLE       reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    TRIANGLE        reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    CIRCLE          reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    ARC             reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 72 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)


state 260

    (82) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub . SEMICOLON

    SEMICOLON       shift and go to state 293


state 261

    (89) create_gosub -> epsilon .

    SEMICOLON       reduce using rule 89 (create_gosub -> epsilon .)
    OP_DIVISION     reduce using rule 89 (create_gosub -> epsilon .)
    OP_TIMES        reduce using rule 89 (create_gosub -> epsilon .)
    OP_PLUS         reduce using rule 89 (create_gosub -> epsilon .)
    OP_MINUS        reduce using rule 89 (create_gosub -> epsilon .)
    OP_GREATER_THAN reduce using rule 89 (create_gosub -> epsilon .)
    OP_LESS_THAN    reduce using rule 89 (create_gosub -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 89 (create_gosub -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 89 (create_gosub -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 89 (create_gosub -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 89 (create_gosub -> epsilon .)
    AND             reduce using rule 89 (create_gosub -> epsilon .)
    OR              reduce using rule 89 (create_gosub -> epsilon .)
    OP_RPAREN       reduce using rule 89 (create_gosub -> epsilon .)
    COMA            reduce using rule 89 (create_gosub -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 89 (create_gosub -> epsilon .)


state 262

    (83) function_call_parameters -> mega_expression create_param function_call_parameters_prime .

    OP_RPAREN       reduce using rule 83 (function_call_parameters -> mega_expression create_param function_call_parameters_prime .)


state 263

    (85) function_call_parameters_prime -> COMA . mega_expression create_param function_call_parameters_prime
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 294
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 264

    (86) function_call_parameters_prime -> epsilon .

    OP_RPAREN       reduce using rule 86 (function_call_parameters_prime -> epsilon .)


state 265

    (58) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF1
    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (61) fill_if_gotoF1 -> . epsilon
    (62) fill_if_gotoF2 -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    ARRAY           reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    INT             reduce using rule 137 (epsilon -> .)
    FLOAT           reduce using rule 137 (epsilon -> .)
    STRING          reduce using rule 137 (epsilon -> .)
    BOOLEAN         reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)
    ELSE            reduce using rule 137 (epsilon -> .)

    fill_if_gotoF1                 shift and go to state 295
    fill_if_gotoF2                 shift and go to state 296
    epsilon                        shift and go to state 297

state 266

    (42) bloque -> LCURLY_BRACKET . bloque_primo RCURLY_BRACKET
    (43) bloque_primo -> . bloque_primo statement
    (44) bloque_primo -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

    bloque_primo                   shift and go to state 298
    epsilon                        shift and go to state 299

state 267

    (67) impression -> mega_expression printer_quadruple COMA impression .

    OP_RPAREN       reduce using rule 67 (impression -> mega_expression printer_quadruple COMA impression .)


state 268

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON . loop_gotoF increment OP_RPAREN bloque loop_fill
    (78) loop_gotoF -> . epsilon
    (137) epsilon -> .

    ID              reduce using rule 137 (epsilon -> .)

    loop_gotoF                     shift and go to state 300
    epsilon                        shift and go to state 286

state 269

    (91) mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 91 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 91 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 91 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    OP_RSQUARE_PAREN reduce using rule 91 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)


state 270

    (92) mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 92 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 92 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 92 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    OP_RSQUARE_PAREN reduce using rule 92 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)


state 271

    (95) super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 95 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 95 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 95 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 95 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 95 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 95 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)


state 272

    (96) super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 96 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 96 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 96 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 96 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 96 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 96 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)


state 273

    (97) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 97 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 97 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 97 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 97 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 97 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 97 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 274

    (98) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 98 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 98 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 98 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 98 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 98 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 98 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 275

    (99) super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .

    AND             reduce using rule 99 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 99 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 99 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 99 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 99 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 99 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)


state 276

    (100) super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .

    AND             reduce using rule 100 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 100 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 100 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 100 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 100 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OP_RSQUARE_PAREN reduce using rule 100 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)


state 277

    (103) expression -> term check_symbol_exp OP_PLUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    AND             reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OR              reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    SEMICOLON       reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_RPAREN       reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    COMA            reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_RSQUARE_PAREN reduce using rule 103 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)


state 278

    (104) expression -> term check_symbol_exp OP_MINUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    AND             reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OR              reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    SEMICOLON       reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_RPAREN       reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    COMA            reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_RSQUARE_PAREN reduce using rule 104 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)


state 279

    (108) term -> fact check_symbol_term OP_DIVISION push_symbol term .

    OP_PLUS         reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_MINUS        reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_THAN reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_THAN    reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    AND             reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OR              reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    SEMICOLON       reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_RPAREN       reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    COMA            reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_RSQUARE_PAREN reduce using rule 108 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)


state 280

    (109) term -> fact check_symbol_term OP_TIMES push_symbol term .

    OP_PLUS         reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_MINUS        reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_THAN reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_THAN    reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    AND             reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OR              reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    SEMICOLON       reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_RPAREN       reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    COMA            reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_RSQUARE_PAREN reduce using rule 109 (term -> fact check_symbol_term OP_TIMES push_symbol term .)


state 281

    (112) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .

    OP_DIVISION     reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_TIMES        reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_PLUS         reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_MINUS        reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    AND             reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OR              reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    SEMICOLON       reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    COMA            reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_RSQUARE_PAREN reduce using rule 112 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)


state 282

    (117) remove_bottle_bottom -> epsilon .

    OP_DIVISION     reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_TIMES        reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_PLUS         reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_MINUS        reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_THAN reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_LESS_THAN    reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    AND             reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OR              reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    SEMICOLON       reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_RPAREN       reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    COMA            reduce using rule 117 (remove_bottle_bottom -> epsilon .)
    OP_RSQUARE_PAREN reduce using rule 117 (remove_bottle_bottom -> epsilon .)


state 283

    (113) fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression . OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom

    OP_RSQUARE_PAREN shift and go to state 301


state 284

    (114) fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters . OP_RPAREN create_gosub remove_bottle_bottom

    OP_RPAREN       shift and go to state 302


state 285

    (76) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF . bloque loop_fill
    (42) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 266

    bloque                         shift and go to state 303

state 286

    (78) loop_gotoF -> epsilon .

    LCURLY_BRACKET  reduce using rule 78 (loop_gotoF -> epsilon .)
    ID              reduce using rule 78 (loop_gotoF -> epsilon .)


state 287

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA . mega_expression figure_quadruple OP_RPAREN SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 304
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 288

    (27) function_parameters_prime -> COMA type save_type ID pushTo_varsTable . function_parameters_prime
    (27) function_parameters_prime -> . COMA type save_type ID pushTo_varsTable function_parameters_prime
    (28) function_parameters_prime -> . epsilon
    (137) epsilon -> .

    COMA            shift and go to state 129
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    function_parameters_prime      shift and go to state 305
    epsilon                        shift and go to state 130

state 289

    (54) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ID              reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    IF              reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    PRINT           reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FOR             reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RETURN          reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ARRAY           reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    WHILE           reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    INT             reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FLOAT           reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    STRING          reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    POINT           reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    LINE            reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    SQUARE          reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RECTANGLE       reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    TRIANGLE        reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    CIRCLE          reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ARC             reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    OP_LPAREN       reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_INT         reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_FLOAT       reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_STRING      reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 54 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)


state 290

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS . push_symbol mega_expression equals_quadruple SEMICOLON
    (105) push_symbol -> . epsilon
    (137) epsilon -> .

    OP_LPAREN       reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    VAR_INT         reduce using rule 137 (epsilon -> .)
    VAR_FLOAT       reduce using rule 137 (epsilon -> .)
    VAR_STRING      reduce using rule 137 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 137 (epsilon -> .)

    push_symbol                    shift and go to state 306
    epsilon                        shift and go to state 181

state 291

    (69) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ARRAY           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    POINT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    LINE            reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    SQUARE          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RECTANGLE       reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    TRIANGLE        reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    CIRCLE          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ARC             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 69 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 292

    (70) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ARRAY           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    POINT           reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    LINE            reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    SQUARE          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RECTANGLE       reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    TRIANGLE        reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    CIRCLE          reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ARC             reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 70 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 293

    (82) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .

    RCURLY_BRACKET  reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    ID              reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    IF              reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    PRINT           reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FOR             reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    RETURN          reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    ARRAY           reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    WHILE           reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    INT             reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FLOAT           reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    STRING          reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    BOOLEAN         reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    POINT           reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    LINE            reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    SQUARE          reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    RECTANGLE       reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    TRIANGLE        reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    CIRCLE          reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    ARC             reduce using rule 82 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)


state 294

    (85) function_call_parameters_prime -> COMA mega_expression . create_param function_call_parameters_prime
    (88) create_param -> . epsilon
    (137) epsilon -> .

    COMA            reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    create_param                   shift and go to state 307
    epsilon                        shift and go to state 227

state 295

    (58) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .

    RCURLY_BRACKET  reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    ID              reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    IF              reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    PRINT           reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FOR             reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    RETURN          reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    ARRAY           reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    WHILE           reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    INT             reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FLOAT           reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    STRING          reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    BOOLEAN         reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    POINT           reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    LINE            reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    SQUARE          reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    RECTANGLE       reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    TRIANGLE        reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    CIRCLE          reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    ARC             reduce using rule 58 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)


state 296

    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 . if_goto_quadruple ELSE bloque fill_if_goto
    (64) if_goto_quadruple -> . epsilon
    (137) epsilon -> .

    ELSE            reduce using rule 137 (epsilon -> .)

    if_goto_quadruple              shift and go to state 308
    epsilon                        shift and go to state 309

state 297

    (61) fill_if_gotoF1 -> epsilon .
    (62) fill_if_gotoF2 -> epsilon .

    RCURLY_BRACKET  reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    ID              reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    IF              reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    PRINT           reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    FOR             reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    RETURN          reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    ARRAY           reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    WHILE           reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    INT             reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    FLOAT           reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    STRING          reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    BOOLEAN         reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    POINT           reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    LINE            reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    SQUARE          reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    RECTANGLE       reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    TRIANGLE        reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    CIRCLE          reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    ARC             reduce using rule 61 (fill_if_gotoF1 -> epsilon .)
    ELSE            reduce using rule 62 (fill_if_gotoF2 -> epsilon .)


state 298

    (42) bloque -> LCURLY_BRACKET bloque_primo . RCURLY_BRACKET
    (43) bloque_primo -> bloque_primo . statement
    (45) statement -> . assigment
    (46) statement -> . if
    (47) statement -> . printer
    (48) statement -> . increment
    (49) statement -> . for
    (50) statement -> . return
    (51) statement -> . function_call
    (52) statement -> . while_loop
    (53) statement -> . draw_figure
    (54) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (55) assigment -> . ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (58) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (59) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (65) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (75) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (80) return -> . RETURN mega_expression return_quadruple SEMICOLON
    (82) function_call -> . ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (76) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (135) draw_figure -> . figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON
    (124) figure -> . POINT
    (125) figure -> . LINE
    (126) figure -> . SQUARE
    (127) figure -> . RECTANGLE
    (128) figure -> . TRIANGLE
    (129) figure -> . CIRCLE
    (130) figure -> . ARC

    RCURLY_BRACKET  shift and go to state 310
    ID              shift and go to state 88
    IF              shift and go to state 89
    PRINT           shift and go to state 90
    FOR             shift and go to state 91
    RETURN          shift and go to state 92
    WHILE           shift and go to state 93
    POINT           shift and go to state 95
    LINE            shift and go to state 96
    SQUARE          shift and go to state 97
    RECTANGLE       shift and go to state 98
    TRIANGLE        shift and go to state 99
    CIRCLE          shift and go to state 100
    ARC             shift and go to state 101

    statement                      shift and go to state 311
    assigment                      shift and go to state 312
    if                             shift and go to state 313
    printer                        shift and go to state 314
    increment                      shift and go to state 315
    for                            shift and go to state 316
    return                         shift and go to state 317
    function_call                  shift and go to state 318
    while_loop                     shift and go to state 319
    draw_figure                    shift and go to state 320
    figure                         shift and go to state 94

state 299

    (44) bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 44 (bloque_primo -> epsilon .)
    ID              reduce using rule 44 (bloque_primo -> epsilon .)
    IF              reduce using rule 44 (bloque_primo -> epsilon .)
    PRINT           reduce using rule 44 (bloque_primo -> epsilon .)
    FOR             reduce using rule 44 (bloque_primo -> epsilon .)
    RETURN          reduce using rule 44 (bloque_primo -> epsilon .)
    WHILE           reduce using rule 44 (bloque_primo -> epsilon .)
    POINT           reduce using rule 44 (bloque_primo -> epsilon .)
    LINE            reduce using rule 44 (bloque_primo -> epsilon .)
    SQUARE          reduce using rule 44 (bloque_primo -> epsilon .)
    RECTANGLE       reduce using rule 44 (bloque_primo -> epsilon .)
    TRIANGLE        reduce using rule 44 (bloque_primo -> epsilon .)
    CIRCLE          reduce using rule 44 (bloque_primo -> epsilon .)
    ARC             reduce using rule 44 (bloque_primo -> epsilon .)


state 300

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF . increment OP_RPAREN bloque loop_fill
    (69) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON

    ID              shift and go to state 322

    increment                      shift and go to state 321

state 301

    (113) fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN . ver_quadruples remove_bottle_bottom
    (56) ver_quadruples -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    ver_quadruples                 shift and go to state 323
    epsilon                        shift and go to state 254

state 302

    (114) fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN . create_gosub remove_bottle_bottom
    (89) create_gosub -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    create_gosub                   shift and go to state 324
    epsilon                        shift and go to state 261

state 303

    (76) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque . loop_fill
    (79) loop_fill -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    ARRAY           reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    INT             reduce using rule 137 (epsilon -> .)
    FLOAT           reduce using rule 137 (epsilon -> .)
    STRING          reduce using rule 137 (epsilon -> .)
    BOOLEAN         reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

    loop_fill                      shift and go to state 325
    epsilon                        shift and go to state 326

state 304

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression . figure_quadruple OP_RPAREN SEMICOLON
    (136) figure_quadruple -> . epsilon
    (137) epsilon -> .

    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    figure_quadruple               shift and go to state 327
    epsilon                        shift and go to state 328

state 305

    (27) function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime .

    OP_RPAREN       reduce using rule 27 (function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime .)


state 306

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol . mega_expression equals_quadruple SEMICOLON
    (90) mega_expression -> . super_expression check_symbol_megaexp
    (91) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (92) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (94) super_expression -> . expression check_symbol_superexp
    (95) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (98) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (99) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (100) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (102) expression -> . term check_symbol_exp
    (103) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (104) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (107) term -> . fact check_symbol_term
    (108) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (109) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (111) fact -> . var_cte
    (112) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) fact -> . ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
    (114) fact -> . ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
    (118) var_cte -> . ID push_varID_to_Stack
    (119) var_cte -> . VAR_INT push_cte_toTable
    (120) var_cte -> . VAR_FLOAT push_cte_toTable
    (121) var_cte -> . VAR_STRING push_cte_toTable
    (122) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 119
    ID              shift and go to state 120
    VAR_INT         shift and go to state 121
    VAR_FLOAT       shift and go to state 122
    VAR_STRING      shift and go to state 123
    VAR_BOOLEAN     shift and go to state 124

    mega_expression                shift and go to state 329
    super_expression               shift and go to state 114
    expression                     shift and go to state 115
    term                           shift and go to state 116
    fact                           shift and go to state 117
    var_cte                        shift and go to state 118

state 307

    (85) function_call_parameters_prime -> COMA mega_expression create_param . function_call_parameters_prime
    (85) function_call_parameters_prime -> . COMA mega_expression create_param function_call_parameters_prime
    (86) function_call_parameters_prime -> . epsilon
    (137) epsilon -> .

    COMA            shift and go to state 263
    OP_RPAREN       reduce using rule 137 (epsilon -> .)

    function_call_parameters_prime shift and go to state 330
    epsilon                        shift and go to state 264

state 308

    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple . ELSE bloque fill_if_goto

    ELSE            shift and go to state 331


state 309

    (64) if_goto_quadruple -> epsilon .

    ELSE            reduce using rule 64 (if_goto_quadruple -> epsilon .)


state 310

    (42) bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .

    ELSE            reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RCURLY_BRACKET  reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ID              reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    IF              reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FOR             reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ARRAY           reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    INT             reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    STRING          reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    POINT           reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    LINE            reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    SQUARE          reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RECTANGLE       reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    TRIANGLE        reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    CIRCLE          reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ARC             reduce using rule 42 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)


state 311

    (43) bloque_primo -> bloque_primo statement .

    RCURLY_BRACKET  reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    ID              reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    IF              reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    PRINT           reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    FOR             reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    RETURN          reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    WHILE           reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    POINT           reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    LINE            reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    SQUARE          reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    RECTANGLE       reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    TRIANGLE        reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    CIRCLE          reduce using rule 43 (bloque_primo -> bloque_primo statement .)
    ARC             reduce using rule 43 (bloque_primo -> bloque_primo statement .)


state 312

    (45) statement -> assigment .

    RCURLY_BRACKET  reduce using rule 45 (statement -> assigment .)
    ID              reduce using rule 45 (statement -> assigment .)
    IF              reduce using rule 45 (statement -> assigment .)
    PRINT           reduce using rule 45 (statement -> assigment .)
    FOR             reduce using rule 45 (statement -> assigment .)
    RETURN          reduce using rule 45 (statement -> assigment .)
    WHILE           reduce using rule 45 (statement -> assigment .)
    POINT           reduce using rule 45 (statement -> assigment .)
    LINE            reduce using rule 45 (statement -> assigment .)
    SQUARE          reduce using rule 45 (statement -> assigment .)
    RECTANGLE       reduce using rule 45 (statement -> assigment .)
    TRIANGLE        reduce using rule 45 (statement -> assigment .)
    CIRCLE          reduce using rule 45 (statement -> assigment .)
    ARC             reduce using rule 45 (statement -> assigment .)


state 313

    (46) statement -> if .

    RCURLY_BRACKET  reduce using rule 46 (statement -> if .)
    ID              reduce using rule 46 (statement -> if .)
    IF              reduce using rule 46 (statement -> if .)
    PRINT           reduce using rule 46 (statement -> if .)
    FOR             reduce using rule 46 (statement -> if .)
    RETURN          reduce using rule 46 (statement -> if .)
    WHILE           reduce using rule 46 (statement -> if .)
    POINT           reduce using rule 46 (statement -> if .)
    LINE            reduce using rule 46 (statement -> if .)
    SQUARE          reduce using rule 46 (statement -> if .)
    RECTANGLE       reduce using rule 46 (statement -> if .)
    TRIANGLE        reduce using rule 46 (statement -> if .)
    CIRCLE          reduce using rule 46 (statement -> if .)
    ARC             reduce using rule 46 (statement -> if .)


state 314

    (47) statement -> printer .

    RCURLY_BRACKET  reduce using rule 47 (statement -> printer .)
    ID              reduce using rule 47 (statement -> printer .)
    IF              reduce using rule 47 (statement -> printer .)
    PRINT           reduce using rule 47 (statement -> printer .)
    FOR             reduce using rule 47 (statement -> printer .)
    RETURN          reduce using rule 47 (statement -> printer .)
    WHILE           reduce using rule 47 (statement -> printer .)
    POINT           reduce using rule 47 (statement -> printer .)
    LINE            reduce using rule 47 (statement -> printer .)
    SQUARE          reduce using rule 47 (statement -> printer .)
    RECTANGLE       reduce using rule 47 (statement -> printer .)
    TRIANGLE        reduce using rule 47 (statement -> printer .)
    CIRCLE          reduce using rule 47 (statement -> printer .)
    ARC             reduce using rule 47 (statement -> printer .)


state 315

    (48) statement -> increment .

    RCURLY_BRACKET  reduce using rule 48 (statement -> increment .)
    ID              reduce using rule 48 (statement -> increment .)
    IF              reduce using rule 48 (statement -> increment .)
    PRINT           reduce using rule 48 (statement -> increment .)
    FOR             reduce using rule 48 (statement -> increment .)
    RETURN          reduce using rule 48 (statement -> increment .)
    WHILE           reduce using rule 48 (statement -> increment .)
    POINT           reduce using rule 48 (statement -> increment .)
    LINE            reduce using rule 48 (statement -> increment .)
    SQUARE          reduce using rule 48 (statement -> increment .)
    RECTANGLE       reduce using rule 48 (statement -> increment .)
    TRIANGLE        reduce using rule 48 (statement -> increment .)
    CIRCLE          reduce using rule 48 (statement -> increment .)
    ARC             reduce using rule 48 (statement -> increment .)


state 316

    (49) statement -> for .

    RCURLY_BRACKET  reduce using rule 49 (statement -> for .)
    ID              reduce using rule 49 (statement -> for .)
    IF              reduce using rule 49 (statement -> for .)
    PRINT           reduce using rule 49 (statement -> for .)
    FOR             reduce using rule 49 (statement -> for .)
    RETURN          reduce using rule 49 (statement -> for .)
    WHILE           reduce using rule 49 (statement -> for .)
    POINT           reduce using rule 49 (statement -> for .)
    LINE            reduce using rule 49 (statement -> for .)
    SQUARE          reduce using rule 49 (statement -> for .)
    RECTANGLE       reduce using rule 49 (statement -> for .)
    TRIANGLE        reduce using rule 49 (statement -> for .)
    CIRCLE          reduce using rule 49 (statement -> for .)
    ARC             reduce using rule 49 (statement -> for .)


state 317

    (50) statement -> return .

    RCURLY_BRACKET  reduce using rule 50 (statement -> return .)
    ID              reduce using rule 50 (statement -> return .)
    IF              reduce using rule 50 (statement -> return .)
    PRINT           reduce using rule 50 (statement -> return .)
    FOR             reduce using rule 50 (statement -> return .)
    RETURN          reduce using rule 50 (statement -> return .)
    WHILE           reduce using rule 50 (statement -> return .)
    POINT           reduce using rule 50 (statement -> return .)
    LINE            reduce using rule 50 (statement -> return .)
    SQUARE          reduce using rule 50 (statement -> return .)
    RECTANGLE       reduce using rule 50 (statement -> return .)
    TRIANGLE        reduce using rule 50 (statement -> return .)
    CIRCLE          reduce using rule 50 (statement -> return .)
    ARC             reduce using rule 50 (statement -> return .)


state 318

    (51) statement -> function_call .

    RCURLY_BRACKET  reduce using rule 51 (statement -> function_call .)
    ID              reduce using rule 51 (statement -> function_call .)
    IF              reduce using rule 51 (statement -> function_call .)
    PRINT           reduce using rule 51 (statement -> function_call .)
    FOR             reduce using rule 51 (statement -> function_call .)
    RETURN          reduce using rule 51 (statement -> function_call .)
    WHILE           reduce using rule 51 (statement -> function_call .)
    POINT           reduce using rule 51 (statement -> function_call .)
    LINE            reduce using rule 51 (statement -> function_call .)
    SQUARE          reduce using rule 51 (statement -> function_call .)
    RECTANGLE       reduce using rule 51 (statement -> function_call .)
    TRIANGLE        reduce using rule 51 (statement -> function_call .)
    CIRCLE          reduce using rule 51 (statement -> function_call .)
    ARC             reduce using rule 51 (statement -> function_call .)


state 319

    (52) statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 52 (statement -> while_loop .)
    ID              reduce using rule 52 (statement -> while_loop .)
    IF              reduce using rule 52 (statement -> while_loop .)
    PRINT           reduce using rule 52 (statement -> while_loop .)
    FOR             reduce using rule 52 (statement -> while_loop .)
    RETURN          reduce using rule 52 (statement -> while_loop .)
    WHILE           reduce using rule 52 (statement -> while_loop .)
    POINT           reduce using rule 52 (statement -> while_loop .)
    LINE            reduce using rule 52 (statement -> while_loop .)
    SQUARE          reduce using rule 52 (statement -> while_loop .)
    RECTANGLE       reduce using rule 52 (statement -> while_loop .)
    TRIANGLE        reduce using rule 52 (statement -> while_loop .)
    CIRCLE          reduce using rule 52 (statement -> while_loop .)
    ARC             reduce using rule 52 (statement -> while_loop .)


state 320

    (53) statement -> draw_figure .

    RCURLY_BRACKET  reduce using rule 53 (statement -> draw_figure .)
    ID              reduce using rule 53 (statement -> draw_figure .)
    IF              reduce using rule 53 (statement -> draw_figure .)
    PRINT           reduce using rule 53 (statement -> draw_figure .)
    FOR             reduce using rule 53 (statement -> draw_figure .)
    RETURN          reduce using rule 53 (statement -> draw_figure .)
    WHILE           reduce using rule 53 (statement -> draw_figure .)
    POINT           reduce using rule 53 (statement -> draw_figure .)
    LINE            reduce using rule 53 (statement -> draw_figure .)
    SQUARE          reduce using rule 53 (statement -> draw_figure .)
    RECTANGLE       reduce using rule 53 (statement -> draw_figure .)
    TRIANGLE        reduce using rule 53 (statement -> draw_figure .)
    CIRCLE          reduce using rule 53 (statement -> draw_figure .)
    ARC             reduce using rule 53 (statement -> draw_figure .)


state 321

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment . OP_RPAREN bloque loop_fill

    OP_RPAREN       shift and go to state 332


state 322

    (69) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (115) push_varID_to_Stack -> . epsilon
    (137) epsilon -> .

    OP_PLUS_EQUALS  reduce using rule 137 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 333
    epsilon                        shift and go to state 196

state 323

    (113) fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples . remove_bottle_bottom
    (117) remove_bottle_bottom -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 334
    epsilon                        shift and go to state 282

state 324

    (114) fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub . remove_bottle_bottom
    (117) remove_bottle_bottom -> . epsilon
    (137) epsilon -> .

    OP_DIVISION     reduce using rule 137 (epsilon -> .)
    OP_TIMES        reduce using rule 137 (epsilon -> .)
    OP_PLUS         reduce using rule 137 (epsilon -> .)
    OP_MINUS        reduce using rule 137 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 137 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 137 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 137 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 137 (epsilon -> .)
    AND             reduce using rule 137 (epsilon -> .)
    OR              reduce using rule 137 (epsilon -> .)
    SEMICOLON       reduce using rule 137 (epsilon -> .)
    OP_RPAREN       reduce using rule 137 (epsilon -> .)
    COMA            reduce using rule 137 (epsilon -> .)
    OP_RSQUARE_PAREN reduce using rule 137 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 335
    epsilon                        shift and go to state 282

state 325

    (76) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    ID              reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    IF              reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    PRINT           reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FOR             reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    RETURN          reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    ARRAY           reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    WHILE           reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    INT             reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FLOAT           reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    STRING          reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    BOOLEAN         reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    POINT           reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    LINE            reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    SQUARE          reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    RECTANGLE       reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    TRIANGLE        reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    CIRCLE          reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    ARC             reduce using rule 76 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)


state 326

    (79) loop_fill -> epsilon .

    RCURLY_BRACKET  reduce using rule 79 (loop_fill -> epsilon .)
    ID              reduce using rule 79 (loop_fill -> epsilon .)
    IF              reduce using rule 79 (loop_fill -> epsilon .)
    PRINT           reduce using rule 79 (loop_fill -> epsilon .)
    FOR             reduce using rule 79 (loop_fill -> epsilon .)
    RETURN          reduce using rule 79 (loop_fill -> epsilon .)
    ARRAY           reduce using rule 79 (loop_fill -> epsilon .)
    WHILE           reduce using rule 79 (loop_fill -> epsilon .)
    INT             reduce using rule 79 (loop_fill -> epsilon .)
    FLOAT           reduce using rule 79 (loop_fill -> epsilon .)
    STRING          reduce using rule 79 (loop_fill -> epsilon .)
    BOOLEAN         reduce using rule 79 (loop_fill -> epsilon .)
    POINT           reduce using rule 79 (loop_fill -> epsilon .)
    LINE            reduce using rule 79 (loop_fill -> epsilon .)
    SQUARE          reduce using rule 79 (loop_fill -> epsilon .)
    RECTANGLE       reduce using rule 79 (loop_fill -> epsilon .)
    TRIANGLE        reduce using rule 79 (loop_fill -> epsilon .)
    CIRCLE          reduce using rule 79 (loop_fill -> epsilon .)
    ARC             reduce using rule 79 (loop_fill -> epsilon .)


state 327

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 336


state 328

    (136) figure_quadruple -> epsilon .

    OP_RPAREN       reduce using rule 136 (figure_quadruple -> epsilon .)


state 329

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression . equals_quadruple SEMICOLON
    (57) equals_quadruple -> . epsilon
    (137) epsilon -> .

    SEMICOLON       reduce using rule 137 (epsilon -> .)

    equals_quadruple               shift and go to state 337
    epsilon                        shift and go to state 252

state 330

    (85) function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime .

    OP_RPAREN       reduce using rule 85 (function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime .)


state 331

    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE . bloque fill_if_goto
    (42) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 266

    bloque                         shift and go to state 338

state 332

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN . bloque loop_fill
    (42) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 266

    bloque                         shift and go to state 339

state 333

    (69) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (70) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (71) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (72) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_PLUS_EQUALS  shift and go to state 136
    OP_MINUS_EQUALS shift and go to state 137
    OP_PLUS         shift and go to state 138
    OP_MINUS        shift and go to state 139


state 334

    (113) fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .

    OP_DIVISION     reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_TIMES        reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_PLUS         reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_MINUS        reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    AND             reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OR              reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    SEMICOLON       reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    COMA            reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)
    OP_RSQUARE_PAREN reduce using rule 113 (fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom .)


state 335

    (114) fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .

    OP_DIVISION     reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_TIMES        reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_PLUS         reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_MINUS        reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    AND             reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OR              reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    SEMICOLON       reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    COMA            reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)
    OP_RSQUARE_PAREN reduce using rule 114 (fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom .)


state 336

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 340


state 337

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 341


state 338

    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque . fill_if_goto
    (63) fill_if_goto -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    ARRAY           reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    INT             reduce using rule 137 (epsilon -> .)
    FLOAT           reduce using rule 137 (epsilon -> .)
    STRING          reduce using rule 137 (epsilon -> .)
    BOOLEAN         reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

    fill_if_goto                   shift and go to state 342
    epsilon                        shift and go to state 343

state 339

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque . loop_fill
    (79) loop_fill -> . epsilon
    (137) epsilon -> .

    RCURLY_BRACKET  reduce using rule 137 (epsilon -> .)
    ID              reduce using rule 137 (epsilon -> .)
    IF              reduce using rule 137 (epsilon -> .)
    PRINT           reduce using rule 137 (epsilon -> .)
    FOR             reduce using rule 137 (epsilon -> .)
    RETURN          reduce using rule 137 (epsilon -> .)
    ARRAY           reduce using rule 137 (epsilon -> .)
    WHILE           reduce using rule 137 (epsilon -> .)
    INT             reduce using rule 137 (epsilon -> .)
    FLOAT           reduce using rule 137 (epsilon -> .)
    STRING          reduce using rule 137 (epsilon -> .)
    BOOLEAN         reduce using rule 137 (epsilon -> .)
    POINT           reduce using rule 137 (epsilon -> .)
    LINE            reduce using rule 137 (epsilon -> .)
    SQUARE          reduce using rule 137 (epsilon -> .)
    RECTANGLE       reduce using rule 137 (epsilon -> .)
    TRIANGLE        reduce using rule 137 (epsilon -> .)
    CIRCLE          reduce using rule 137 (epsilon -> .)
    ARC             reduce using rule 137 (epsilon -> .)

    loop_fill                      shift and go to state 344
    epsilon                        shift and go to state 326

state 340

    (135) draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    ID              reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    IF              reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    ARRAY           reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    WHILE           reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    INT             reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    POINT           reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    LINE            reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    SQUARE          reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)
    ARC             reduce using rule 135 (draw_figure -> figure OP_LPAREN mega_expression COMA mega_expression COMA mega_expression figure_quadruple OP_RPAREN SEMICOLON .)


state 341

    (55) assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ID              reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    IF              reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    PRINT           reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FOR             reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RETURN          reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ARRAY           reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    WHILE           reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    INT             reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FLOAT           reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    STRING          reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    POINT           reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    LINE            reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    SQUARE          reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RECTANGLE       reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    TRIANGLE        reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    CIRCLE          reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ARC             reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    OP_LPAREN       reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_INT         reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_FLOAT       reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_STRING      reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 55 (assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)


state 342

    (59) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .

    RCURLY_BRACKET  reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    ID              reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    IF              reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    PRINT           reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FOR             reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    RETURN          reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    ARRAY           reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    WHILE           reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    INT             reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FLOAT           reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    STRING          reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    BOOLEAN         reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    POINT           reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    LINE            reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    SQUARE          reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    RECTANGLE       reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    TRIANGLE        reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    CIRCLE          reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    ARC             reduce using rule 59 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)


state 343

    (63) fill_if_goto -> epsilon .

    RCURLY_BRACKET  reduce using rule 63 (fill_if_goto -> epsilon .)
    ID              reduce using rule 63 (fill_if_goto -> epsilon .)
    IF              reduce using rule 63 (fill_if_goto -> epsilon .)
    PRINT           reduce using rule 63 (fill_if_goto -> epsilon .)
    FOR             reduce using rule 63 (fill_if_goto -> epsilon .)
    RETURN          reduce using rule 63 (fill_if_goto -> epsilon .)
    ARRAY           reduce using rule 63 (fill_if_goto -> epsilon .)
    WHILE           reduce using rule 63 (fill_if_goto -> epsilon .)
    INT             reduce using rule 63 (fill_if_goto -> epsilon .)
    FLOAT           reduce using rule 63 (fill_if_goto -> epsilon .)
    STRING          reduce using rule 63 (fill_if_goto -> epsilon .)
    BOOLEAN         reduce using rule 63 (fill_if_goto -> epsilon .)
    POINT           reduce using rule 63 (fill_if_goto -> epsilon .)
    LINE            reduce using rule 63 (fill_if_goto -> epsilon .)
    SQUARE          reduce using rule 63 (fill_if_goto -> epsilon .)
    RECTANGLE       reduce using rule 63 (fill_if_goto -> epsilon .)
    TRIANGLE        reduce using rule 63 (fill_if_goto -> epsilon .)
    CIRCLE          reduce using rule 63 (fill_if_goto -> epsilon .)
    ARC             reduce using rule 63 (fill_if_goto -> epsilon .)


state 344

    (75) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    ID              reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    IF              reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    PRINT           reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FOR             reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    RETURN          reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    ARRAY           reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    WHILE           reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    INT             reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FLOAT           reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    STRING          reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    BOOLEAN         reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    POINT           reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    LINE            reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    SQUARE          reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    RECTANGLE       reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    TRIANGLE        reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    CIRCLE          reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    ARC             reduce using rule 75 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ARRAY in state 42 resolved as shift
WARNING: shift/reduce conflict for INT in state 42 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 42 resolved as shift
WARNING: shift/reduce conflict for STRING in state 42 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 42 resolved as shift
WARNING: shift/reduce conflict for RCURLY_BRACKET in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 66 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 66 resolved as shift
WARNING: shift/reduce conflict for POINT in state 66 resolved as shift
WARNING: shift/reduce conflict for LINE in state 66 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 66 resolved as shift
WARNING: shift/reduce conflict for RECTANGLE in state 66 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 66 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 66 resolved as shift
WARNING: shift/reduce conflict for ARC in state 66 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 133 resolved as shift
WARNING: shift/reduce conflict for INT in state 133 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 133 resolved as shift
WARNING: shift/reduce conflict for STRING in state 133 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 133 resolved as shift
