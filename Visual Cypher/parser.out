Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CARET
    QUOT_MARK
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 3     vars -> ARRAY type save_type ID pushTo_varsTable OP_LSQUARE_PAREN VAR_INT COMA VAR_INT create_arr_info OP_RSQUARE_PAREN SEMICOLON vars
Rule 4     vars -> epsilon
Rule 5     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 6     vars_prime -> epsilon
Rule 7     pushTo_varsTable -> epsilon
Rule 8     save_type -> epsilon
Rule 9     create_arr_info -> epsilon
Rule 10    function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 11    function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 12    function -> epsilon
Rule 13    pushTo_FunctionDir -> epsilon
Rule 14    pushTo_functionSignature -> epsilon
Rule 15    add_NumVars -> epsilon
Rule 16    add_Function_FirstQuadruple -> epsilon
Rule 17    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
Rule 18    fill_firstQuadruple -> epsilon
Rule 19    add_NumVars_Main_Global -> epsilon
Rule 20    push_end_quadruple -> epsilon
Rule 21    type -> INT
Rule 22    type -> FLOAT
Rule 23    type -> STRING
Rule 24    type -> BOOLEAN
Rule 25    function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime
Rule 26    function_parameters -> epsilon
Rule 27    function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime
Rule 28    function_parameters_prime -> epsilon
Rule 29    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 30    function_bloque_primo -> function_bloque_primo function_statement
Rule 31    function_bloque_primo -> epsilon
Rule 32    function_statement -> assigment
Rule 33    function_statement -> if
Rule 34    function_statement -> printer
Rule 35    function_statement -> increment
Rule 36    function_statement -> for
Rule 37    function_statement -> return
Rule 38    function_statement -> function_call
Rule 39    function_statement -> fun_esp
Rule 40    function_statement -> vars
Rule 41    function_statement -> while_loop
Rule 42    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 43    bloque_primo -> bloque_primo statement
Rule 44    bloque_primo -> epsilon
Rule 45    statement -> assigment
Rule 46    statement -> if
Rule 47    statement -> printer
Rule 48    statement -> increment
Rule 49    statement -> for
Rule 50    statement -> return
Rule 51    statement -> function_call
Rule 52    statement -> fun_esp
Rule 53    statement -> while_loop
Rule 54    assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 55    assigment -> ID push_varID_to_Stack OP_LSQUARE_PAREN mega_expression OP_RSQUARE_PAREN ver_quadruples OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 56    ver_quadruples -> epsilon
Rule 57    equals_quadruple -> epsilon
Rule 58    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
Rule 59    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
Rule 60    if_gotoF_quadruple -> epsilon
Rule 61    fill_if_gotoF1 -> epsilon
Rule 62    fill_if_gotoF2 -> epsilon
Rule 63    fill_if_goto -> epsilon
Rule 64    if_goto_quadruple -> epsilon
Rule 65    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 66    impression -> mega_expression printer_quadruple impresionb
Rule 67    impressionb -> COMA mega_expression printer_quadruple impressionb
Rule 68    impressionb -> epsilon
Rule 69    printer_quadruple -> epsilon
Rule 70    increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 71    increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 72    increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
Rule 73    increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
Rule 74    incrementByOne -> epsilon
Rule 75    increment_equals -> epsilon
Rule 76    for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
Rule 77    while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
Rule 78    loop_jumpCount -> epsilon
Rule 79    loop_gotoF -> epsilon
Rule 80    loop_fill -> epsilon
Rule 81    return -> RETURN mega_expression return_quadruple SEMICOLON
Rule 82    return_quadruple -> epsilon
Rule 83    function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
Rule 84    function_call_parameters -> mega_expression create_param function_call_parameters_prime
Rule 85    function_call_parameters -> epsilon
Rule 86    function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime
Rule 87    function_call_parameters_prime -> epsilon
Rule 88    create_era -> epsilon
Rule 89    create_param -> epsilon
Rule 90    create_gosub -> epsilon
Rule 91    mega_expression -> super_expression check_symbol_megaexp
Rule 92    mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp
Rule 93    mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp
Rule 94    check_symbol_megaexp -> epsilon
Rule 95    super_expression -> expression check_symbol_superexp
Rule 96    super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
Rule 97    super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp
Rule 98    super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 99    super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 100   super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
Rule 101   super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
Rule 102   check_symbol_superexp -> epsilon
Rule 103   expression -> term check_symbol_exp
Rule 104   expression -> term check_symbol_exp OP_PLUS push_symbol expression
Rule 105   expression -> term check_symbol_exp OP_MINUS push_symbol expression
Rule 106   push_symbol -> epsilon
Rule 107   check_symbol_exp -> epsilon
Rule 108   term -> fact check_symbol_term
Rule 109   term -> fact check_symbol_term OP_DIVISION push_symbol term
Rule 110   term -> fact check_symbol_term OP_TIMES push_symbol term
Rule 111   check_symbol_term -> epsilon
Rule 112   fact -> var_cte
Rule 113   fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
Rule 114   fact -> ID push_varID_to_Stack OP_LSQUARE_PAREN push_bottle_bottom mega_expression OP_RSQUARE_PAREN ver_quadruples remove_bottle_bottom
Rule 115   fact -> ID create_era OP_LPAREN push_bottle_bottom function_call_parameters OP_RPAREN create_gosub remove_bottle_bottom
Rule 116   push_varID_to_Stack -> epsilon
Rule 117   push_bottle_bottom -> epsilon
Rule 118   remove_bottle_bottom -> epsilon
Rule 119   var_cte -> ID push_varID_to_Stack
Rule 120   var_cte -> VAR_INT push_cte_toTable
Rule 121   var_cte -> VAR_FLOAT push_cte_toTable
Rule 122   var_cte -> VAR_STRING push_cte_toTable
Rule 123   var_cte -> VAR_BOOLEAN push_cte_toTable
Rule 124   push_cte_toTable -> epsilon
Rule 125   fun_esp -> figure_creation
Rule 126   figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
Rule 127   figure -> POINT
Rule 128   figure -> LINE
Rule 129   figure -> SQUARE
Rule 130   figure -> RECTANGLE
Rule 131   figure -> TRIANGLE
Rule 132   figure -> CIRCLE
Rule 133   figure -> ARC
Rule 134   bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET
Rule 135   bloque_figura_primo -> bloque_figura_primo figura_attr
Rule 136   bloque_figura_primo -> epsilon
Rule 137   figura_attr -> vector
Rule 138   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 139   figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON
Rule 140   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON
Rule 141   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 92
ARC                  : 133
ARRAY                : 3
BOOLEAN              : 24
CARET                : 
CIRCLE               : 132
COLOR                : 138
COMA                 : 3 5 27 67 86 140
ELSE                 : 59
FIGURE               : 126
FLOAT                : 22
FOR                  : 76
FUNCTION             : 10 11
ID                   : 1 2 3 5 10 11 25 27 54 55 70 71 72 73 83 114 115 119 126 138 140
IF                   : 58 59
INT                  : 21
LCURLY_BRACKET       : 1 29 42 134
LINE                 : 128
MAIN                 : 17
OP_DIVISION          : 109
OP_EQUALS            : 54 55
OP_EQUALS_TWO        : 100
OP_GREATER_EQUALS_THAN : 98
OP_GREATER_THAN      : 96
OP_LESS_EQUALS_THAN  : 99
OP_LESS_THAN         : 97
OP_LPAREN            : 10 11 17 58 59 65 76 77 83 113 115 140
OP_LSQUARE_PAREN     : 3 55 114
OP_MINUS             : 73 73 105
OP_MINUS_EQUALS      : 71
OP_NOT_EQUALS        : 101
OP_PLUS              : 72 72 104
OP_PLUS_EQUALS       : 70
OP_RPAREN            : 10 11 17 58 59 65 76 77 83 113 115 140
OP_RSQUARE_PAREN     : 3 55 114
OP_TIMES             : 110
OP_TWO_POINTS        : 126 138 139 140
OR                   : 93
POINT                : 127
POSSESS              : 126
PRINT                : 65
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 29 42 134
RECTANGLE            : 130
RETURN               : 81
SEMICOLON            : 2 3 54 55 65 70 71 72 73 76 81 83 138 139 140
SIZE                 : 139
SQUARE               : 129
STRING               : 23
TRIANGLE             : 131
VAR                  : 
VAR_BOOLEAN          : 123
VAR_FLOAT            : 121
VAR_INT              : 3 3 120
VAR_STRING           : 122
VECTOR               : 140
VOID                 : 11
WHILE                : 77
error                : 

Nonterminals, with rules where they appear

add_Function_FirstQuadruple : 10 11
add_NumVars          : 10 11
add_NumVars_Main_Global : 1 17
assigment            : 32 45 76
bloque               : 58 59 59 76 77
bloque_figura        : 126
bloque_figura_primo  : 134 135
bloque_primo         : 42 43
check_symbol_exp     : 103 104 105
check_symbol_megaexp : 91 92 93
check_symbol_superexp : 95 96 97 98 99 100 101
check_symbol_term    : 108 109 110
create_arr_info      : 3
create_era           : 83 115
create_gosub         : 83 115
create_param         : 84 86
epsilon              : 4 6 7 8 9 12 13 14 15 16 18 19 20 26 28 31 44 56 57 60 61 62 63 64 68 69 74 75 78 79 80 82 85 87 88 89 90 94 102 106 107 111 116 117 118 124 136
equals_quadruple     : 54 55
expression           : 95 96 96 97 97 98 98 99 99 100 100 101 101 104 105
fact                 : 108 109 110
figura_attr          : 135
figure               : 126
figure_creation      : 125
fill_firstQuadruple  : 17
fill_if_goto         : 59
fill_if_gotoF1       : 58
fill_if_gotoF2       : 59
for                  : 36 49
fun_esp              : 39 52
function             : 1 10 11
function_bloque      : 10 11 17
function_bloque_primo : 29 30
function_call        : 38 51
function_call_parameters : 83 115
function_call_parameters_prime : 84 86
function_parameters  : 10 11
function_parameters_prime : 25 27
function_statement   : 30
if                   : 33 46
if_gotoF_quadruple   : 58 59
if_goto_quadruple    : 59
impresionb           : 66
impression           : 65
impressionb          : 67
increment            : 35 48 76
incrementByOne       : 72 73
increment_equals     : 70 71
loop_fill            : 76 77
loop_gotoF           : 76 77
loop_jumpCount       : 76 77
main_function        : 1
mega_expression      : 54 55 55 58 59 66 67 70 71 76 77 81 84 86 113 114 139 140 140
printer              : 34 47
printer_quadruple    : 66 67
program              : 0
pushTo_FunctionDir   : 10 11 17
pushTo_functionSignature : 10 11
pushTo_varsTable     : 2 3 5 25 27
push_bottle_bottom   : 113 114 115
push_cte_toTable     : 120 121 122 123
push_end_quadruple   : 17
push_symbol          : 54 55 70 71 92 93 96 97 98 99 100 101 104 105 109 110
push_varID_to_Stack  : 54 55 70 71 72 73 114 119
remove_bottle_bottom : 113 114 115
return               : 37 50
return_quadruple     : 81
save_type            : 2 3 25 27
statement            : 43
super_expression     : 91 92 92 93 93
term                 : 103 104 105 109 110
type                 : 2 3 10 25 27
var_cte              : 112
vars                 : 1 2 3 40
vars_prime           : 2 5
vector               : 137
ver_quadruples       : 55 114
while_loop           : 41 53

