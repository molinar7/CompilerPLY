Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    VAR_BOOLEAN
    CARET
    QUOT_MARK
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
Rule 3     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 4     vars -> epsilon
Rule 5     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 6     vars_prime -> epsilon
Rule 7     pushTo_varsTable_WithCTE -> epsilon
Rule 8     pushTo_varsTable -> epsilon
Rule 9     save_type -> epsilon
Rule 10    function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
Rule 11    function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
Rule 12    function -> epsilon
Rule 13    pushTo_FunctionDir -> epsilon
Rule 14    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque
Rule 15    type -> INT
Rule 16    type -> FLOAT
Rule 17    type -> STRING
Rule 18    type -> BOOLEAN
Rule 19    parameters -> type ID parameters
Rule 20    parameters -> COMA type ID parameters
Rule 21    parameters -> epsilon
Rule 22    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 23    function_bloque_primo -> function_bloque_primo function_statement
Rule 24    function_bloque_primo -> epsilon
Rule 25    function_statement -> assigment
Rule 26    function_statement -> if
Rule 27    function_statement -> printer
Rule 28    function_statement -> increment
Rule 29    function_statement -> for
Rule 30    function_statement -> return
Rule 31    function_statement -> function_call
Rule 32    function_statement -> fun_esp
Rule 33    function_statement -> vars
Rule 34    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 35    bloque_primo -> bloque_primo statement
Rule 36    bloque_primo -> epsilon
Rule 37    statement -> assigment
Rule 38    statement -> if
Rule 39    statement -> printer
Rule 40    statement -> increment
Rule 41    statement -> for
Rule 42    statement -> return
Rule 43    statement -> function_call
Rule 44    statement -> fun_esp
Rule 45    assigment -> ID OP_EQUALS single_expression SEMICOLON
Rule 46    assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression
Rule 47    if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque
Rule 48    if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque
Rule 49    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 50    impression -> single_expression
Rule 51    impression -> single_expression OP_PLUS impression
Rule 52    increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON
Rule 53    increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON
Rule 54    increment -> ID OP_PLUS OP_PLUS SEMICOLON
Rule 55    increment -> ID OP_MINUS OP_MINUS SEMICOLON
Rule 56    for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque
Rule 57    return -> RETURN single_expression SEMICOLON
Rule 58    function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
Rule 59    function_call_prime -> ID function_call_prime
Rule 60    function_call_prime -> COMA ID function_call_prime
Rule 61    function_call_prime -> epsilon
Rule 62    condition_mega_expression -> condition_super_expression
Rule 63    condition_mega_expression -> condition_super_expression AND condition_super_expression
Rule 64    condition_mega_expression -> condition_super_expression OR condition_super_expression
Rule 65    condition_super_expression -> expression OP_GREATER_THAN expression
Rule 66    condition_super_expression -> expression OP_LESS_THAN expression
Rule 67    condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression
Rule 68    condition_super_expression -> expression OP_LESS_EQUALS_THAN expression
Rule 69    condition_super_expression -> expression OP_EQUALS_TWO expression
Rule 70    condition_super_expression -> expression OP_NOT_EQUALS expression
Rule 71    single_expression -> single_term check_symbol_exp
Rule 72    single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression
Rule 73    single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression
Rule 74    check_symbol_exp -> epsilon
Rule 75    single_term -> single_fact check_symbol_term
Rule 76    single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term
Rule 77    single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term
Rule 78    check_symbol_term -> epsilon
Rule 79    push_symbol -> epsilon
Rule 80    single_fact -> var_cte push_var_cte
Rule 81    single_fact -> OP_LPAREN single_expression OP_RPAREN
Rule 82    push_var_cte -> epsilon
Rule 83    mega_expression -> super_expression
Rule 84    mega_expression -> super_expression AND super_expression
Rule 85    mega_expression -> super_expression OR super_expression
Rule 86    super_expression -> expression
Rule 87    super_expression -> expression OP_GREATER_THAN expression
Rule 88    super_expression -> expression OP_LESS_THAN expression
Rule 89    super_expression -> expression OP_GREATER_EQUALS_THAN expression
Rule 90    super_expression -> expression OP_LESS_EQUALS_THAN expression
Rule 91    super_expression -> expression OP_EQUALS_TWO expression
Rule 92    super_expression -> expression OP_NOT_EQUALS expression
Rule 93    expression -> term
Rule 94    expression -> term OP_PLUS expression
Rule 95    expression -> term OP_MINUS expression
Rule 96    term -> fact
Rule 97    term -> fact OP_DIVISION term
Rule 98    term -> fact OP_TIMES term
Rule 99    fact -> var_cte
Rule 100   fact -> OP_LPAREN mega_expression OP_RPAREN
Rule 101   var_cte -> ID
Rule 102   var_cte -> VAR_INT
Rule 103   var_cte -> VAR_FLOAT
Rule 104   var_cte -> VAR_STRING
Rule 105   fun_esp -> figure_creation
Rule 106   figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
Rule 107   figure -> POINT
Rule 108   figure -> LINE
Rule 109   figure -> SQUARE
Rule 110   figure -> RECTANGLE
Rule 111   figure -> TRIANGLE
Rule 112   figure -> CIRCLE
Rule 113   figure -> ARC
Rule 114   bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET
Rule 115   bloque_figura_primo -> bloque_figura_primo figura_attr
Rule 116   bloque_figura_primo -> epsilon
Rule 117   figura_attr -> vector
Rule 118   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 119   figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON
Rule 120   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON
Rule 121   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 63 84
ARC                  : 113
BOOLEAN              : 18
CARET                : 
CIRCLE               : 112
COLOR                : 118
COMA                 : 5 20 60 120
ELSE                 : 48
FIGURE               : 106
FLOAT                : 16
FOR                  : 56
FUNCTION             : 10 11
ID                   : 1 2 3 5 10 11 19 20 45 46 52 53 54 55 58 59 60 101 106 118 120
IF                   : 47 48
INT                  : 15
LCURLY_BRACKET       : 1 22 34 114
LINE                 : 108
MAIN                 : 14
OP_DIVISION          : 76 97
OP_EQUALS            : 2 45 46
OP_EQUALS_TWO        : 69 91
OP_GREATER_EQUALS_THAN : 67 89
OP_GREATER_THAN      : 65 87
OP_LESS_EQUALS_THAN  : 68 90
OP_LESS_THAN         : 66 88
OP_LPAREN            : 10 11 14 47 48 49 56 58 81 100 120
OP_LSQUARE_PAREN     : 46
OP_MINUS             : 55 55 73 95
OP_MINUS_EQUALS      : 53
OP_NOT_EQUALS        : 70 92
OP_PLUS              : 51 54 54 72 94
OP_PLUS_EQUALS       : 52
OP_RPAREN            : 10 11 14 47 48 49 56 58 81 100 120
OP_RSQUARE_PAREN     : 46
OP_TIMES             : 77 98
OP_TWO_POINTS        : 106 118 119 120
OR                   : 64 85
POINT                : 107
POSSESS              : 106
PRINT                : 49
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 22 34 114
RECTANGLE            : 110
RETURN               : 57
SEMICOLON            : 2 3 45 49 52 53 54 55 56 57 58 118 119 120
SIZE                 : 119
SQUARE               : 109
STRING               : 17
TRIANGLE             : 111
VAR                  : 
VAR_BOOLEAN          : 
VAR_FLOAT            : 103
VAR_INT              : 46 102
VAR_STRING           : 104
VECTOR               : 120
VOID                 : 11
error                : 

Nonterminals, with rules where they appear

assigment            : 25 37 56
bloque               : 47 48 48 56
bloque_figura        : 106
bloque_figura_primo  : 114 115
bloque_primo         : 34 35
check_symbol_exp     : 71 72 73
check_symbol_term    : 75 76 77
condition_mega_expression : 47 48
condition_super_expression : 56 62 63 63 64 64
epsilon              : 4 6 7 8 9 12 13 21 24 36 61 74 78 79 82 116
expression           : 65 65 66 66 67 67 68 68 69 69 70 70 86 87 87 88 88 89 89 90 90 91 91 92 92 94 95
fact                 : 96 97 98
figura_attr          : 115
figure               : 106
figure_creation      : 105
for                  : 29 41
fun_esp              : 32 44
function             : 1 10 11
function_bloque      : 10 11 14
function_bloque_primo : 22 23
function_call        : 31 43
function_call_prime  : 58 59 60
function_statement   : 23
if                   : 26 38
impression           : 49 51
increment            : 28 40 56
main_function        : 1
mega_expression      : 100
parameters           : 10 11 19 20
printer              : 27 39
program              : 0
pushTo_FunctionDir   : 10 11 14
pushTo_varsTable     : 3 5
pushTo_varsTable_WithCTE : 2
push_symbol          : 72 73 76 77
push_var_cte         : 80
return               : 30 42
save_type            : 2 3
single_expression    : 45 46 50 51 52 53 57 72 73 81 119 120 120
single_fact          : 75 76 77
single_term          : 71 72 73 76 77
statement            : 35
super_expression     : 83 84 84 85 85
term                 : 93 94 95 97 98
type                 : 2 3 10 19 20
var_cte              : 2 80 99
vars                 : 1 2 3 33
vars_prime           : 3 5
vector               : 117

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LCURLY_BRACKET vars function main_function RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 4


state 4

    (1) program -> PROGRAM ID LCURLY_BRACKET . vars function main_function RCURLY_BRACKET
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 121 (epsilon -> .)
    MAIN            reduce using rule 121 (epsilon -> .)

    vars                           shift and go to state 5
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 5

    (1) program -> PROGRAM ID LCURLY_BRACKET vars . function main_function RCURLY_BRACKET
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (121) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 121 (epsilon -> .)

    function                       shift and go to state 12
    epsilon                        shift and go to state 14

state 6

    (2) vars -> type . save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type . save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (9) save_type -> . epsilon
    (121) epsilon -> .

    ID              reduce using rule 121 (epsilon -> .)

    save_type                      shift and go to state 15
    epsilon                        shift and go to state 16

state 7

    (4) vars -> epsilon .

    FUNCTION        reduce using rule 4 (vars -> epsilon .)
    MAIN            reduce using rule 4 (vars -> epsilon .)
    RCURLY_BRACKET  reduce using rule 4 (vars -> epsilon .)
    ID              reduce using rule 4 (vars -> epsilon .)
    IF              reduce using rule 4 (vars -> epsilon .)
    PRINT           reduce using rule 4 (vars -> epsilon .)
    FOR             reduce using rule 4 (vars -> epsilon .)
    RETURN          reduce using rule 4 (vars -> epsilon .)
    FIGURE          reduce using rule 4 (vars -> epsilon .)
    INT             reduce using rule 4 (vars -> epsilon .)
    FLOAT           reduce using rule 4 (vars -> epsilon .)
    STRING          reduce using rule 4 (vars -> epsilon .)
    BOOLEAN         reduce using rule 4 (vars -> epsilon .)


state 8

    (15) type -> INT .

    ID              reduce using rule 15 (type -> INT .)


state 9

    (16) type -> FLOAT .

    ID              reduce using rule 16 (type -> FLOAT .)


state 10

    (17) type -> STRING .

    ID              reduce using rule 17 (type -> STRING .)


state 11

    (18) type -> BOOLEAN .

    ID              reduce using rule 18 (type -> BOOLEAN .)


state 12

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function . main_function RCURLY_BRACKET
    (14) main_function -> . MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque

    MAIN            shift and go to state 18

    main_function                  shift and go to state 17

state 13

    (10) function -> FUNCTION . type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> FUNCTION . VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN

    VOID            shift and go to state 20
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 19

state 14

    (12) function -> epsilon .

    MAIN            reduce using rule 12 (function -> epsilon .)


state 15

    (2) vars -> type save_type . ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type . ID pushTo_varsTable vars_prime SEMICOLON vars

    ID              shift and go to state 21


state 16

    (9) save_type -> epsilon .

    ID              reduce using rule 9 (save_type -> epsilon .)


state 17

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function . RCURLY_BRACKET

    RCURLY_BRACKET  shift and go to state 22


state 18

    (14) main_function -> MAIN . pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque
    (13) pushTo_FunctionDir -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 23
    epsilon                        shift and go to state 24

state 19

    (10) function -> FUNCTION type . ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function

    ID              shift and go to state 25


state 20

    (11) function -> FUNCTION VOID . ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function

    ID              shift and go to state 26


state 21

    (2) vars -> type save_type ID . OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> type save_type ID . pushTo_varsTable vars_prime SEMICOLON vars
    (8) pushTo_varsTable -> . epsilon
    (121) epsilon -> .

    OP_EQUALS       shift and go to state 27
    COMA            reduce using rule 121 (epsilon -> .)
    SEMICOLON       reduce using rule 121 (epsilon -> .)

    pushTo_varsTable               shift and go to state 28
    epsilon                        shift and go to state 29

state 22

    (1) program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID LCURLY_BRACKET vars function main_function RCURLY_BRACKET .)


state 23

    (14) main_function -> MAIN pushTo_FunctionDir . OP_LPAREN OP_RPAREN function_bloque

    OP_LPAREN       shift and go to state 30


state 24

    (13) pushTo_FunctionDir -> epsilon .

    OP_LPAREN       reduce using rule 13 (pushTo_FunctionDir -> epsilon .)


state 25

    (10) function -> FUNCTION type ID . pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (13) pushTo_FunctionDir -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 31
    epsilon                        shift and go to state 24

state 26

    (11) function -> FUNCTION VOID ID . pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (13) pushTo_FunctionDir -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 32
    epsilon                        shift and go to state 24

state 27

    (2) vars -> type save_type ID OP_EQUALS . var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    var_cte                        shift and go to state 34

state 28

    (3) vars -> type save_type ID pushTo_varsTable . vars_prime SEMICOLON vars
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (121) epsilon -> .

    COMA            shift and go to state 39
    SEMICOLON       reduce using rule 121 (epsilon -> .)

    vars_prime                     shift and go to state 38
    epsilon                        shift and go to state 40

state 29

    (8) pushTo_varsTable -> epsilon .

    COMA            reduce using rule 8 (pushTo_varsTable -> epsilon .)
    SEMICOLON       reduce using rule 8 (pushTo_varsTable -> epsilon .)


state 30

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN . OP_RPAREN function_bloque

    OP_RPAREN       shift and go to state 41


state 31

    (10) function -> FUNCTION type ID pushTo_FunctionDir . OP_LPAREN parameters OP_RPAREN function_bloque function

    OP_LPAREN       shift and go to state 42


state 32

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir . OP_LPAREN parameters OP_RPAREN function_bloque function

    OP_LPAREN       shift and go to state 43


state 33

    (101) var_cte -> ID .

    SEMICOLON       reduce using rule 101 (var_cte -> ID .)
    OP_DIVISION     reduce using rule 101 (var_cte -> ID .)
    OP_TIMES        reduce using rule 101 (var_cte -> ID .)
    OP_PLUS         reduce using rule 101 (var_cte -> ID .)
    OP_MINUS        reduce using rule 101 (var_cte -> ID .)
    OP_GREATER_THAN reduce using rule 101 (var_cte -> ID .)
    OP_LESS_THAN    reduce using rule 101 (var_cte -> ID .)
    OP_GREATER_EQUALS_THAN reduce using rule 101 (var_cte -> ID .)
    OP_LESS_EQUALS_THAN reduce using rule 101 (var_cte -> ID .)
    OP_EQUALS_TWO   reduce using rule 101 (var_cte -> ID .)
    OP_NOT_EQUALS   reduce using rule 101 (var_cte -> ID .)
    OP_RPAREN       reduce using rule 101 (var_cte -> ID .)
    AND             reduce using rule 101 (var_cte -> ID .)
    OR              reduce using rule 101 (var_cte -> ID .)
    RCURLY_BRACKET  reduce using rule 101 (var_cte -> ID .)
    ID              reduce using rule 101 (var_cte -> ID .)
    IF              reduce using rule 101 (var_cte -> ID .)
    PRINT           reduce using rule 101 (var_cte -> ID .)
    FOR             reduce using rule 101 (var_cte -> ID .)
    RETURN          reduce using rule 101 (var_cte -> ID .)
    FIGURE          reduce using rule 101 (var_cte -> ID .)
    INT             reduce using rule 101 (var_cte -> ID .)
    FLOAT           reduce using rule 101 (var_cte -> ID .)
    STRING          reduce using rule 101 (var_cte -> ID .)
    BOOLEAN         reduce using rule 101 (var_cte -> ID .)
    OP_LPAREN       reduce using rule 101 (var_cte -> ID .)
    VAR_INT         reduce using rule 101 (var_cte -> ID .)
    VAR_FLOAT       reduce using rule 101 (var_cte -> ID .)
    VAR_STRING      reduce using rule 101 (var_cte -> ID .)
    COMA            reduce using rule 101 (var_cte -> ID .)


state 34

    (2) vars -> type save_type ID OP_EQUALS var_cte . pushTo_varsTable_WithCTE SEMICOLON vars
    (7) pushTo_varsTable_WithCTE -> . epsilon
    (121) epsilon -> .

    SEMICOLON       reduce using rule 121 (epsilon -> .)

    pushTo_varsTable_WithCTE       shift and go to state 44
    epsilon                        shift and go to state 45

state 35

    (102) var_cte -> VAR_INT .

    SEMICOLON       reduce using rule 102 (var_cte -> VAR_INT .)
    OP_DIVISION     reduce using rule 102 (var_cte -> VAR_INT .)
    OP_TIMES        reduce using rule 102 (var_cte -> VAR_INT .)
    OP_PLUS         reduce using rule 102 (var_cte -> VAR_INT .)
    OP_MINUS        reduce using rule 102 (var_cte -> VAR_INT .)
    OP_GREATER_THAN reduce using rule 102 (var_cte -> VAR_INT .)
    OP_LESS_THAN    reduce using rule 102 (var_cte -> VAR_INT .)
    OP_GREATER_EQUALS_THAN reduce using rule 102 (var_cte -> VAR_INT .)
    OP_LESS_EQUALS_THAN reduce using rule 102 (var_cte -> VAR_INT .)
    OP_EQUALS_TWO   reduce using rule 102 (var_cte -> VAR_INT .)
    OP_NOT_EQUALS   reduce using rule 102 (var_cte -> VAR_INT .)
    OP_RPAREN       reduce using rule 102 (var_cte -> VAR_INT .)
    AND             reduce using rule 102 (var_cte -> VAR_INT .)
    OR              reduce using rule 102 (var_cte -> VAR_INT .)
    RCURLY_BRACKET  reduce using rule 102 (var_cte -> VAR_INT .)
    ID              reduce using rule 102 (var_cte -> VAR_INT .)
    IF              reduce using rule 102 (var_cte -> VAR_INT .)
    PRINT           reduce using rule 102 (var_cte -> VAR_INT .)
    FOR             reduce using rule 102 (var_cte -> VAR_INT .)
    RETURN          reduce using rule 102 (var_cte -> VAR_INT .)
    FIGURE          reduce using rule 102 (var_cte -> VAR_INT .)
    INT             reduce using rule 102 (var_cte -> VAR_INT .)
    FLOAT           reduce using rule 102 (var_cte -> VAR_INT .)
    STRING          reduce using rule 102 (var_cte -> VAR_INT .)
    BOOLEAN         reduce using rule 102 (var_cte -> VAR_INT .)
    OP_LPAREN       reduce using rule 102 (var_cte -> VAR_INT .)
    VAR_INT         reduce using rule 102 (var_cte -> VAR_INT .)
    VAR_FLOAT       reduce using rule 102 (var_cte -> VAR_INT .)
    VAR_STRING      reduce using rule 102 (var_cte -> VAR_INT .)
    COMA            reduce using rule 102 (var_cte -> VAR_INT .)


state 36

    (103) var_cte -> VAR_FLOAT .

    SEMICOLON       reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_DIVISION     reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_TIMES        reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_PLUS         reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_MINUS        reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_GREATER_THAN reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_LESS_THAN    reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_GREATER_EQUALS_THAN reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_LESS_EQUALS_THAN reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_EQUALS_TWO   reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_NOT_EQUALS   reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_RPAREN       reduce using rule 103 (var_cte -> VAR_FLOAT .)
    AND             reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OR              reduce using rule 103 (var_cte -> VAR_FLOAT .)
    RCURLY_BRACKET  reduce using rule 103 (var_cte -> VAR_FLOAT .)
    ID              reduce using rule 103 (var_cte -> VAR_FLOAT .)
    IF              reduce using rule 103 (var_cte -> VAR_FLOAT .)
    PRINT           reduce using rule 103 (var_cte -> VAR_FLOAT .)
    FOR             reduce using rule 103 (var_cte -> VAR_FLOAT .)
    RETURN          reduce using rule 103 (var_cte -> VAR_FLOAT .)
    FIGURE          reduce using rule 103 (var_cte -> VAR_FLOAT .)
    INT             reduce using rule 103 (var_cte -> VAR_FLOAT .)
    FLOAT           reduce using rule 103 (var_cte -> VAR_FLOAT .)
    STRING          reduce using rule 103 (var_cte -> VAR_FLOAT .)
    BOOLEAN         reduce using rule 103 (var_cte -> VAR_FLOAT .)
    OP_LPAREN       reduce using rule 103 (var_cte -> VAR_FLOAT .)
    VAR_INT         reduce using rule 103 (var_cte -> VAR_FLOAT .)
    VAR_FLOAT       reduce using rule 103 (var_cte -> VAR_FLOAT .)
    VAR_STRING      reduce using rule 103 (var_cte -> VAR_FLOAT .)
    COMA            reduce using rule 103 (var_cte -> VAR_FLOAT .)


state 37

    (104) var_cte -> VAR_STRING .

    SEMICOLON       reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_DIVISION     reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_TIMES        reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_PLUS         reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_MINUS        reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_GREATER_THAN reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_LESS_THAN    reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_GREATER_EQUALS_THAN reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_LESS_EQUALS_THAN reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_EQUALS_TWO   reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_NOT_EQUALS   reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_RPAREN       reduce using rule 104 (var_cte -> VAR_STRING .)
    AND             reduce using rule 104 (var_cte -> VAR_STRING .)
    OR              reduce using rule 104 (var_cte -> VAR_STRING .)
    RCURLY_BRACKET  reduce using rule 104 (var_cte -> VAR_STRING .)
    ID              reduce using rule 104 (var_cte -> VAR_STRING .)
    IF              reduce using rule 104 (var_cte -> VAR_STRING .)
    PRINT           reduce using rule 104 (var_cte -> VAR_STRING .)
    FOR             reduce using rule 104 (var_cte -> VAR_STRING .)
    RETURN          reduce using rule 104 (var_cte -> VAR_STRING .)
    FIGURE          reduce using rule 104 (var_cte -> VAR_STRING .)
    INT             reduce using rule 104 (var_cte -> VAR_STRING .)
    FLOAT           reduce using rule 104 (var_cte -> VAR_STRING .)
    STRING          reduce using rule 104 (var_cte -> VAR_STRING .)
    BOOLEAN         reduce using rule 104 (var_cte -> VAR_STRING .)
    OP_LPAREN       reduce using rule 104 (var_cte -> VAR_STRING .)
    VAR_INT         reduce using rule 104 (var_cte -> VAR_STRING .)
    VAR_FLOAT       reduce using rule 104 (var_cte -> VAR_STRING .)
    VAR_STRING      reduce using rule 104 (var_cte -> VAR_STRING .)
    COMA            reduce using rule 104 (var_cte -> VAR_STRING .)


state 38

    (3) vars -> type save_type ID pushTo_varsTable vars_prime . SEMICOLON vars

    SEMICOLON       shift and go to state 46


state 39

    (5) vars_prime -> COMA . ID pushTo_varsTable vars_prime

    ID              shift and go to state 47


state 40

    (6) vars_prime -> epsilon .

    SEMICOLON       reduce using rule 6 (vars_prime -> epsilon .)


state 41

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN . function_bloque
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 49

    function_bloque                shift and go to state 48

state 42

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN . parameters OP_RPAREN function_bloque function
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    type                           shift and go to state 50
    parameters                     shift and go to state 51
    epsilon                        shift and go to state 53

state 43

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN . parameters OP_RPAREN function_bloque function
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    parameters                     shift and go to state 54
    type                           shift and go to state 50
    epsilon                        shift and go to state 53

state 44

    (2) vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE . SEMICOLON vars

    SEMICOLON       shift and go to state 55


state 45

    (7) pushTo_varsTable_WithCTE -> epsilon .

    SEMICOLON       reduce using rule 7 (pushTo_varsTable_WithCTE -> epsilon .)


state 46

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 121 (epsilon -> .)
    MAIN            reduce using rule 121 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)

  ! INT             [ reduce using rule 121 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 121 (epsilon -> .) ]
  ! STRING          [ reduce using rule 121 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 121 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 56
    epsilon                        shift and go to state 7

state 47

    (5) vars_prime -> COMA ID . pushTo_varsTable vars_prime
    (8) pushTo_varsTable -> . epsilon
    (121) epsilon -> .

    COMA            reduce using rule 121 (epsilon -> .)
    SEMICOLON       reduce using rule 121 (epsilon -> .)

    pushTo_varsTable               shift and go to state 57
    epsilon                        shift and go to state 29

state 48

    (14) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque .

    RCURLY_BRACKET  reduce using rule 14 (main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN function_bloque .)


state 49

    (22) function_bloque -> LCURLY_BRACKET . function_bloque_primo RCURLY_BRACKET
    (23) function_bloque_primo -> . function_bloque_primo function_statement
    (24) function_bloque_primo -> . epsilon
    (121) epsilon -> .

    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)
    INT             reduce using rule 121 (epsilon -> .)
    FLOAT           reduce using rule 121 (epsilon -> .)
    STRING          reduce using rule 121 (epsilon -> .)
    BOOLEAN         reduce using rule 121 (epsilon -> .)

    function_bloque_primo          shift and go to state 58
    epsilon                        shift and go to state 59

state 50

    (19) parameters -> type . ID parameters

    ID              shift and go to state 60


state 51

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters . OP_RPAREN function_bloque function

    OP_RPAREN       shift and go to state 61


state 52

    (20) parameters -> COMA . type ID parameters
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 62

state 53

    (21) parameters -> epsilon .

    OP_RPAREN       reduce using rule 21 (parameters -> epsilon .)


state 54

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters . OP_RPAREN function_bloque function

    OP_RPAREN       shift and go to state 63


state 55

    (2) vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON . vars
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 121 (epsilon -> .)
    MAIN            reduce using rule 121 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)

  ! INT             [ reduce using rule 121 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 121 (epsilon -> .) ]
  ! STRING          [ reduce using rule 121 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 121 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 64
    epsilon                        shift and go to state 7

state 56

    (3) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .

    FUNCTION        reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    MAIN            reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ID              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    IF              reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    PRINT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FOR             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RETURN          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FIGURE          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    INT             reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FLOAT           reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    STRING          reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    BOOLEAN         reduce using rule 3 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)


state 57

    (5) vars_prime -> COMA ID pushTo_varsTable . vars_prime
    (5) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (6) vars_prime -> . epsilon
    (121) epsilon -> .

    COMA            shift and go to state 39
    SEMICOLON       reduce using rule 121 (epsilon -> .)

    vars_prime                     shift and go to state 65
    epsilon                        shift and go to state 40

state 58

    (22) function_bloque -> LCURLY_BRACKET function_bloque_primo . RCURLY_BRACKET
    (23) function_bloque_primo -> function_bloque_primo . function_statement
    (25) function_statement -> . assigment
    (26) function_statement -> . if
    (27) function_statement -> . printer
    (28) function_statement -> . increment
    (29) function_statement -> . for
    (30) function_statement -> . return
    (31) function_statement -> . function_call
    (32) function_statement -> . fun_esp
    (33) function_statement -> . vars
    (45) assigment -> . ID OP_EQUALS single_expression SEMICOLON
    (46) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression
    (47) if -> . IF OP_LPAREN condition_mega_expression OP_RPAREN bloque
    (48) if -> . IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque
    (49) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (52) increment -> . ID OP_PLUS_EQUALS single_expression SEMICOLON
    (53) increment -> . ID OP_MINUS_EQUALS single_expression SEMICOLON
    (54) increment -> . ID OP_PLUS OP_PLUS SEMICOLON
    (55) increment -> . ID OP_MINUS OP_MINUS SEMICOLON
    (56) for -> . FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque
    (57) return -> . RETURN single_expression SEMICOLON
    (58) function_call -> . ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (105) fun_esp -> . figure_creation
    (2) vars -> . type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars
    (3) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (4) vars -> . epsilon
    (106) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

  ! shift/reduce conflict for RCURLY_BRACKET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FIGURE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RCURLY_BRACKET  shift and go to state 66
    ID              shift and go to state 77
    IF              shift and go to state 78
    PRINT           shift and go to state 79
    FOR             shift and go to state 80
    RETURN          shift and go to state 81
    FIGURE          shift and go to state 83
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

  ! RCURLY_BRACKET  [ reduce using rule 121 (epsilon -> .) ]
  ! ID              [ reduce using rule 121 (epsilon -> .) ]
  ! IF              [ reduce using rule 121 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 121 (epsilon -> .) ]
  ! FOR             [ reduce using rule 121 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 121 (epsilon -> .) ]
  ! FIGURE          [ reduce using rule 121 (epsilon -> .) ]
  ! INT             [ reduce using rule 121 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 121 (epsilon -> .) ]
  ! STRING          [ reduce using rule 121 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 121 (epsilon -> .) ]

    function_statement             shift and go to state 67
    assigment                      shift and go to state 68
    if                             shift and go to state 69
    printer                        shift and go to state 70
    increment                      shift and go to state 71
    for                            shift and go to state 72
    return                         shift and go to state 73
    function_call                  shift and go to state 74
    fun_esp                        shift and go to state 75
    vars                           shift and go to state 76
    figure_creation                shift and go to state 82
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 59

    (24) function_bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 24 (function_bloque_primo -> epsilon .)
    ID              reduce using rule 24 (function_bloque_primo -> epsilon .)
    IF              reduce using rule 24 (function_bloque_primo -> epsilon .)
    PRINT           reduce using rule 24 (function_bloque_primo -> epsilon .)
    FOR             reduce using rule 24 (function_bloque_primo -> epsilon .)
    RETURN          reduce using rule 24 (function_bloque_primo -> epsilon .)
    FIGURE          reduce using rule 24 (function_bloque_primo -> epsilon .)
    INT             reduce using rule 24 (function_bloque_primo -> epsilon .)
    FLOAT           reduce using rule 24 (function_bloque_primo -> epsilon .)
    STRING          reduce using rule 24 (function_bloque_primo -> epsilon .)
    BOOLEAN         reduce using rule 24 (function_bloque_primo -> epsilon .)


state 60

    (19) parameters -> type ID . parameters
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    type                           shift and go to state 50
    parameters                     shift and go to state 84
    epsilon                        shift and go to state 53

state 61

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN . function_bloque function
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 49

    function_bloque                shift and go to state 85

state 62

    (20) parameters -> COMA type . ID parameters

    ID              shift and go to state 86


state 63

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN . function_bloque function
    (22) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 49

    function_bloque                shift and go to state 87

state 64

    (2) vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .

    FUNCTION        reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    MAIN            reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    ID              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    IF              reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    PRINT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    FOR             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    RETURN          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    FIGURE          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    INT             reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    FLOAT           reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    STRING          reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)
    BOOLEAN         reduce using rule 2 (vars -> type save_type ID OP_EQUALS var_cte pushTo_varsTable_WithCTE SEMICOLON vars .)


state 65

    (5) vars_prime -> COMA ID pushTo_varsTable vars_prime .

    SEMICOLON       reduce using rule 5 (vars_prime -> COMA ID pushTo_varsTable vars_prime .)


state 66

    (22) function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    FUNCTION        reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    MAIN            reduce using rule 22 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)


state 67

    (23) function_bloque_primo -> function_bloque_primo function_statement .

    RCURLY_BRACKET  reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    ID              reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    IF              reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    PRINT           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FOR             reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    RETURN          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FIGURE          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    INT             reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    FLOAT           reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    STRING          reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)
    BOOLEAN         reduce using rule 23 (function_bloque_primo -> function_bloque_primo function_statement .)


state 68

    (25) function_statement -> assigment .

    RCURLY_BRACKET  reduce using rule 25 (function_statement -> assigment .)
    ID              reduce using rule 25 (function_statement -> assigment .)
    IF              reduce using rule 25 (function_statement -> assigment .)
    PRINT           reduce using rule 25 (function_statement -> assigment .)
    FOR             reduce using rule 25 (function_statement -> assigment .)
    RETURN          reduce using rule 25 (function_statement -> assigment .)
    FIGURE          reduce using rule 25 (function_statement -> assigment .)
    INT             reduce using rule 25 (function_statement -> assigment .)
    FLOAT           reduce using rule 25 (function_statement -> assigment .)
    STRING          reduce using rule 25 (function_statement -> assigment .)
    BOOLEAN         reduce using rule 25 (function_statement -> assigment .)


state 69

    (26) function_statement -> if .

    RCURLY_BRACKET  reduce using rule 26 (function_statement -> if .)
    ID              reduce using rule 26 (function_statement -> if .)
    IF              reduce using rule 26 (function_statement -> if .)
    PRINT           reduce using rule 26 (function_statement -> if .)
    FOR             reduce using rule 26 (function_statement -> if .)
    RETURN          reduce using rule 26 (function_statement -> if .)
    FIGURE          reduce using rule 26 (function_statement -> if .)
    INT             reduce using rule 26 (function_statement -> if .)
    FLOAT           reduce using rule 26 (function_statement -> if .)
    STRING          reduce using rule 26 (function_statement -> if .)
    BOOLEAN         reduce using rule 26 (function_statement -> if .)


state 70

    (27) function_statement -> printer .

    RCURLY_BRACKET  reduce using rule 27 (function_statement -> printer .)
    ID              reduce using rule 27 (function_statement -> printer .)
    IF              reduce using rule 27 (function_statement -> printer .)
    PRINT           reduce using rule 27 (function_statement -> printer .)
    FOR             reduce using rule 27 (function_statement -> printer .)
    RETURN          reduce using rule 27 (function_statement -> printer .)
    FIGURE          reduce using rule 27 (function_statement -> printer .)
    INT             reduce using rule 27 (function_statement -> printer .)
    FLOAT           reduce using rule 27 (function_statement -> printer .)
    STRING          reduce using rule 27 (function_statement -> printer .)
    BOOLEAN         reduce using rule 27 (function_statement -> printer .)


state 71

    (28) function_statement -> increment .

    RCURLY_BRACKET  reduce using rule 28 (function_statement -> increment .)
    ID              reduce using rule 28 (function_statement -> increment .)
    IF              reduce using rule 28 (function_statement -> increment .)
    PRINT           reduce using rule 28 (function_statement -> increment .)
    FOR             reduce using rule 28 (function_statement -> increment .)
    RETURN          reduce using rule 28 (function_statement -> increment .)
    FIGURE          reduce using rule 28 (function_statement -> increment .)
    INT             reduce using rule 28 (function_statement -> increment .)
    FLOAT           reduce using rule 28 (function_statement -> increment .)
    STRING          reduce using rule 28 (function_statement -> increment .)
    BOOLEAN         reduce using rule 28 (function_statement -> increment .)


state 72

    (29) function_statement -> for .

    RCURLY_BRACKET  reduce using rule 29 (function_statement -> for .)
    ID              reduce using rule 29 (function_statement -> for .)
    IF              reduce using rule 29 (function_statement -> for .)
    PRINT           reduce using rule 29 (function_statement -> for .)
    FOR             reduce using rule 29 (function_statement -> for .)
    RETURN          reduce using rule 29 (function_statement -> for .)
    FIGURE          reduce using rule 29 (function_statement -> for .)
    INT             reduce using rule 29 (function_statement -> for .)
    FLOAT           reduce using rule 29 (function_statement -> for .)
    STRING          reduce using rule 29 (function_statement -> for .)
    BOOLEAN         reduce using rule 29 (function_statement -> for .)


state 73

    (30) function_statement -> return .

    RCURLY_BRACKET  reduce using rule 30 (function_statement -> return .)
    ID              reduce using rule 30 (function_statement -> return .)
    IF              reduce using rule 30 (function_statement -> return .)
    PRINT           reduce using rule 30 (function_statement -> return .)
    FOR             reduce using rule 30 (function_statement -> return .)
    RETURN          reduce using rule 30 (function_statement -> return .)
    FIGURE          reduce using rule 30 (function_statement -> return .)
    INT             reduce using rule 30 (function_statement -> return .)
    FLOAT           reduce using rule 30 (function_statement -> return .)
    STRING          reduce using rule 30 (function_statement -> return .)
    BOOLEAN         reduce using rule 30 (function_statement -> return .)


state 74

    (31) function_statement -> function_call .

    RCURLY_BRACKET  reduce using rule 31 (function_statement -> function_call .)
    ID              reduce using rule 31 (function_statement -> function_call .)
    IF              reduce using rule 31 (function_statement -> function_call .)
    PRINT           reduce using rule 31 (function_statement -> function_call .)
    FOR             reduce using rule 31 (function_statement -> function_call .)
    RETURN          reduce using rule 31 (function_statement -> function_call .)
    FIGURE          reduce using rule 31 (function_statement -> function_call .)
    INT             reduce using rule 31 (function_statement -> function_call .)
    FLOAT           reduce using rule 31 (function_statement -> function_call .)
    STRING          reduce using rule 31 (function_statement -> function_call .)
    BOOLEAN         reduce using rule 31 (function_statement -> function_call .)


state 75

    (32) function_statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 32 (function_statement -> fun_esp .)
    ID              reduce using rule 32 (function_statement -> fun_esp .)
    IF              reduce using rule 32 (function_statement -> fun_esp .)
    PRINT           reduce using rule 32 (function_statement -> fun_esp .)
    FOR             reduce using rule 32 (function_statement -> fun_esp .)
    RETURN          reduce using rule 32 (function_statement -> fun_esp .)
    FIGURE          reduce using rule 32 (function_statement -> fun_esp .)
    INT             reduce using rule 32 (function_statement -> fun_esp .)
    FLOAT           reduce using rule 32 (function_statement -> fun_esp .)
    STRING          reduce using rule 32 (function_statement -> fun_esp .)
    BOOLEAN         reduce using rule 32 (function_statement -> fun_esp .)


state 76

    (33) function_statement -> vars .

    RCURLY_BRACKET  reduce using rule 33 (function_statement -> vars .)
    ID              reduce using rule 33 (function_statement -> vars .)
    IF              reduce using rule 33 (function_statement -> vars .)
    PRINT           reduce using rule 33 (function_statement -> vars .)
    FOR             reduce using rule 33 (function_statement -> vars .)
    RETURN          reduce using rule 33 (function_statement -> vars .)
    FIGURE          reduce using rule 33 (function_statement -> vars .)
    INT             reduce using rule 33 (function_statement -> vars .)
    FLOAT           reduce using rule 33 (function_statement -> vars .)
    STRING          reduce using rule 33 (function_statement -> vars .)
    BOOLEAN         reduce using rule 33 (function_statement -> vars .)


state 77

    (45) assigment -> ID . OP_EQUALS single_expression SEMICOLON
    (46) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression
    (52) increment -> ID . OP_PLUS_EQUALS single_expression SEMICOLON
    (53) increment -> ID . OP_MINUS_EQUALS single_expression SEMICOLON
    (54) increment -> ID . OP_PLUS OP_PLUS SEMICOLON
    (55) increment -> ID . OP_MINUS OP_MINUS SEMICOLON
    (58) function_call -> ID . OP_LPAREN function_call_prime OP_RPAREN SEMICOLON

    OP_EQUALS       shift and go to state 88
    OP_LSQUARE_PAREN shift and go to state 89
    OP_PLUS_EQUALS  shift and go to state 90
    OP_MINUS_EQUALS shift and go to state 91
    OP_PLUS         shift and go to state 92
    OP_MINUS        shift and go to state 93
    OP_LPAREN       shift and go to state 94


state 78

    (47) if -> IF . OP_LPAREN condition_mega_expression OP_RPAREN bloque
    (48) if -> IF . OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque

    OP_LPAREN       shift and go to state 95


state 79

    (49) printer -> PRINT . OP_LPAREN impression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 96


state 80

    (56) for -> FOR . OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque

    OP_LPAREN       shift and go to state 97


state 81

    (57) return -> RETURN . single_expression SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 98
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 82

    (105) fun_esp -> figure_creation .

    RCURLY_BRACKET  reduce using rule 105 (fun_esp -> figure_creation .)
    ID              reduce using rule 105 (fun_esp -> figure_creation .)
    IF              reduce using rule 105 (fun_esp -> figure_creation .)
    PRINT           reduce using rule 105 (fun_esp -> figure_creation .)
    FOR             reduce using rule 105 (fun_esp -> figure_creation .)
    RETURN          reduce using rule 105 (fun_esp -> figure_creation .)
    FIGURE          reduce using rule 105 (fun_esp -> figure_creation .)
    INT             reduce using rule 105 (fun_esp -> figure_creation .)
    FLOAT           reduce using rule 105 (fun_esp -> figure_creation .)
    STRING          reduce using rule 105 (fun_esp -> figure_creation .)
    BOOLEAN         reduce using rule 105 (fun_esp -> figure_creation .)


state 83

    (106) figure_creation -> FIGURE . ID OP_TWO_POINTS figure POSSESS bloque_figura

    ID              shift and go to state 103


state 84

    (19) parameters -> type ID parameters .

    OP_RPAREN       reduce using rule 19 (parameters -> type ID parameters .)


state 85

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (121) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 121 (epsilon -> .)

    function                       shift and go to state 104
    epsilon                        shift and go to state 14

state 86

    (20) parameters -> COMA type ID . parameters
    (19) parameters -> . type ID parameters
    (20) parameters -> . COMA type ID parameters
    (21) parameters -> . epsilon
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOLEAN
    (121) epsilon -> .

    COMA            shift and go to state 52
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    type                           shift and go to state 50
    parameters                     shift and go to state 105
    epsilon                        shift and go to state 53

state 87

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque . function
    (10) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (11) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function
    (12) function -> . epsilon
    (121) epsilon -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 121 (epsilon -> .)

    function                       shift and go to state 106
    epsilon                        shift and go to state 14

state 88

    (45) assigment -> ID OP_EQUALS . single_expression SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 107
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 89

    (46) assigment -> ID OP_LSQUARE_PAREN . VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression

    VAR_INT         shift and go to state 108


state 90

    (52) increment -> ID OP_PLUS_EQUALS . single_expression SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 109
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 91

    (53) increment -> ID OP_MINUS_EQUALS . single_expression SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 110
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 92

    (54) increment -> ID OP_PLUS . OP_PLUS SEMICOLON

    OP_PLUS         shift and go to state 111


state 93

    (55) increment -> ID OP_MINUS . OP_MINUS SEMICOLON

    OP_MINUS        shift and go to state 112


state 94

    (58) function_call -> ID OP_LPAREN . function_call_prime OP_RPAREN SEMICOLON
    (59) function_call_prime -> . ID function_call_prime
    (60) function_call_prime -> . COMA ID function_call_prime
    (61) function_call_prime -> . epsilon
    (121) epsilon -> .

    ID              shift and go to state 113
    COMA            shift and go to state 115
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    function_call_prime            shift and go to state 114
    epsilon                        shift and go to state 116

state 95

    (47) if -> IF OP_LPAREN . condition_mega_expression OP_RPAREN bloque
    (48) if -> IF OP_LPAREN . condition_mega_expression OP_RPAREN bloque ELSE bloque
    (62) condition_mega_expression -> . condition_super_expression
    (63) condition_mega_expression -> . condition_super_expression AND condition_super_expression
    (64) condition_mega_expression -> . condition_super_expression OR condition_super_expression
    (65) condition_super_expression -> . expression OP_GREATER_THAN expression
    (66) condition_super_expression -> . expression OP_LESS_THAN expression
    (67) condition_super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (68) condition_super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (69) condition_super_expression -> . expression OP_EQUALS_TWO expression
    (70) condition_super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    condition_mega_expression      shift and go to state 118
    condition_super_expression     shift and go to state 119
    expression                     shift and go to state 120
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 96

    (49) printer -> PRINT OP_LPAREN . impression OP_RPAREN SEMICOLON
    (50) impression -> . single_expression
    (51) impression -> . single_expression OP_PLUS impression
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    impression                     shift and go to state 124
    single_expression              shift and go to state 125
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 97

    (56) for -> FOR OP_LPAREN . assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque
    (45) assigment -> . ID OP_EQUALS single_expression SEMICOLON
    (46) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression

    ID              shift and go to state 127

    assigment                      shift and go to state 126

state 98

    (57) return -> RETURN single_expression . SEMICOLON

    SEMICOLON       shift and go to state 128


state 99

    (71) single_expression -> single_term . check_symbol_exp
    (72) single_expression -> single_term . check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> single_term . check_symbol_exp OP_MINUS push_symbol single_expression
    (74) check_symbol_exp -> . epsilon
    (121) epsilon -> .

    OP_PLUS         reduce using rule 121 (epsilon -> .)
    OP_MINUS        reduce using rule 121 (epsilon -> .)
    SEMICOLON       reduce using rule 121 (epsilon -> .)
    OP_RPAREN       reduce using rule 121 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)
    INT             reduce using rule 121 (epsilon -> .)
    FLOAT           reduce using rule 121 (epsilon -> .)
    STRING          reduce using rule 121 (epsilon -> .)
    BOOLEAN         reduce using rule 121 (epsilon -> .)
    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)
    COMA            reduce using rule 121 (epsilon -> .)

    check_symbol_exp               shift and go to state 129
    epsilon                        shift and go to state 130

state 100

    (75) single_term -> single_fact . check_symbol_term
    (76) single_term -> single_fact . check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> single_fact . check_symbol_term OP_TIMES push_symbol single_term
    (78) check_symbol_term -> . epsilon
    (121) epsilon -> .

    OP_DIVISION     reduce using rule 121 (epsilon -> .)
    OP_TIMES        reduce using rule 121 (epsilon -> .)
    OP_PLUS         reduce using rule 121 (epsilon -> .)
    OP_MINUS        reduce using rule 121 (epsilon -> .)
    SEMICOLON       reduce using rule 121 (epsilon -> .)
    OP_RPAREN       reduce using rule 121 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)
    INT             reduce using rule 121 (epsilon -> .)
    FLOAT           reduce using rule 121 (epsilon -> .)
    STRING          reduce using rule 121 (epsilon -> .)
    BOOLEAN         reduce using rule 121 (epsilon -> .)
    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)
    COMA            reduce using rule 121 (epsilon -> .)

    check_symbol_term              shift and go to state 131
    epsilon                        shift and go to state 132

state 101

    (80) single_fact -> var_cte . push_var_cte
    (82) push_var_cte -> . epsilon
    (121) epsilon -> .

    OP_DIVISION     reduce using rule 121 (epsilon -> .)
    OP_TIMES        reduce using rule 121 (epsilon -> .)
    OP_PLUS         reduce using rule 121 (epsilon -> .)
    OP_MINUS        reduce using rule 121 (epsilon -> .)
    SEMICOLON       reduce using rule 121 (epsilon -> .)
    OP_RPAREN       reduce using rule 121 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)
    INT             reduce using rule 121 (epsilon -> .)
    FLOAT           reduce using rule 121 (epsilon -> .)
    STRING          reduce using rule 121 (epsilon -> .)
    BOOLEAN         reduce using rule 121 (epsilon -> .)
    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)
    COMA            reduce using rule 121 (epsilon -> .)

    push_var_cte                   shift and go to state 133
    epsilon                        shift and go to state 134

state 102

    (81) single_fact -> OP_LPAREN . single_expression OP_RPAREN
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 135
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 103

    (106) figure_creation -> FIGURE ID . OP_TWO_POINTS figure POSSESS bloque_figura

    OP_TWO_POINTS   shift and go to state 136


state 104

    (10) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .

    MAIN            reduce using rule 10 (function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .)


state 105

    (20) parameters -> COMA type ID parameters .

    OP_RPAREN       reduce using rule 20 (parameters -> COMA type ID parameters .)


state 106

    (11) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .

    MAIN            reduce using rule 11 (function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN parameters OP_RPAREN function_bloque function .)


state 107

    (45) assigment -> ID OP_EQUALS single_expression . SEMICOLON

    SEMICOLON       shift and go to state 137


state 108

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT . OP_RSQUARE_PAREN OP_EQUALS single_expression

    OP_RSQUARE_PAREN shift and go to state 138


state 109

    (52) increment -> ID OP_PLUS_EQUALS single_expression . SEMICOLON

    SEMICOLON       shift and go to state 139


state 110

    (53) increment -> ID OP_MINUS_EQUALS single_expression . SEMICOLON

    SEMICOLON       shift and go to state 140


state 111

    (54) increment -> ID OP_PLUS OP_PLUS . SEMICOLON

    SEMICOLON       shift and go to state 141


state 112

    (55) increment -> ID OP_MINUS OP_MINUS . SEMICOLON

    SEMICOLON       shift and go to state 142


state 113

    (59) function_call_prime -> ID . function_call_prime
    (59) function_call_prime -> . ID function_call_prime
    (60) function_call_prime -> . COMA ID function_call_prime
    (61) function_call_prime -> . epsilon
    (121) epsilon -> .

    ID              shift and go to state 113
    COMA            shift and go to state 115
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    function_call_prime            shift and go to state 143
    epsilon                        shift and go to state 116

state 114

    (58) function_call -> ID OP_LPAREN function_call_prime . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 144


state 115

    (60) function_call_prime -> COMA . ID function_call_prime

    ID              shift and go to state 145


state 116

    (61) function_call_prime -> epsilon .

    OP_RPAREN       reduce using rule 61 (function_call_prime -> epsilon .)


state 117

    (100) fact -> OP_LPAREN . mega_expression OP_RPAREN
    (83) mega_expression -> . super_expression
    (84) mega_expression -> . super_expression AND super_expression
    (85) mega_expression -> . super_expression OR super_expression
    (86) super_expression -> . expression
    (87) super_expression -> . expression OP_GREATER_THAN expression
    (88) super_expression -> . expression OP_LESS_THAN expression
    (89) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (90) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (91) super_expression -> . expression OP_EQUALS_TWO expression
    (92) super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    mega_expression                shift and go to state 146
    super_expression               shift and go to state 147
    expression                     shift and go to state 148
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 118

    (47) if -> IF OP_LPAREN condition_mega_expression . OP_RPAREN bloque
    (48) if -> IF OP_LPAREN condition_mega_expression . OP_RPAREN bloque ELSE bloque

    OP_RPAREN       shift and go to state 149


state 119

    (62) condition_mega_expression -> condition_super_expression .
    (63) condition_mega_expression -> condition_super_expression . AND condition_super_expression
    (64) condition_mega_expression -> condition_super_expression . OR condition_super_expression

    OP_RPAREN       reduce using rule 62 (condition_mega_expression -> condition_super_expression .)
    AND             shift and go to state 150
    OR              shift and go to state 151


state 120

    (65) condition_super_expression -> expression . OP_GREATER_THAN expression
    (66) condition_super_expression -> expression . OP_LESS_THAN expression
    (67) condition_super_expression -> expression . OP_GREATER_EQUALS_THAN expression
    (68) condition_super_expression -> expression . OP_LESS_EQUALS_THAN expression
    (69) condition_super_expression -> expression . OP_EQUALS_TWO expression
    (70) condition_super_expression -> expression . OP_NOT_EQUALS expression

    OP_GREATER_THAN shift and go to state 152
    OP_LESS_THAN    shift and go to state 153
    OP_GREATER_EQUALS_THAN shift and go to state 154
    OP_LESS_EQUALS_THAN shift and go to state 155
    OP_EQUALS_TWO   shift and go to state 156
    OP_NOT_EQUALS   shift and go to state 157


state 121

    (93) expression -> term .
    (94) expression -> term . OP_PLUS expression
    (95) expression -> term . OP_MINUS expression

    OP_GREATER_THAN reduce using rule 93 (expression -> term .)
    OP_LESS_THAN    reduce using rule 93 (expression -> term .)
    OP_GREATER_EQUALS_THAN reduce using rule 93 (expression -> term .)
    OP_LESS_EQUALS_THAN reduce using rule 93 (expression -> term .)
    OP_EQUALS_TWO   reduce using rule 93 (expression -> term .)
    OP_NOT_EQUALS   reduce using rule 93 (expression -> term .)
    AND             reduce using rule 93 (expression -> term .)
    OR              reduce using rule 93 (expression -> term .)
    OP_RPAREN       reduce using rule 93 (expression -> term .)
    SEMICOLON       reduce using rule 93 (expression -> term .)
    OP_PLUS         shift and go to state 158
    OP_MINUS        shift and go to state 159


state 122

    (96) term -> fact .
    (97) term -> fact . OP_DIVISION term
    (98) term -> fact . OP_TIMES term

    OP_PLUS         reduce using rule 96 (term -> fact .)
    OP_MINUS        reduce using rule 96 (term -> fact .)
    OP_GREATER_THAN reduce using rule 96 (term -> fact .)
    OP_LESS_THAN    reduce using rule 96 (term -> fact .)
    OP_GREATER_EQUALS_THAN reduce using rule 96 (term -> fact .)
    OP_LESS_EQUALS_THAN reduce using rule 96 (term -> fact .)
    OP_EQUALS_TWO   reduce using rule 96 (term -> fact .)
    OP_NOT_EQUALS   reduce using rule 96 (term -> fact .)
    AND             reduce using rule 96 (term -> fact .)
    OR              reduce using rule 96 (term -> fact .)
    OP_RPAREN       reduce using rule 96 (term -> fact .)
    SEMICOLON       reduce using rule 96 (term -> fact .)
    OP_DIVISION     shift and go to state 160
    OP_TIMES        shift and go to state 161


state 123

    (99) fact -> var_cte .

    OP_DIVISION     reduce using rule 99 (fact -> var_cte .)
    OP_TIMES        reduce using rule 99 (fact -> var_cte .)
    OP_PLUS         reduce using rule 99 (fact -> var_cte .)
    OP_MINUS        reduce using rule 99 (fact -> var_cte .)
    OP_GREATER_THAN reduce using rule 99 (fact -> var_cte .)
    OP_LESS_THAN    reduce using rule 99 (fact -> var_cte .)
    OP_GREATER_EQUALS_THAN reduce using rule 99 (fact -> var_cte .)
    OP_LESS_EQUALS_THAN reduce using rule 99 (fact -> var_cte .)
    OP_EQUALS_TWO   reduce using rule 99 (fact -> var_cte .)
    OP_NOT_EQUALS   reduce using rule 99 (fact -> var_cte .)
    AND             reduce using rule 99 (fact -> var_cte .)
    OR              reduce using rule 99 (fact -> var_cte .)
    OP_RPAREN       reduce using rule 99 (fact -> var_cte .)
    SEMICOLON       reduce using rule 99 (fact -> var_cte .)


state 124

    (49) printer -> PRINT OP_LPAREN impression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 162


state 125

    (50) impression -> single_expression .
    (51) impression -> single_expression . OP_PLUS impression

    OP_RPAREN       reduce using rule 50 (impression -> single_expression .)
    OP_PLUS         shift and go to state 163


state 126

    (56) for -> FOR OP_LPAREN assigment . condition_super_expression SEMICOLON increment OP_RPAREN bloque
    (65) condition_super_expression -> . expression OP_GREATER_THAN expression
    (66) condition_super_expression -> . expression OP_LESS_THAN expression
    (67) condition_super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (68) condition_super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (69) condition_super_expression -> . expression OP_EQUALS_TWO expression
    (70) condition_super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    condition_super_expression     shift and go to state 164
    expression                     shift and go to state 120
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 127

    (45) assigment -> ID . OP_EQUALS single_expression SEMICOLON
    (46) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression

    OP_EQUALS       shift and go to state 88
    OP_LSQUARE_PAREN shift and go to state 89


state 128

    (57) return -> RETURN single_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    ID              reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    IF              reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    PRINT           reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    FOR             reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    RETURN          reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    FIGURE          reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    INT             reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    FLOAT           reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    STRING          reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)
    BOOLEAN         reduce using rule 57 (return -> RETURN single_expression SEMICOLON .)


state 129

    (71) single_expression -> single_term check_symbol_exp .
    (72) single_expression -> single_term check_symbol_exp . OP_PLUS push_symbol single_expression
    (73) single_expression -> single_term check_symbol_exp . OP_MINUS push_symbol single_expression

  ! shift/reduce conflict for OP_PLUS resolved as shift
    SEMICOLON       reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    OP_RPAREN       reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    RCURLY_BRACKET  reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    ID              reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    IF              reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    PRINT           reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    FOR             reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    RETURN          reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    FIGURE          reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    INT             reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    FLOAT           reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    STRING          reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    BOOLEAN         reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    OP_LPAREN       reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    VAR_INT         reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    VAR_FLOAT       reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    VAR_STRING      reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    COMA            reduce using rule 71 (single_expression -> single_term check_symbol_exp .)
    OP_PLUS         shift and go to state 165
    OP_MINUS        shift and go to state 166

  ! OP_PLUS         [ reduce using rule 71 (single_expression -> single_term check_symbol_exp .) ]


state 130

    (74) check_symbol_exp -> epsilon .

    OP_PLUS         reduce using rule 74 (check_symbol_exp -> epsilon .)
    OP_MINUS        reduce using rule 74 (check_symbol_exp -> epsilon .)
    SEMICOLON       reduce using rule 74 (check_symbol_exp -> epsilon .)
    OP_RPAREN       reduce using rule 74 (check_symbol_exp -> epsilon .)
    RCURLY_BRACKET  reduce using rule 74 (check_symbol_exp -> epsilon .)
    ID              reduce using rule 74 (check_symbol_exp -> epsilon .)
    IF              reduce using rule 74 (check_symbol_exp -> epsilon .)
    PRINT           reduce using rule 74 (check_symbol_exp -> epsilon .)
    FOR             reduce using rule 74 (check_symbol_exp -> epsilon .)
    RETURN          reduce using rule 74 (check_symbol_exp -> epsilon .)
    FIGURE          reduce using rule 74 (check_symbol_exp -> epsilon .)
    INT             reduce using rule 74 (check_symbol_exp -> epsilon .)
    FLOAT           reduce using rule 74 (check_symbol_exp -> epsilon .)
    STRING          reduce using rule 74 (check_symbol_exp -> epsilon .)
    BOOLEAN         reduce using rule 74 (check_symbol_exp -> epsilon .)
    OP_LPAREN       reduce using rule 74 (check_symbol_exp -> epsilon .)
    VAR_INT         reduce using rule 74 (check_symbol_exp -> epsilon .)
    VAR_FLOAT       reduce using rule 74 (check_symbol_exp -> epsilon .)
    VAR_STRING      reduce using rule 74 (check_symbol_exp -> epsilon .)
    COMA            reduce using rule 74 (check_symbol_exp -> epsilon .)


state 131

    (75) single_term -> single_fact check_symbol_term .
    (76) single_term -> single_fact check_symbol_term . OP_DIVISION push_symbol single_term
    (77) single_term -> single_fact check_symbol_term . OP_TIMES push_symbol single_term

    OP_PLUS         reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    OP_MINUS        reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    SEMICOLON       reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    OP_RPAREN       reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    RCURLY_BRACKET  reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    ID              reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    IF              reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    PRINT           reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    FOR             reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    RETURN          reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    FIGURE          reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    INT             reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    FLOAT           reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    STRING          reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    BOOLEAN         reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    OP_LPAREN       reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    VAR_INT         reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    VAR_FLOAT       reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    VAR_STRING      reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    COMA            reduce using rule 75 (single_term -> single_fact check_symbol_term .)
    OP_DIVISION     shift and go to state 167
    OP_TIMES        shift and go to state 168


state 132

    (78) check_symbol_term -> epsilon .

    OP_DIVISION     reduce using rule 78 (check_symbol_term -> epsilon .)
    OP_TIMES        reduce using rule 78 (check_symbol_term -> epsilon .)
    OP_PLUS         reduce using rule 78 (check_symbol_term -> epsilon .)
    OP_MINUS        reduce using rule 78 (check_symbol_term -> epsilon .)
    SEMICOLON       reduce using rule 78 (check_symbol_term -> epsilon .)
    OP_RPAREN       reduce using rule 78 (check_symbol_term -> epsilon .)
    RCURLY_BRACKET  reduce using rule 78 (check_symbol_term -> epsilon .)
    ID              reduce using rule 78 (check_symbol_term -> epsilon .)
    IF              reduce using rule 78 (check_symbol_term -> epsilon .)
    PRINT           reduce using rule 78 (check_symbol_term -> epsilon .)
    FOR             reduce using rule 78 (check_symbol_term -> epsilon .)
    RETURN          reduce using rule 78 (check_symbol_term -> epsilon .)
    FIGURE          reduce using rule 78 (check_symbol_term -> epsilon .)
    INT             reduce using rule 78 (check_symbol_term -> epsilon .)
    FLOAT           reduce using rule 78 (check_symbol_term -> epsilon .)
    STRING          reduce using rule 78 (check_symbol_term -> epsilon .)
    BOOLEAN         reduce using rule 78 (check_symbol_term -> epsilon .)
    OP_LPAREN       reduce using rule 78 (check_symbol_term -> epsilon .)
    VAR_INT         reduce using rule 78 (check_symbol_term -> epsilon .)
    VAR_FLOAT       reduce using rule 78 (check_symbol_term -> epsilon .)
    VAR_STRING      reduce using rule 78 (check_symbol_term -> epsilon .)
    COMA            reduce using rule 78 (check_symbol_term -> epsilon .)


state 133

    (80) single_fact -> var_cte push_var_cte .

    OP_DIVISION     reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    OP_TIMES        reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    OP_PLUS         reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    OP_MINUS        reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    SEMICOLON       reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    OP_RPAREN       reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    RCURLY_BRACKET  reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    ID              reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    IF              reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    PRINT           reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    FOR             reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    RETURN          reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    FIGURE          reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    INT             reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    FLOAT           reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    STRING          reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    BOOLEAN         reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    OP_LPAREN       reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    VAR_INT         reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    VAR_FLOAT       reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    VAR_STRING      reduce using rule 80 (single_fact -> var_cte push_var_cte .)
    COMA            reduce using rule 80 (single_fact -> var_cte push_var_cte .)


state 134

    (82) push_var_cte -> epsilon .

    OP_DIVISION     reduce using rule 82 (push_var_cte -> epsilon .)
    OP_TIMES        reduce using rule 82 (push_var_cte -> epsilon .)
    OP_PLUS         reduce using rule 82 (push_var_cte -> epsilon .)
    OP_MINUS        reduce using rule 82 (push_var_cte -> epsilon .)
    SEMICOLON       reduce using rule 82 (push_var_cte -> epsilon .)
    OP_RPAREN       reduce using rule 82 (push_var_cte -> epsilon .)
    RCURLY_BRACKET  reduce using rule 82 (push_var_cte -> epsilon .)
    ID              reduce using rule 82 (push_var_cte -> epsilon .)
    IF              reduce using rule 82 (push_var_cte -> epsilon .)
    PRINT           reduce using rule 82 (push_var_cte -> epsilon .)
    FOR             reduce using rule 82 (push_var_cte -> epsilon .)
    RETURN          reduce using rule 82 (push_var_cte -> epsilon .)
    FIGURE          reduce using rule 82 (push_var_cte -> epsilon .)
    INT             reduce using rule 82 (push_var_cte -> epsilon .)
    FLOAT           reduce using rule 82 (push_var_cte -> epsilon .)
    STRING          reduce using rule 82 (push_var_cte -> epsilon .)
    BOOLEAN         reduce using rule 82 (push_var_cte -> epsilon .)
    OP_LPAREN       reduce using rule 82 (push_var_cte -> epsilon .)
    VAR_INT         reduce using rule 82 (push_var_cte -> epsilon .)
    VAR_FLOAT       reduce using rule 82 (push_var_cte -> epsilon .)
    VAR_STRING      reduce using rule 82 (push_var_cte -> epsilon .)
    COMA            reduce using rule 82 (push_var_cte -> epsilon .)


state 135

    (81) single_fact -> OP_LPAREN single_expression . OP_RPAREN

    OP_RPAREN       shift and go to state 169


state 136

    (106) figure_creation -> FIGURE ID OP_TWO_POINTS . figure POSSESS bloque_figura
    (107) figure -> . POINT
    (108) figure -> . LINE
    (109) figure -> . SQUARE
    (110) figure -> . RECTANGLE
    (111) figure -> . TRIANGLE
    (112) figure -> . CIRCLE
    (113) figure -> . ARC

    POINT           shift and go to state 171
    LINE            shift and go to state 172
    SQUARE          shift and go to state 173
    RECTANGLE       shift and go to state 174
    TRIANGLE        shift and go to state 175
    CIRCLE          shift and go to state 176
    ARC             shift and go to state 177

    figure                         shift and go to state 170

state 137

    (45) assigment -> ID OP_EQUALS single_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    ID              reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    IF              reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    PRINT           reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    FOR             reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    RETURN          reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    FIGURE          reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    INT             reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    FLOAT           reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    STRING          reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    BOOLEAN         reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    OP_LPAREN       reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    VAR_INT         reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)
    VAR_STRING      reduce using rule 45 (assigment -> ID OP_EQUALS single_expression SEMICOLON .)


state 138

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN . OP_EQUALS single_expression

    OP_EQUALS       shift and go to state 178


state 139

    (52) increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    ID              reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    IF              reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    PRINT           reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    FOR             reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    RETURN          reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    FIGURE          reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    INT             reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    FLOAT           reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    STRING          reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    BOOLEAN         reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)
    OP_RPAREN       reduce using rule 52 (increment -> ID OP_PLUS_EQUALS single_expression SEMICOLON .)


state 140

    (53) increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    ID              reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    IF              reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    PRINT           reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    FOR             reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    RETURN          reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    FIGURE          reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    INT             reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    FLOAT           reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    STRING          reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    BOOLEAN         reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)
    OP_RPAREN       reduce using rule 53 (increment -> ID OP_MINUS_EQUALS single_expression SEMICOLON .)


state 141

    (54) increment -> ID OP_PLUS OP_PLUS SEMICOLON .

    RCURLY_BRACKET  reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    ID              reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    IF              reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    PRINT           reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    FOR             reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    RETURN          reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    FIGURE          reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    INT             reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    FLOAT           reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    STRING          reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    BOOLEAN         reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)
    OP_RPAREN       reduce using rule 54 (increment -> ID OP_PLUS OP_PLUS SEMICOLON .)


state 142

    (55) increment -> ID OP_MINUS OP_MINUS SEMICOLON .

    RCURLY_BRACKET  reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    ID              reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    IF              reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    PRINT           reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    FOR             reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    RETURN          reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    FIGURE          reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    INT             reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    FLOAT           reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    STRING          reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    BOOLEAN         reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)
    OP_RPAREN       reduce using rule 55 (increment -> ID OP_MINUS OP_MINUS SEMICOLON .)


state 143

    (59) function_call_prime -> ID function_call_prime .

    OP_RPAREN       reduce using rule 59 (function_call_prime -> ID function_call_prime .)


state 144

    (58) function_call -> ID OP_LPAREN function_call_prime OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 145

    (60) function_call_prime -> COMA ID . function_call_prime
    (59) function_call_prime -> . ID function_call_prime
    (60) function_call_prime -> . COMA ID function_call_prime
    (61) function_call_prime -> . epsilon
    (121) epsilon -> .

    ID              shift and go to state 113
    COMA            shift and go to state 115
    OP_RPAREN       reduce using rule 121 (epsilon -> .)

    function_call_prime            shift and go to state 180
    epsilon                        shift and go to state 116

state 146

    (100) fact -> OP_LPAREN mega_expression . OP_RPAREN

    OP_RPAREN       shift and go to state 181


state 147

    (83) mega_expression -> super_expression .
    (84) mega_expression -> super_expression . AND super_expression
    (85) mega_expression -> super_expression . OR super_expression

    OP_RPAREN       reduce using rule 83 (mega_expression -> super_expression .)
    AND             shift and go to state 182
    OR              shift and go to state 183


state 148

    (86) super_expression -> expression .
    (87) super_expression -> expression . OP_GREATER_THAN expression
    (88) super_expression -> expression . OP_LESS_THAN expression
    (89) super_expression -> expression . OP_GREATER_EQUALS_THAN expression
    (90) super_expression -> expression . OP_LESS_EQUALS_THAN expression
    (91) super_expression -> expression . OP_EQUALS_TWO expression
    (92) super_expression -> expression . OP_NOT_EQUALS expression

    AND             reduce using rule 86 (super_expression -> expression .)
    OR              reduce using rule 86 (super_expression -> expression .)
    OP_RPAREN       reduce using rule 86 (super_expression -> expression .)
    OP_GREATER_THAN shift and go to state 184
    OP_LESS_THAN    shift and go to state 185
    OP_GREATER_EQUALS_THAN shift and go to state 186
    OP_LESS_EQUALS_THAN shift and go to state 187
    OP_EQUALS_TWO   shift and go to state 188
    OP_NOT_EQUALS   shift and go to state 189


state 149

    (47) if -> IF OP_LPAREN condition_mega_expression OP_RPAREN . bloque
    (48) if -> IF OP_LPAREN condition_mega_expression OP_RPAREN . bloque ELSE bloque
    (34) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 191

    bloque                         shift and go to state 190

state 150

    (63) condition_mega_expression -> condition_super_expression AND . condition_super_expression
    (65) condition_super_expression -> . expression OP_GREATER_THAN expression
    (66) condition_super_expression -> . expression OP_LESS_THAN expression
    (67) condition_super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (68) condition_super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (69) condition_super_expression -> . expression OP_EQUALS_TWO expression
    (70) condition_super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    condition_super_expression     shift and go to state 192
    expression                     shift and go to state 120
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 151

    (64) condition_mega_expression -> condition_super_expression OR . condition_super_expression
    (65) condition_super_expression -> . expression OP_GREATER_THAN expression
    (66) condition_super_expression -> . expression OP_LESS_THAN expression
    (67) condition_super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (68) condition_super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (69) condition_super_expression -> . expression OP_EQUALS_TWO expression
    (70) condition_super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    condition_super_expression     shift and go to state 193
    expression                     shift and go to state 120
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 152

    (65) condition_super_expression -> expression OP_GREATER_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 194
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 153

    (66) condition_super_expression -> expression OP_LESS_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 195
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 154

    (67) condition_super_expression -> expression OP_GREATER_EQUALS_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 196
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 155

    (68) condition_super_expression -> expression OP_LESS_EQUALS_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 197
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 156

    (69) condition_super_expression -> expression OP_EQUALS_TWO . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 198
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 157

    (70) condition_super_expression -> expression OP_NOT_EQUALS . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 199
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 158

    (94) expression -> term OP_PLUS . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    term                           shift and go to state 121
    expression                     shift and go to state 200
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 159

    (95) expression -> term OP_MINUS . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    term                           shift and go to state 121
    expression                     shift and go to state 201
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 160

    (97) term -> fact OP_DIVISION . term
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    fact                           shift and go to state 122
    term                           shift and go to state 202
    var_cte                        shift and go to state 123

state 161

    (98) term -> fact OP_TIMES . term
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    fact                           shift and go to state 122
    term                           shift and go to state 203
    var_cte                        shift and go to state 123

state 162

    (49) printer -> PRINT OP_LPAREN impression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 204


state 163

    (51) impression -> single_expression OP_PLUS . impression
    (50) impression -> . single_expression
    (51) impression -> . single_expression OP_PLUS impression
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 125
    impression                     shift and go to state 205
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 164

    (56) for -> FOR OP_LPAREN assigment condition_super_expression . SEMICOLON increment OP_RPAREN bloque

    SEMICOLON       shift and go to state 206


state 165

    (72) single_expression -> single_term check_symbol_exp OP_PLUS . push_symbol single_expression
    (79) push_symbol -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)

    push_symbol                    shift and go to state 207
    epsilon                        shift and go to state 208

state 166

    (73) single_expression -> single_term check_symbol_exp OP_MINUS . push_symbol single_expression
    (79) push_symbol -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)

    push_symbol                    shift and go to state 209
    epsilon                        shift and go to state 208

state 167

    (76) single_term -> single_fact check_symbol_term OP_DIVISION . push_symbol single_term
    (79) push_symbol -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)

    push_symbol                    shift and go to state 210
    epsilon                        shift and go to state 208

state 168

    (77) single_term -> single_fact check_symbol_term OP_TIMES . push_symbol single_term
    (79) push_symbol -> . epsilon
    (121) epsilon -> .

    OP_LPAREN       reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    VAR_INT         reduce using rule 121 (epsilon -> .)
    VAR_FLOAT       reduce using rule 121 (epsilon -> .)
    VAR_STRING      reduce using rule 121 (epsilon -> .)

    push_symbol                    shift and go to state 211
    epsilon                        shift and go to state 208

state 169

    (81) single_fact -> OP_LPAREN single_expression OP_RPAREN .

    OP_DIVISION     reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    OP_TIMES        reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    OP_PLUS         reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    OP_MINUS        reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    SEMICOLON       reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    OP_RPAREN       reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    RCURLY_BRACKET  reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    ID              reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    IF              reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    PRINT           reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    FOR             reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    RETURN          reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    FIGURE          reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    INT             reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    FLOAT           reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    STRING          reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    BOOLEAN         reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    OP_LPAREN       reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    VAR_INT         reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    VAR_FLOAT       reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    VAR_STRING      reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)
    COMA            reduce using rule 81 (single_fact -> OP_LPAREN single_expression OP_RPAREN .)


state 170

    (106) figure_creation -> FIGURE ID OP_TWO_POINTS figure . POSSESS bloque_figura

    POSSESS         shift and go to state 212


state 171

    (107) figure -> POINT .

    POSSESS         reduce using rule 107 (figure -> POINT .)


state 172

    (108) figure -> LINE .

    POSSESS         reduce using rule 108 (figure -> LINE .)


state 173

    (109) figure -> SQUARE .

    POSSESS         reduce using rule 109 (figure -> SQUARE .)


state 174

    (110) figure -> RECTANGLE .

    POSSESS         reduce using rule 110 (figure -> RECTANGLE .)


state 175

    (111) figure -> TRIANGLE .

    POSSESS         reduce using rule 111 (figure -> TRIANGLE .)


state 176

    (112) figure -> CIRCLE .

    POSSESS         reduce using rule 112 (figure -> CIRCLE .)


state 177

    (113) figure -> ARC .

    POSSESS         reduce using rule 113 (figure -> ARC .)


state 178

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS . single_expression
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 213
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 179

    (58) function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    ID              reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    IF              reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    INT             reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 58 (function_call -> ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON .)


state 180

    (60) function_call_prime -> COMA ID function_call_prime .

    OP_RPAREN       reduce using rule 60 (function_call_prime -> COMA ID function_call_prime .)


state 181

    (100) fact -> OP_LPAREN mega_expression OP_RPAREN .

    OP_DIVISION     reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_TIMES        reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_PLUS         reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_MINUS        reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_GREATER_THAN reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_LESS_THAN    reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_GREATER_EQUALS_THAN reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_LESS_EQUALS_THAN reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_EQUALS_TWO   reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_NOT_EQUALS   reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    AND             reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OR              reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    OP_RPAREN       reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)
    SEMICOLON       reduce using rule 100 (fact -> OP_LPAREN mega_expression OP_RPAREN .)


state 182

    (84) mega_expression -> super_expression AND . super_expression
    (86) super_expression -> . expression
    (87) super_expression -> . expression OP_GREATER_THAN expression
    (88) super_expression -> . expression OP_LESS_THAN expression
    (89) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (90) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (91) super_expression -> . expression OP_EQUALS_TWO expression
    (92) super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    super_expression               shift and go to state 214
    expression                     shift and go to state 148
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 183

    (85) mega_expression -> super_expression OR . super_expression
    (86) super_expression -> . expression
    (87) super_expression -> . expression OP_GREATER_THAN expression
    (88) super_expression -> . expression OP_LESS_THAN expression
    (89) super_expression -> . expression OP_GREATER_EQUALS_THAN expression
    (90) super_expression -> . expression OP_LESS_EQUALS_THAN expression
    (91) super_expression -> . expression OP_EQUALS_TWO expression
    (92) super_expression -> . expression OP_NOT_EQUALS expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    super_expression               shift and go to state 215
    expression                     shift and go to state 148
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 184

    (87) super_expression -> expression OP_GREATER_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 216
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 185

    (88) super_expression -> expression OP_LESS_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 217
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 186

    (89) super_expression -> expression OP_GREATER_EQUALS_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 218
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 187

    (90) super_expression -> expression OP_LESS_EQUALS_THAN . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 219
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 188

    (91) super_expression -> expression OP_EQUALS_TWO . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 220
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 189

    (92) super_expression -> expression OP_NOT_EQUALS . expression
    (93) expression -> . term
    (94) expression -> . term OP_PLUS expression
    (95) expression -> . term OP_MINUS expression
    (96) term -> . fact
    (97) term -> . fact OP_DIVISION term
    (98) term -> . fact OP_TIMES term
    (99) fact -> . var_cte
    (100) fact -> . OP_LPAREN mega_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 117
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    expression                     shift and go to state 221
    term                           shift and go to state 121
    fact                           shift and go to state 122
    var_cte                        shift and go to state 123

state 190

    (47) if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .
    (48) if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque . ELSE bloque

    RCURLY_BRACKET  reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    ID              reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    IF              reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    PRINT           reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    FOR             reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    RETURN          reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    FIGURE          reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    INT             reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    FLOAT           reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    STRING          reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    BOOLEAN         reduce using rule 47 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque .)
    ELSE            shift and go to state 222


state 191

    (34) bloque -> LCURLY_BRACKET . bloque_primo RCURLY_BRACKET
    (35) bloque_primo -> . bloque_primo statement
    (36) bloque_primo -> . epsilon
    (121) epsilon -> .

    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    ID              reduce using rule 121 (epsilon -> .)
    IF              reduce using rule 121 (epsilon -> .)
    PRINT           reduce using rule 121 (epsilon -> .)
    FOR             reduce using rule 121 (epsilon -> .)
    RETURN          reduce using rule 121 (epsilon -> .)
    FIGURE          reduce using rule 121 (epsilon -> .)

    bloque_primo                   shift and go to state 223
    epsilon                        shift and go to state 224

state 192

    (63) condition_mega_expression -> condition_super_expression AND condition_super_expression .

    OP_RPAREN       reduce using rule 63 (condition_mega_expression -> condition_super_expression AND condition_super_expression .)


state 193

    (64) condition_mega_expression -> condition_super_expression OR condition_super_expression .

    OP_RPAREN       reduce using rule 64 (condition_mega_expression -> condition_super_expression OR condition_super_expression .)


state 194

    (65) condition_super_expression -> expression OP_GREATER_THAN expression .

    AND             reduce using rule 65 (condition_super_expression -> expression OP_GREATER_THAN expression .)
    OR              reduce using rule 65 (condition_super_expression -> expression OP_GREATER_THAN expression .)
    OP_RPAREN       reduce using rule 65 (condition_super_expression -> expression OP_GREATER_THAN expression .)
    SEMICOLON       reduce using rule 65 (condition_super_expression -> expression OP_GREATER_THAN expression .)


state 195

    (66) condition_super_expression -> expression OP_LESS_THAN expression .

    AND             reduce using rule 66 (condition_super_expression -> expression OP_LESS_THAN expression .)
    OR              reduce using rule 66 (condition_super_expression -> expression OP_LESS_THAN expression .)
    OP_RPAREN       reduce using rule 66 (condition_super_expression -> expression OP_LESS_THAN expression .)
    SEMICOLON       reduce using rule 66 (condition_super_expression -> expression OP_LESS_THAN expression .)


state 196

    (67) condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression .

    AND             reduce using rule 67 (condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    OR              reduce using rule 67 (condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    OP_RPAREN       reduce using rule 67 (condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    SEMICOLON       reduce using rule 67 (condition_super_expression -> expression OP_GREATER_EQUALS_THAN expression .)


state 197

    (68) condition_super_expression -> expression OP_LESS_EQUALS_THAN expression .

    AND             reduce using rule 68 (condition_super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    OR              reduce using rule 68 (condition_super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    OP_RPAREN       reduce using rule 68 (condition_super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    SEMICOLON       reduce using rule 68 (condition_super_expression -> expression OP_LESS_EQUALS_THAN expression .)


state 198

    (69) condition_super_expression -> expression OP_EQUALS_TWO expression .

    AND             reduce using rule 69 (condition_super_expression -> expression OP_EQUALS_TWO expression .)
    OR              reduce using rule 69 (condition_super_expression -> expression OP_EQUALS_TWO expression .)
    OP_RPAREN       reduce using rule 69 (condition_super_expression -> expression OP_EQUALS_TWO expression .)
    SEMICOLON       reduce using rule 69 (condition_super_expression -> expression OP_EQUALS_TWO expression .)


state 199

    (70) condition_super_expression -> expression OP_NOT_EQUALS expression .

    AND             reduce using rule 70 (condition_super_expression -> expression OP_NOT_EQUALS expression .)
    OR              reduce using rule 70 (condition_super_expression -> expression OP_NOT_EQUALS expression .)
    OP_RPAREN       reduce using rule 70 (condition_super_expression -> expression OP_NOT_EQUALS expression .)
    SEMICOLON       reduce using rule 70 (condition_super_expression -> expression OP_NOT_EQUALS expression .)


state 200

    (94) expression -> term OP_PLUS expression .

    OP_GREATER_THAN reduce using rule 94 (expression -> term OP_PLUS expression .)
    OP_LESS_THAN    reduce using rule 94 (expression -> term OP_PLUS expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 94 (expression -> term OP_PLUS expression .)
    OP_LESS_EQUALS_THAN reduce using rule 94 (expression -> term OP_PLUS expression .)
    OP_EQUALS_TWO   reduce using rule 94 (expression -> term OP_PLUS expression .)
    OP_NOT_EQUALS   reduce using rule 94 (expression -> term OP_PLUS expression .)
    AND             reduce using rule 94 (expression -> term OP_PLUS expression .)
    OR              reduce using rule 94 (expression -> term OP_PLUS expression .)
    OP_RPAREN       reduce using rule 94 (expression -> term OP_PLUS expression .)
    SEMICOLON       reduce using rule 94 (expression -> term OP_PLUS expression .)


state 201

    (95) expression -> term OP_MINUS expression .

    OP_GREATER_THAN reduce using rule 95 (expression -> term OP_MINUS expression .)
    OP_LESS_THAN    reduce using rule 95 (expression -> term OP_MINUS expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 95 (expression -> term OP_MINUS expression .)
    OP_LESS_EQUALS_THAN reduce using rule 95 (expression -> term OP_MINUS expression .)
    OP_EQUALS_TWO   reduce using rule 95 (expression -> term OP_MINUS expression .)
    OP_NOT_EQUALS   reduce using rule 95 (expression -> term OP_MINUS expression .)
    AND             reduce using rule 95 (expression -> term OP_MINUS expression .)
    OR              reduce using rule 95 (expression -> term OP_MINUS expression .)
    OP_RPAREN       reduce using rule 95 (expression -> term OP_MINUS expression .)
    SEMICOLON       reduce using rule 95 (expression -> term OP_MINUS expression .)


state 202

    (97) term -> fact OP_DIVISION term .

    OP_PLUS         reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_MINUS        reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_GREATER_THAN reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_LESS_THAN    reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_GREATER_EQUALS_THAN reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_LESS_EQUALS_THAN reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_EQUALS_TWO   reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_NOT_EQUALS   reduce using rule 97 (term -> fact OP_DIVISION term .)
    AND             reduce using rule 97 (term -> fact OP_DIVISION term .)
    OR              reduce using rule 97 (term -> fact OP_DIVISION term .)
    OP_RPAREN       reduce using rule 97 (term -> fact OP_DIVISION term .)
    SEMICOLON       reduce using rule 97 (term -> fact OP_DIVISION term .)


state 203

    (98) term -> fact OP_TIMES term .

    OP_PLUS         reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_MINUS        reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_GREATER_THAN reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_LESS_THAN    reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_GREATER_EQUALS_THAN reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_LESS_EQUALS_THAN reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_EQUALS_TWO   reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_NOT_EQUALS   reduce using rule 98 (term -> fact OP_TIMES term .)
    AND             reduce using rule 98 (term -> fact OP_TIMES term .)
    OR              reduce using rule 98 (term -> fact OP_TIMES term .)
    OP_RPAREN       reduce using rule 98 (term -> fact OP_TIMES term .)
    SEMICOLON       reduce using rule 98 (term -> fact OP_TIMES term .)


state 204

    (49) printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ID              reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    IF              reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    INT             reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 49 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)


state 205

    (51) impression -> single_expression OP_PLUS impression .

    OP_RPAREN       reduce using rule 51 (impression -> single_expression OP_PLUS impression .)


state 206

    (56) for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON . increment OP_RPAREN bloque
    (52) increment -> . ID OP_PLUS_EQUALS single_expression SEMICOLON
    (53) increment -> . ID OP_MINUS_EQUALS single_expression SEMICOLON
    (54) increment -> . ID OP_PLUS OP_PLUS SEMICOLON
    (55) increment -> . ID OP_MINUS OP_MINUS SEMICOLON

    ID              shift and go to state 226

    increment                      shift and go to state 225

state 207

    (72) single_expression -> single_term check_symbol_exp OP_PLUS push_symbol . single_expression
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_term                    shift and go to state 99
    single_expression              shift and go to state 227
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 208

    (79) push_symbol -> epsilon .

    OP_LPAREN       reduce using rule 79 (push_symbol -> epsilon .)
    ID              reduce using rule 79 (push_symbol -> epsilon .)
    VAR_INT         reduce using rule 79 (push_symbol -> epsilon .)
    VAR_FLOAT       reduce using rule 79 (push_symbol -> epsilon .)
    VAR_STRING      reduce using rule 79 (push_symbol -> epsilon .)


state 209

    (73) single_expression -> single_term check_symbol_exp OP_MINUS push_symbol . single_expression
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_term                    shift and go to state 99
    single_expression              shift and go to state 228
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 210

    (76) single_term -> single_fact check_symbol_term OP_DIVISION push_symbol . single_term
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_fact                    shift and go to state 100
    single_term                    shift and go to state 229
    var_cte                        shift and go to state 101

state 211

    (77) single_term -> single_fact check_symbol_term OP_TIMES push_symbol . single_term
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_fact                    shift and go to state 100
    single_term                    shift and go to state 230
    var_cte                        shift and go to state 101

state 212

    (106) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS . bloque_figura
    (114) bloque_figura -> . LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 232

    bloque_figura                  shift and go to state 231

state 213

    (46) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .

    RCURLY_BRACKET  reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    ID              reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    IF              reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    PRINT           reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    FOR             reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    RETURN          reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    FIGURE          reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    INT             reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    FLOAT           reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    STRING          reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    BOOLEAN         reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    OP_LPAREN       reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    VAR_INT         reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    VAR_FLOAT       reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)
    VAR_STRING      reduce using rule 46 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression .)


state 214

    (84) mega_expression -> super_expression AND super_expression .

    OP_RPAREN       reduce using rule 84 (mega_expression -> super_expression AND super_expression .)


state 215

    (85) mega_expression -> super_expression OR super_expression .

    OP_RPAREN       reduce using rule 85 (mega_expression -> super_expression OR super_expression .)


state 216

    (87) super_expression -> expression OP_GREATER_THAN expression .

    AND             reduce using rule 87 (super_expression -> expression OP_GREATER_THAN expression .)
    OR              reduce using rule 87 (super_expression -> expression OP_GREATER_THAN expression .)
    OP_RPAREN       reduce using rule 87 (super_expression -> expression OP_GREATER_THAN expression .)


state 217

    (88) super_expression -> expression OP_LESS_THAN expression .

    AND             reduce using rule 88 (super_expression -> expression OP_LESS_THAN expression .)
    OR              reduce using rule 88 (super_expression -> expression OP_LESS_THAN expression .)
    OP_RPAREN       reduce using rule 88 (super_expression -> expression OP_LESS_THAN expression .)


state 218

    (89) super_expression -> expression OP_GREATER_EQUALS_THAN expression .

    AND             reduce using rule 89 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    OR              reduce using rule 89 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)
    OP_RPAREN       reduce using rule 89 (super_expression -> expression OP_GREATER_EQUALS_THAN expression .)


state 219

    (90) super_expression -> expression OP_LESS_EQUALS_THAN expression .

    AND             reduce using rule 90 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    OR              reduce using rule 90 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)
    OP_RPAREN       reduce using rule 90 (super_expression -> expression OP_LESS_EQUALS_THAN expression .)


state 220

    (91) super_expression -> expression OP_EQUALS_TWO expression .

    AND             reduce using rule 91 (super_expression -> expression OP_EQUALS_TWO expression .)
    OR              reduce using rule 91 (super_expression -> expression OP_EQUALS_TWO expression .)
    OP_RPAREN       reduce using rule 91 (super_expression -> expression OP_EQUALS_TWO expression .)


state 221

    (92) super_expression -> expression OP_NOT_EQUALS expression .

    AND             reduce using rule 92 (super_expression -> expression OP_NOT_EQUALS expression .)
    OR              reduce using rule 92 (super_expression -> expression OP_NOT_EQUALS expression .)
    OP_RPAREN       reduce using rule 92 (super_expression -> expression OP_NOT_EQUALS expression .)


state 222

    (48) if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE . bloque
    (34) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 191

    bloque                         shift and go to state 233

state 223

    (34) bloque -> LCURLY_BRACKET bloque_primo . RCURLY_BRACKET
    (35) bloque_primo -> bloque_primo . statement
    (37) statement -> . assigment
    (38) statement -> . if
    (39) statement -> . printer
    (40) statement -> . increment
    (41) statement -> . for
    (42) statement -> . return
    (43) statement -> . function_call
    (44) statement -> . fun_esp
    (45) assigment -> . ID OP_EQUALS single_expression SEMICOLON
    (46) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS single_expression
    (47) if -> . IF OP_LPAREN condition_mega_expression OP_RPAREN bloque
    (48) if -> . IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque
    (49) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (52) increment -> . ID OP_PLUS_EQUALS single_expression SEMICOLON
    (53) increment -> . ID OP_MINUS_EQUALS single_expression SEMICOLON
    (54) increment -> . ID OP_PLUS OP_PLUS SEMICOLON
    (55) increment -> . ID OP_MINUS OP_MINUS SEMICOLON
    (56) for -> . FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque
    (57) return -> . RETURN single_expression SEMICOLON
    (58) function_call -> . ID OP_LPAREN function_call_prime OP_RPAREN SEMICOLON
    (105) fun_esp -> . figure_creation
    (106) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura

    RCURLY_BRACKET  shift and go to state 234
    ID              shift and go to state 77
    IF              shift and go to state 78
    PRINT           shift and go to state 79
    FOR             shift and go to state 80
    RETURN          shift and go to state 81
    FIGURE          shift and go to state 83

    statement                      shift and go to state 235
    assigment                      shift and go to state 236
    if                             shift and go to state 237
    printer                        shift and go to state 238
    increment                      shift and go to state 239
    for                            shift and go to state 240
    return                         shift and go to state 241
    function_call                  shift and go to state 242
    fun_esp                        shift and go to state 243
    figure_creation                shift and go to state 82

state 224

    (36) bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 36 (bloque_primo -> epsilon .)
    ID              reduce using rule 36 (bloque_primo -> epsilon .)
    IF              reduce using rule 36 (bloque_primo -> epsilon .)
    PRINT           reduce using rule 36 (bloque_primo -> epsilon .)
    FOR             reduce using rule 36 (bloque_primo -> epsilon .)
    RETURN          reduce using rule 36 (bloque_primo -> epsilon .)
    FIGURE          reduce using rule 36 (bloque_primo -> epsilon .)


state 225

    (56) for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment . OP_RPAREN bloque

    OP_RPAREN       shift and go to state 244


state 226

    (52) increment -> ID . OP_PLUS_EQUALS single_expression SEMICOLON
    (53) increment -> ID . OP_MINUS_EQUALS single_expression SEMICOLON
    (54) increment -> ID . OP_PLUS OP_PLUS SEMICOLON
    (55) increment -> ID . OP_MINUS OP_MINUS SEMICOLON

    OP_PLUS_EQUALS  shift and go to state 90
    OP_MINUS_EQUALS shift and go to state 91
    OP_PLUS         shift and go to state 92
    OP_MINUS        shift and go to state 93


state 227

    (72) single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .

    SEMICOLON       reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    OP_PLUS         reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    OP_RPAREN       reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    RCURLY_BRACKET  reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    ID              reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    IF              reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    PRINT           reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    FOR             reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    RETURN          reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    FIGURE          reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    INT             reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    FLOAT           reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    STRING          reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    BOOLEAN         reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    OP_LPAREN       reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    VAR_INT         reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    VAR_FLOAT       reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    VAR_STRING      reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)
    COMA            reduce using rule 72 (single_expression -> single_term check_symbol_exp OP_PLUS push_symbol single_expression .)


state 228

    (73) single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .

    SEMICOLON       reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    OP_PLUS         reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    OP_RPAREN       reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    RCURLY_BRACKET  reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    ID              reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    IF              reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    PRINT           reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    FOR             reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    RETURN          reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    FIGURE          reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    INT             reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    FLOAT           reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    STRING          reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    BOOLEAN         reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    OP_LPAREN       reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    VAR_INT         reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    VAR_FLOAT       reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    VAR_STRING      reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)
    COMA            reduce using rule 73 (single_expression -> single_term check_symbol_exp OP_MINUS push_symbol single_expression .)


state 229

    (76) single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .

    OP_PLUS         reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    OP_MINUS        reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    SEMICOLON       reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    OP_RPAREN       reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    RCURLY_BRACKET  reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    ID              reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    IF              reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    PRINT           reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    FOR             reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    RETURN          reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    FIGURE          reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    INT             reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    FLOAT           reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    STRING          reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    BOOLEAN         reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    OP_LPAREN       reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    VAR_INT         reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    VAR_FLOAT       reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    VAR_STRING      reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)
    COMA            reduce using rule 76 (single_term -> single_fact check_symbol_term OP_DIVISION push_symbol single_term .)


state 230

    (77) single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .

    OP_PLUS         reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    OP_MINUS        reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    SEMICOLON       reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    OP_RPAREN       reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    RCURLY_BRACKET  reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    ID              reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    IF              reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    PRINT           reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    FOR             reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    RETURN          reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    FIGURE          reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    INT             reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    FLOAT           reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    STRING          reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    BOOLEAN         reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    OP_LPAREN       reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    VAR_INT         reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    VAR_FLOAT       reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    VAR_STRING      reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)
    COMA            reduce using rule 77 (single_term -> single_fact check_symbol_term OP_TIMES push_symbol single_term .)


state 231

    (106) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .

    RCURLY_BRACKET  reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    ID              reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    IF              reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    PRINT           reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FOR             reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    RETURN          reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FIGURE          reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    INT             reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FLOAT           reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    STRING          reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    BOOLEAN         reduce using rule 106 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)


state 232

    (114) bloque_figura -> LCURLY_BRACKET . bloque_figura_primo RCURLY_BRACKET
    (115) bloque_figura_primo -> . bloque_figura_primo figura_attr
    (116) bloque_figura_primo -> . epsilon
    (121) epsilon -> .

    RCURLY_BRACKET  reduce using rule 121 (epsilon -> .)
    COLOR           reduce using rule 121 (epsilon -> .)
    SIZE            reduce using rule 121 (epsilon -> .)
    VECTOR          reduce using rule 121 (epsilon -> .)

    bloque_figura_primo            shift and go to state 245
    epsilon                        shift and go to state 246

state 233

    (48) if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .

    RCURLY_BRACKET  reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    ID              reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    IF              reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    PRINT           reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    FOR             reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    RETURN          reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    FIGURE          reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    INT             reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    FLOAT           reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    STRING          reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)
    BOOLEAN         reduce using rule 48 (if -> IF OP_LPAREN condition_mega_expression OP_RPAREN bloque ELSE bloque .)


state 234

    (34) bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .

    ELSE            reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RCURLY_BRACKET  reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ID              reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    IF              reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FOR             reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    INT             reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    STRING          reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 34 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)


state 235

    (35) bloque_primo -> bloque_primo statement .

    RCURLY_BRACKET  reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    ID              reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    IF              reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    PRINT           reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    FOR             reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    RETURN          reduce using rule 35 (bloque_primo -> bloque_primo statement .)
    FIGURE          reduce using rule 35 (bloque_primo -> bloque_primo statement .)


state 236

    (37) statement -> assigment .

    RCURLY_BRACKET  reduce using rule 37 (statement -> assigment .)
    ID              reduce using rule 37 (statement -> assigment .)
    IF              reduce using rule 37 (statement -> assigment .)
    PRINT           reduce using rule 37 (statement -> assigment .)
    FOR             reduce using rule 37 (statement -> assigment .)
    RETURN          reduce using rule 37 (statement -> assigment .)
    FIGURE          reduce using rule 37 (statement -> assigment .)


state 237

    (38) statement -> if .

    RCURLY_BRACKET  reduce using rule 38 (statement -> if .)
    ID              reduce using rule 38 (statement -> if .)
    IF              reduce using rule 38 (statement -> if .)
    PRINT           reduce using rule 38 (statement -> if .)
    FOR             reduce using rule 38 (statement -> if .)
    RETURN          reduce using rule 38 (statement -> if .)
    FIGURE          reduce using rule 38 (statement -> if .)


state 238

    (39) statement -> printer .

    RCURLY_BRACKET  reduce using rule 39 (statement -> printer .)
    ID              reduce using rule 39 (statement -> printer .)
    IF              reduce using rule 39 (statement -> printer .)
    PRINT           reduce using rule 39 (statement -> printer .)
    FOR             reduce using rule 39 (statement -> printer .)
    RETURN          reduce using rule 39 (statement -> printer .)
    FIGURE          reduce using rule 39 (statement -> printer .)


state 239

    (40) statement -> increment .

    RCURLY_BRACKET  reduce using rule 40 (statement -> increment .)
    ID              reduce using rule 40 (statement -> increment .)
    IF              reduce using rule 40 (statement -> increment .)
    PRINT           reduce using rule 40 (statement -> increment .)
    FOR             reduce using rule 40 (statement -> increment .)
    RETURN          reduce using rule 40 (statement -> increment .)
    FIGURE          reduce using rule 40 (statement -> increment .)


state 240

    (41) statement -> for .

    RCURLY_BRACKET  reduce using rule 41 (statement -> for .)
    ID              reduce using rule 41 (statement -> for .)
    IF              reduce using rule 41 (statement -> for .)
    PRINT           reduce using rule 41 (statement -> for .)
    FOR             reduce using rule 41 (statement -> for .)
    RETURN          reduce using rule 41 (statement -> for .)
    FIGURE          reduce using rule 41 (statement -> for .)


state 241

    (42) statement -> return .

    RCURLY_BRACKET  reduce using rule 42 (statement -> return .)
    ID              reduce using rule 42 (statement -> return .)
    IF              reduce using rule 42 (statement -> return .)
    PRINT           reduce using rule 42 (statement -> return .)
    FOR             reduce using rule 42 (statement -> return .)
    RETURN          reduce using rule 42 (statement -> return .)
    FIGURE          reduce using rule 42 (statement -> return .)


state 242

    (43) statement -> function_call .

    RCURLY_BRACKET  reduce using rule 43 (statement -> function_call .)
    ID              reduce using rule 43 (statement -> function_call .)
    IF              reduce using rule 43 (statement -> function_call .)
    PRINT           reduce using rule 43 (statement -> function_call .)
    FOR             reduce using rule 43 (statement -> function_call .)
    RETURN          reduce using rule 43 (statement -> function_call .)
    FIGURE          reduce using rule 43 (statement -> function_call .)


state 243

    (44) statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 44 (statement -> fun_esp .)
    ID              reduce using rule 44 (statement -> fun_esp .)
    IF              reduce using rule 44 (statement -> fun_esp .)
    PRINT           reduce using rule 44 (statement -> fun_esp .)
    FOR             reduce using rule 44 (statement -> fun_esp .)
    RETURN          reduce using rule 44 (statement -> fun_esp .)
    FIGURE          reduce using rule 44 (statement -> fun_esp .)


state 244

    (56) for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN . bloque
    (34) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 191

    bloque                         shift and go to state 247

state 245

    (114) bloque_figura -> LCURLY_BRACKET bloque_figura_primo . RCURLY_BRACKET
    (115) bloque_figura_primo -> bloque_figura_primo . figura_attr
    (117) figura_attr -> . vector
    (118) figura_attr -> . COLOR OP_TWO_POINTS ID SEMICOLON
    (119) figura_attr -> . SIZE OP_TWO_POINTS single_expression SEMICOLON
    (120) vector -> . VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON

    RCURLY_BRACKET  shift and go to state 248
    COLOR           shift and go to state 251
    SIZE            shift and go to state 252
    VECTOR          shift and go to state 253

    figura_attr                    shift and go to state 249
    vector                         shift and go to state 250

state 246

    (116) bloque_figura_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 116 (bloque_figura_primo -> epsilon .)
    COLOR           reduce using rule 116 (bloque_figura_primo -> epsilon .)
    SIZE            reduce using rule 116 (bloque_figura_primo -> epsilon .)
    VECTOR          reduce using rule 116 (bloque_figura_primo -> epsilon .)


state 247

    (56) for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .

    RCURLY_BRACKET  reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    ID              reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    IF              reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    PRINT           reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    FOR             reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    RETURN          reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    FIGURE          reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    INT             reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    FLOAT           reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    STRING          reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)
    BOOLEAN         reduce using rule 56 (for -> FOR OP_LPAREN assigment condition_super_expression SEMICOLON increment OP_RPAREN bloque .)


state 248

    (114) bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    ID              reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    IF              reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FOR             reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    INT             reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    STRING          reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 114 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)


state 249

    (115) bloque_figura_primo -> bloque_figura_primo figura_attr .

    RCURLY_BRACKET  reduce using rule 115 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    COLOR           reduce using rule 115 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    SIZE            reduce using rule 115 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    VECTOR          reduce using rule 115 (bloque_figura_primo -> bloque_figura_primo figura_attr .)


state 250

    (117) figura_attr -> vector .

    RCURLY_BRACKET  reduce using rule 117 (figura_attr -> vector .)
    COLOR           reduce using rule 117 (figura_attr -> vector .)
    SIZE            reduce using rule 117 (figura_attr -> vector .)
    VECTOR          reduce using rule 117 (figura_attr -> vector .)


state 251

    (118) figura_attr -> COLOR . OP_TWO_POINTS ID SEMICOLON

    OP_TWO_POINTS   shift and go to state 254


state 252

    (119) figura_attr -> SIZE . OP_TWO_POINTS single_expression SEMICOLON

    OP_TWO_POINTS   shift and go to state 255


state 253

    (120) vector -> VECTOR . ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON

    ID              shift and go to state 256


state 254

    (118) figura_attr -> COLOR OP_TWO_POINTS . ID SEMICOLON

    ID              shift and go to state 257


state 255

    (119) figura_attr -> SIZE OP_TWO_POINTS . single_expression SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 258
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 256

    (120) vector -> VECTOR ID . OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON

    OP_TWO_POINTS   shift and go to state 259


state 257

    (118) figura_attr -> COLOR OP_TWO_POINTS ID . SEMICOLON

    SEMICOLON       shift and go to state 260


state 258

    (119) figura_attr -> SIZE OP_TWO_POINTS single_expression . SEMICOLON

    SEMICOLON       shift and go to state 261


state 259

    (120) vector -> VECTOR ID OP_TWO_POINTS . OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 262


state 260

    (118) figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .

    RCURLY_BRACKET  reduce using rule 118 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    COLOR           reduce using rule 118 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    SIZE            reduce using rule 118 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    VECTOR          reduce using rule 118 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)


state 261

    (119) figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 119 (figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON .)
    COLOR           reduce using rule 119 (figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON .)
    SIZE            reduce using rule 119 (figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON .)
    VECTOR          reduce using rule 119 (figura_attr -> SIZE OP_TWO_POINTS single_expression SEMICOLON .)


state 262

    (120) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN . single_expression COMA single_expression OP_RPAREN SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 263
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 263

    (120) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression . COMA single_expression OP_RPAREN SEMICOLON

    COMA            shift and go to state 264


state 264

    (120) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA . single_expression OP_RPAREN SEMICOLON
    (71) single_expression -> . single_term check_symbol_exp
    (72) single_expression -> . single_term check_symbol_exp OP_PLUS push_symbol single_expression
    (73) single_expression -> . single_term check_symbol_exp OP_MINUS push_symbol single_expression
    (75) single_term -> . single_fact check_symbol_term
    (76) single_term -> . single_fact check_symbol_term OP_DIVISION push_symbol single_term
    (77) single_term -> . single_fact check_symbol_term OP_TIMES push_symbol single_term
    (80) single_fact -> . var_cte push_var_cte
    (81) single_fact -> . OP_LPAREN single_expression OP_RPAREN
    (101) var_cte -> . ID
    (102) var_cte -> . VAR_INT
    (103) var_cte -> . VAR_FLOAT
    (104) var_cte -> . VAR_STRING

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 33
    VAR_INT         shift and go to state 35
    VAR_FLOAT       shift and go to state 36
    VAR_STRING      shift and go to state 37

    single_expression              shift and go to state 265
    single_term                    shift and go to state 99
    single_fact                    shift and go to state 100
    var_cte                        shift and go to state 101

state 265

    (120) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 266


state 266

    (120) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 267


state 267

    (120) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 120 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON .)
    COLOR           reduce using rule 120 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON .)
    SIZE            reduce using rule 120 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON .)
    VECTOR          reduce using rule 120 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN single_expression COMA single_expression OP_RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 46 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 46 resolved as shift
WARNING: shift/reduce conflict for STRING in state 46 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 46 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 55 resolved as shift
WARNING: shift/reduce conflict for RCURLY_BRACKET in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for FOR in state 58 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 58 resolved as shift
WARNING: shift/reduce conflict for FIGURE in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 58 resolved as shift
WARNING: shift/reduce conflict for OP_PLUS in state 129 resolved as shift
