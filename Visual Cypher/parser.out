Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    CARET
    QUOT_MARK
    VAR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET
Rule 2     vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
Rule 3     vars -> epsilon
Rule 4     vars_prime -> COMA ID pushTo_varsTable vars_prime
Rule 5     vars_prime -> epsilon
Rule 6     pushTo_varsTable -> epsilon
Rule 7     save_type -> epsilon
Rule 8     function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 9     function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
Rule 10    function -> epsilon
Rule 11    pushTo_FunctionDir -> epsilon
Rule 12    pushTo_functionSignature -> epsilon
Rule 13    add_NumVars -> epsilon
Rule 14    add_Function_FirstQuadruple -> epsilon
Rule 15    main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
Rule 16    fill_firstQuadruple -> epsilon
Rule 17    add_NumVars_Main_Global -> epsilon
Rule 18    push_end_quadruple -> epsilon
Rule 19    type -> INT
Rule 20    type -> FLOAT
Rule 21    type -> STRING
Rule 22    type -> BOOLEAN
Rule 23    function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime
Rule 24    function_parameters -> epsilon
Rule 25    function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime
Rule 26    function_parameters_prime -> epsilon
Rule 27    function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET
Rule 28    function_bloque_primo -> function_bloque_primo function_statement
Rule 29    function_bloque_primo -> epsilon
Rule 30    function_statement -> assigment
Rule 31    function_statement -> if
Rule 32    function_statement -> printer
Rule 33    function_statement -> increment
Rule 34    function_statement -> for
Rule 35    function_statement -> return
Rule 36    function_statement -> function_call
Rule 37    function_statement -> fun_esp
Rule 38    function_statement -> vars
Rule 39    function_statement -> while_loop
Rule 40    bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET
Rule 41    bloque_primo -> bloque_primo statement
Rule 42    bloque_primo -> epsilon
Rule 43    statement -> assigment
Rule 44    statement -> if
Rule 45    statement -> printer
Rule 46    statement -> increment
Rule 47    statement -> for
Rule 48    statement -> return
Rule 49    statement -> function_call
Rule 50    statement -> fun_esp
Rule 51    statement -> while_loop
Rule 52    assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
Rule 53    assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
Rule 54    equals_quadruple -> epsilon
Rule 55    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
Rule 56    if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
Rule 57    if_gotoF_quadruple -> epsilon
Rule 58    fill_if_gotoF1 -> epsilon
Rule 59    fill_if_gotoF2 -> epsilon
Rule 60    fill_if_goto -> epsilon
Rule 61    if_goto_quadruple -> epsilon
Rule 62    printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
Rule 63    impression -> mega_expression printer_quadruple
Rule 64    impression -> mega_expression printer_quadruple COMA impression
Rule 65    printer_quadruple -> epsilon
Rule 66    increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 67    increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
Rule 68    increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
Rule 69    increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
Rule 70    incrementByOne -> epsilon
Rule 71    increment_equals -> epsilon
Rule 72    for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
Rule 73    while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
Rule 74    loop_jumpCount -> epsilon
Rule 75    loop_gotoF -> epsilon
Rule 76    loop_fill -> epsilon
Rule 77    return -> RETURN mega_expression return_quadruple SEMICOLON
Rule 78    return_quadruple -> epsilon
Rule 79    function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
Rule 80    function_call_parameters -> mega_expression create_param function_call_parameters_prime
Rule 81    function_call_parameters -> epsilon
Rule 82    function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime
Rule 83    function_call_parameters_prime -> epsilon
Rule 84    create_era -> epsilon
Rule 85    create_param -> epsilon
Rule 86    create_gosub -> epsilon
Rule 87    mega_expression -> super_expression check_symbol_megaexp
Rule 88    mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp
Rule 89    mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp
Rule 90    check_symbol_megaexp -> epsilon
Rule 91    super_expression -> expression check_symbol_superexp
Rule 92    super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
Rule 93    super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp
Rule 94    super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 95    super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
Rule 96    super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
Rule 97    super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
Rule 98    check_symbol_superexp -> epsilon
Rule 99    expression -> term check_symbol_exp
Rule 100   expression -> term check_symbol_exp OP_PLUS push_symbol expression
Rule 101   expression -> term check_symbol_exp OP_MINUS push_symbol expression
Rule 102   push_symbol -> epsilon
Rule 103   check_symbol_exp -> epsilon
Rule 104   term -> fact check_symbol_term
Rule 105   term -> fact check_symbol_term OP_DIVISION push_symbol term
Rule 106   term -> fact check_symbol_term OP_TIMES push_symbol term
Rule 107   check_symbol_term -> epsilon
Rule 108   fact -> var_cte
Rule 109   fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
Rule 110   push_varID_to_Stack -> epsilon
Rule 111   push_bottle_bottom -> epsilon
Rule 112   remove_bottle_bottom -> epsilon
Rule 113   var_cte -> ID push_varID_to_Stack
Rule 114   var_cte -> VAR_INT push_cte_toTable
Rule 115   var_cte -> VAR_FLOAT push_cte_toTable
Rule 116   var_cte -> VAR_STRING push_cte_toTable
Rule 117   var_cte -> VAR_BOOLEAN push_cte_toTable
Rule 118   push_cte_toTable -> epsilon
Rule 119   fun_esp -> figure_creation
Rule 120   figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
Rule 121   figure -> POINT
Rule 122   figure -> LINE
Rule 123   figure -> SQUARE
Rule 124   figure -> RECTANGLE
Rule 125   figure -> TRIANGLE
Rule 126   figure -> CIRCLE
Rule 127   figure -> ARC
Rule 128   bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET
Rule 129   bloque_figura_primo -> bloque_figura_primo figura_attr
Rule 130   bloque_figura_primo -> epsilon
Rule 131   figura_attr -> vector
Rule 132   figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON
Rule 133   figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON
Rule 134   vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON
Rule 135   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 88
ARC                  : 127
BOOLEAN              : 22
CARET                : 
CIRCLE               : 126
COLOR                : 132
COMA                 : 4 25 64 82 134
ELSE                 : 56
FIGURE               : 120
FLOAT                : 20
FOR                  : 72
FUNCTION             : 8 9
ID                   : 1 2 4 8 9 23 25 52 53 66 67 68 69 79 113 120 132 134
IF                   : 55 56
INT                  : 19
LCURLY_BRACKET       : 1 27 40 128
LINE                 : 122
MAIN                 : 15
OP_DIVISION          : 105
OP_EQUALS            : 52 53
OP_EQUALS_TWO        : 96
OP_GREATER_EQUALS_THAN : 94
OP_GREATER_THAN      : 92
OP_LESS_EQUALS_THAN  : 95
OP_LESS_THAN         : 93
OP_LPAREN            : 8 9 15 55 56 62 72 73 79 109 134
OP_LSQUARE_PAREN     : 53
OP_MINUS             : 69 69 101
OP_MINUS_EQUALS      : 67
OP_NOT_EQUALS        : 97
OP_PLUS              : 68 68 100
OP_PLUS_EQUALS       : 66
OP_RPAREN            : 8 9 15 55 56 62 72 73 79 109 134
OP_RSQUARE_PAREN     : 53
OP_TIMES             : 106
OP_TWO_POINTS        : 120 132 133 134
OR                   : 89
POINT                : 121
POSSESS              : 120
PRINT                : 62
PROGRAM              : 1
QUOT_MARK            : 
RCURLY_BRACKET       : 1 27 40 128
RECTANGLE            : 124
RETURN               : 77
SEMICOLON            : 2 52 53 62 66 67 68 69 72 77 79 132 133 134
SIZE                 : 133
SQUARE               : 123
STRING               : 21
TRIANGLE             : 125
VAR                  : 
VAR_BOOLEAN          : 117
VAR_FLOAT            : 115
VAR_INT              : 53 114
VAR_STRING           : 116
VECTOR               : 134
VOID                 : 9
WHILE                : 73
error                : 

Nonterminals, with rules where they appear

add_Function_FirstQuadruple : 8 9
add_NumVars          : 8 9
add_NumVars_Main_Global : 1 15
assigment            : 30 43 72
bloque               : 55 56 56 72 73
bloque_figura        : 120
bloque_figura_primo  : 128 129
bloque_primo         : 40 41
check_symbol_exp     : 99 100 101
check_symbol_megaexp : 87 88 89
check_symbol_superexp : 91 92 93 94 95 96 97
check_symbol_term    : 104 105 106
create_era           : 79
create_gosub         : 79
create_param         : 80 82
epsilon              : 3 5 6 7 10 11 12 13 14 16 17 18 24 26 29 42 54 57 58 59 60 61 65 70 71 74 75 76 78 81 83 84 85 86 90 98 102 103 107 110 111 112 118 130
equals_quadruple     : 52
expression           : 91 92 92 93 93 94 94 95 95 96 96 97 97 100 101
fact                 : 104 105 106
figura_attr          : 129
figure               : 120
figure_creation      : 119
fill_firstQuadruple  : 15
fill_if_goto         : 56
fill_if_gotoF1       : 55
fill_if_gotoF2       : 56
for                  : 34 47
fun_esp              : 37 50
function             : 1 8 9
function_bloque      : 8 9 15
function_bloque_primo : 27 28
function_call        : 36 49
function_call_parameters : 79
function_call_parameters_prime : 80 82
function_parameters  : 8 9
function_parameters_prime : 23 25
function_statement   : 28
if                   : 31 44
if_gotoF_quadruple   : 55 56
if_goto_quadruple    : 56
impression           : 62 64
increment            : 33 46 72
incrementByOne       : 68 69
increment_equals     : 66 67
loop_fill            : 72 73
loop_gotoF           : 72 73
loop_jumpCount       : 72 73
main_function        : 1
mega_expression      : 52 53 55 56 63 64 66 67 72 73 77 80 82 109 133 134 134
printer              : 32 45
printer_quadruple    : 63 64
program              : 0
pushTo_FunctionDir   : 8 9 15
pushTo_functionSignature : 8 9
pushTo_varsTable     : 2 4 23 25
push_bottle_bottom   : 109
push_cte_toTable     : 114 115 116 117
push_end_quadruple   : 15
push_symbol          : 52 66 67 88 89 92 93 94 95 96 97 100 101 105 106
push_varID_to_Stack  : 52 66 67 68 69 113
remove_bottle_bottom : 109
return               : 35 48
return_quadruple     : 77
save_type            : 2 23 25
statement            : 41
super_expression     : 87 88 88 89 89
term                 : 99 100 101 105 106
type                 : 2 8 23 25
var_cte              : 108
vars                 : 1 2 38
vars_prime           : 2 4
vector               : 131
while_loop           : 39 51

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 4


state 4

    (1) program -> PROGRAM ID LCURLY_BRACKET . vars add_NumVars_Main_Global function main_function RCURLY_BRACKET
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . epsilon
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN
    (135) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 135 (epsilon -> .)
    MAIN            reduce using rule 135 (epsilon -> .)

    vars                           shift and go to state 5
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 5

    (1) program -> PROGRAM ID LCURLY_BRACKET vars . add_NumVars_Main_Global function main_function RCURLY_BRACKET
    (17) add_NumVars_Main_Global -> . epsilon
    (135) epsilon -> .

    FUNCTION        reduce using rule 135 (epsilon -> .)
    MAIN            reduce using rule 135 (epsilon -> .)

    add_NumVars_Main_Global        shift and go to state 12
    epsilon                        shift and go to state 13

state 6

    (2) vars -> type . save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (7) save_type -> . epsilon
    (135) epsilon -> .

    ID              reduce using rule 135 (epsilon -> .)

    save_type                      shift and go to state 14
    epsilon                        shift and go to state 15

state 7

    (3) vars -> epsilon .

    FUNCTION        reduce using rule 3 (vars -> epsilon .)
    MAIN            reduce using rule 3 (vars -> epsilon .)
    RCURLY_BRACKET  reduce using rule 3 (vars -> epsilon .)
    ID              reduce using rule 3 (vars -> epsilon .)
    IF              reduce using rule 3 (vars -> epsilon .)
    PRINT           reduce using rule 3 (vars -> epsilon .)
    FOR             reduce using rule 3 (vars -> epsilon .)
    RETURN          reduce using rule 3 (vars -> epsilon .)
    WHILE           reduce using rule 3 (vars -> epsilon .)
    FIGURE          reduce using rule 3 (vars -> epsilon .)
    INT             reduce using rule 3 (vars -> epsilon .)
    FLOAT           reduce using rule 3 (vars -> epsilon .)
    STRING          reduce using rule 3 (vars -> epsilon .)
    BOOLEAN         reduce using rule 3 (vars -> epsilon .)


state 8

    (19) type -> INT .

    ID              reduce using rule 19 (type -> INT .)


state 9

    (20) type -> FLOAT .

    ID              reduce using rule 20 (type -> FLOAT .)


state 10

    (21) type -> STRING .

    ID              reduce using rule 21 (type -> STRING .)


state 11

    (22) type -> BOOLEAN .

    ID              reduce using rule 22 (type -> BOOLEAN .)


state 12

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global . function main_function RCURLY_BRACKET
    (8) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (9) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (10) function -> . epsilon
    (135) epsilon -> .

    FUNCTION        shift and go to state 17
    MAIN            reduce using rule 135 (epsilon -> .)

    function                       shift and go to state 16
    epsilon                        shift and go to state 18

state 13

    (17) add_NumVars_Main_Global -> epsilon .

    FUNCTION        reduce using rule 17 (add_NumVars_Main_Global -> epsilon .)
    MAIN            reduce using rule 17 (add_NumVars_Main_Global -> epsilon .)
    RCURLY_BRACKET  reduce using rule 17 (add_NumVars_Main_Global -> epsilon .)


state 14

    (2) vars -> type save_type . ID pushTo_varsTable vars_prime SEMICOLON vars

    ID              shift and go to state 19


state 15

    (7) save_type -> epsilon .

    ID              reduce using rule 7 (save_type -> epsilon .)


state 16

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function . main_function RCURLY_BRACKET
    (15) main_function -> . MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple

    MAIN            shift and go to state 21

    main_function                  shift and go to state 20

state 17

    (8) function -> FUNCTION . type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (9) function -> FUNCTION . VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN

    VOID            shift and go to state 23
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 22

state 18

    (10) function -> epsilon .

    MAIN            reduce using rule 10 (function -> epsilon .)


state 19

    (2) vars -> type save_type ID . pushTo_varsTable vars_prime SEMICOLON vars
    (6) pushTo_varsTable -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)

    pushTo_varsTable               shift and go to state 24
    epsilon                        shift and go to state 25

state 20

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function . RCURLY_BRACKET

    RCURLY_BRACKET  shift and go to state 26


state 21

    (15) main_function -> MAIN . pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
    (11) pushTo_FunctionDir -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 27
    epsilon                        shift and go to state 28

state 22

    (8) function -> FUNCTION type . ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    ID              shift and go to state 29


state 23

    (9) function -> FUNCTION VOID . ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    ID              shift and go to state 30


state 24

    (2) vars -> type save_type ID pushTo_varsTable . vars_prime SEMICOLON vars
    (4) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (5) vars_prime -> . epsilon
    (135) epsilon -> .

    COMA            shift and go to state 32
    SEMICOLON       reduce using rule 135 (epsilon -> .)

    vars_prime                     shift and go to state 31
    epsilon                        shift and go to state 33

state 25

    (6) pushTo_varsTable -> epsilon .

    COMA            reduce using rule 6 (pushTo_varsTable -> epsilon .)
    SEMICOLON       reduce using rule 6 (pushTo_varsTable -> epsilon .)
    OP_RPAREN       reduce using rule 6 (pushTo_varsTable -> epsilon .)


state 26

    (1) program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID LCURLY_BRACKET vars add_NumVars_Main_Global function main_function RCURLY_BRACKET .)


state 27

    (15) main_function -> MAIN pushTo_FunctionDir . OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple

    OP_LPAREN       shift and go to state 34


state 28

    (11) pushTo_FunctionDir -> epsilon .

    OP_LPAREN       reduce using rule 11 (pushTo_FunctionDir -> epsilon .)


state 29

    (8) function -> FUNCTION type ID . pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) pushTo_FunctionDir -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 35
    epsilon                        shift and go to state 28

state 30

    (9) function -> FUNCTION VOID ID . pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (11) pushTo_FunctionDir -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)

    pushTo_FunctionDir             shift and go to state 36
    epsilon                        shift and go to state 28

state 31

    (2) vars -> type save_type ID pushTo_varsTable vars_prime . SEMICOLON vars

    SEMICOLON       shift and go to state 37


state 32

    (4) vars_prime -> COMA . ID pushTo_varsTable vars_prime

    ID              shift and go to state 38


state 33

    (5) vars_prime -> epsilon .

    SEMICOLON       reduce using rule 5 (vars_prime -> epsilon .)


state 34

    (15) main_function -> MAIN pushTo_FunctionDir OP_LPAREN . OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple

    OP_RPAREN       shift and go to state 39


state 35

    (8) function -> FUNCTION type ID pushTo_FunctionDir . OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_LPAREN       shift and go to state 40


state 36

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir . OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_LPAREN       shift and go to state 41


state 37

    (2) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON . vars
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . epsilon
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN
    (135) epsilon -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    FUNCTION        reduce using rule 135 (epsilon -> .)
    MAIN            reduce using rule 135 (epsilon -> .)
    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)

  ! INT             [ reduce using rule 135 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 135 (epsilon -> .) ]
  ! STRING          [ reduce using rule 135 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 135 (epsilon -> .) ]

    type                           shift and go to state 6
    vars                           shift and go to state 42
    epsilon                        shift and go to state 7

state 38

    (4) vars_prime -> COMA ID . pushTo_varsTable vars_prime
    (6) pushTo_varsTable -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)

    pushTo_varsTable               shift and go to state 43
    epsilon                        shift and go to state 25

state 39

    (15) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN . fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple
    (16) fill_firstQuadruple -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    fill_firstQuadruple            shift and go to state 44
    epsilon                        shift and go to state 45

state 40

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN . function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (23) function_parameters -> . type save_type ID pushTo_varsTable function_parameters_prime
    (24) function_parameters -> . epsilon
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN
    (135) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    type                           shift and go to state 46
    function_parameters            shift and go to state 47
    epsilon                        shift and go to state 48

state 41

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN . function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (23) function_parameters -> . type save_type ID pushTo_varsTable function_parameters_prime
    (24) function_parameters -> . epsilon
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN
    (135) epsilon -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    function_parameters            shift and go to state 49
    type                           shift and go to state 46
    epsilon                        shift and go to state 48

state 42

    (2) vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .

    FUNCTION        reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    MAIN            reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RCURLY_BRACKET  reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    ID              reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    IF              reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    PRINT           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FOR             reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    RETURN          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    WHILE           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FIGURE          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    INT             reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    FLOAT           reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    STRING          reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)
    BOOLEAN         reduce using rule 2 (vars -> type save_type ID pushTo_varsTable vars_prime SEMICOLON vars .)


state 43

    (4) vars_prime -> COMA ID pushTo_varsTable . vars_prime
    (4) vars_prime -> . COMA ID pushTo_varsTable vars_prime
    (5) vars_prime -> . epsilon
    (135) epsilon -> .

    COMA            shift and go to state 32
    SEMICOLON       reduce using rule 135 (epsilon -> .)

    vars_prime                     shift and go to state 50
    epsilon                        shift and go to state 33

state 44

    (15) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple . function_bloque add_NumVars_Main_Global push_end_quadruple
    (27) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 52

    function_bloque                shift and go to state 51

state 45

    (16) fill_firstQuadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 16 (fill_firstQuadruple -> epsilon .)


state 46

    (23) function_parameters -> type . save_type ID pushTo_varsTable function_parameters_prime
    (7) save_type -> . epsilon
    (135) epsilon -> .

    ID              reduce using rule 135 (epsilon -> .)

    save_type                      shift and go to state 53
    epsilon                        shift and go to state 15

state 47

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters . OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_RPAREN       shift and go to state 54


state 48

    (24) function_parameters -> epsilon .

    OP_RPAREN       reduce using rule 24 (function_parameters -> epsilon .)


state 49

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters . OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function

    OP_RPAREN       shift and go to state 55


state 50

    (4) vars_prime -> COMA ID pushTo_varsTable vars_prime .

    SEMICOLON       reduce using rule 4 (vars_prime -> COMA ID pushTo_varsTable vars_prime .)


state 51

    (15) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque . add_NumVars_Main_Global push_end_quadruple
    (17) add_NumVars_Main_Global -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    add_NumVars_Main_Global        shift and go to state 56
    epsilon                        shift and go to state 13

state 52

    (27) function_bloque -> LCURLY_BRACKET . function_bloque_primo RCURLY_BRACKET
    (28) function_bloque_primo -> . function_bloque_primo function_statement
    (29) function_bloque_primo -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)
    INT             reduce using rule 135 (epsilon -> .)
    FLOAT           reduce using rule 135 (epsilon -> .)
    STRING          reduce using rule 135 (epsilon -> .)
    BOOLEAN         reduce using rule 135 (epsilon -> .)

    function_bloque_primo          shift and go to state 57
    epsilon                        shift and go to state 58

state 53

    (23) function_parameters -> type save_type . ID pushTo_varsTable function_parameters_prime

    ID              shift and go to state 59


state 54

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN . add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (14) add_Function_FirstQuadruple -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    add_Function_FirstQuadruple    shift and go to state 60
    epsilon                        shift and go to state 61

state 55

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN . add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (14) add_Function_FirstQuadruple -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    add_Function_FirstQuadruple    shift and go to state 62
    epsilon                        shift and go to state 61

state 56

    (15) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global . push_end_quadruple
    (18) push_end_quadruple -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    push_end_quadruple             shift and go to state 63
    epsilon                        shift and go to state 64

state 57

    (27) function_bloque -> LCURLY_BRACKET function_bloque_primo . RCURLY_BRACKET
    (28) function_bloque_primo -> function_bloque_primo . function_statement
    (30) function_statement -> . assigment
    (31) function_statement -> . if
    (32) function_statement -> . printer
    (33) function_statement -> . increment
    (34) function_statement -> . for
    (35) function_statement -> . return
    (36) function_statement -> . function_call
    (37) function_statement -> . fun_esp
    (38) function_statement -> . vars
    (39) function_statement -> . while_loop
    (52) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (53) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (55) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (56) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (62) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (66) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (72) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (77) return -> . RETURN mega_expression return_quadruple SEMICOLON
    (79) function_call -> . ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (119) fun_esp -> . figure_creation
    (2) vars -> . type save_type ID pushTo_varsTable vars_prime SEMICOLON vars
    (3) vars -> . epsilon
    (73) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (120) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN
    (135) epsilon -> .

  ! shift/reduce conflict for RCURLY_BRACKET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FIGURE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RCURLY_BRACKET  shift and go to state 65
    ID              shift and go to state 77
    IF              shift and go to state 78
    PRINT           shift and go to state 79
    FOR             shift and go to state 80
    RETURN          shift and go to state 81
    WHILE           shift and go to state 83
    FIGURE          shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

  ! RCURLY_BRACKET  [ reduce using rule 135 (epsilon -> .) ]
  ! ID              [ reduce using rule 135 (epsilon -> .) ]
  ! IF              [ reduce using rule 135 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 135 (epsilon -> .) ]
  ! FOR             [ reduce using rule 135 (epsilon -> .) ]
  ! RETURN          [ reduce using rule 135 (epsilon -> .) ]
  ! WHILE           [ reduce using rule 135 (epsilon -> .) ]
  ! FIGURE          [ reduce using rule 135 (epsilon -> .) ]
  ! INT             [ reduce using rule 135 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 135 (epsilon -> .) ]
  ! STRING          [ reduce using rule 135 (epsilon -> .) ]
  ! BOOLEAN         [ reduce using rule 135 (epsilon -> .) ]

    function_statement             shift and go to state 66
    assigment                      shift and go to state 67
    if                             shift and go to state 68
    printer                        shift and go to state 69
    increment                      shift and go to state 70
    for                            shift and go to state 71
    return                         shift and go to state 72
    function_call                  shift and go to state 73
    fun_esp                        shift and go to state 74
    vars                           shift and go to state 75
    while_loop                     shift and go to state 76
    figure_creation                shift and go to state 82
    type                           shift and go to state 6
    epsilon                        shift and go to state 7

state 58

    (29) function_bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 29 (function_bloque_primo -> epsilon .)
    ID              reduce using rule 29 (function_bloque_primo -> epsilon .)
    IF              reduce using rule 29 (function_bloque_primo -> epsilon .)
    PRINT           reduce using rule 29 (function_bloque_primo -> epsilon .)
    FOR             reduce using rule 29 (function_bloque_primo -> epsilon .)
    RETURN          reduce using rule 29 (function_bloque_primo -> epsilon .)
    WHILE           reduce using rule 29 (function_bloque_primo -> epsilon .)
    FIGURE          reduce using rule 29 (function_bloque_primo -> epsilon .)
    INT             reduce using rule 29 (function_bloque_primo -> epsilon .)
    FLOAT           reduce using rule 29 (function_bloque_primo -> epsilon .)
    STRING          reduce using rule 29 (function_bloque_primo -> epsilon .)
    BOOLEAN         reduce using rule 29 (function_bloque_primo -> epsilon .)


state 59

    (23) function_parameters -> type save_type ID . pushTo_varsTable function_parameters_prime
    (6) pushTo_varsTable -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    pushTo_varsTable               shift and go to state 85
    epsilon                        shift and go to state 25

state 60

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple . pushTo_functionSignature function_bloque add_NumVars function
    (12) pushTo_functionSignature -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    pushTo_functionSignature       shift and go to state 86
    epsilon                        shift and go to state 87

state 61

    (14) add_Function_FirstQuadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 14 (add_Function_FirstQuadruple -> epsilon .)


state 62

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple . pushTo_functionSignature function_bloque add_NumVars function
    (12) pushTo_functionSignature -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    pushTo_functionSignature       shift and go to state 88
    epsilon                        shift and go to state 87

state 63

    (15) main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple .

    RCURLY_BRACKET  reduce using rule 15 (main_function -> MAIN pushTo_FunctionDir OP_LPAREN OP_RPAREN fill_firstQuadruple function_bloque add_NumVars_Main_Global push_end_quadruple .)


state 64

    (18) push_end_quadruple -> epsilon .

    RCURLY_BRACKET  reduce using rule 18 (push_end_quadruple -> epsilon .)


state 65

    (27) function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 27 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    FUNCTION        reduce using rule 27 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)
    MAIN            reduce using rule 27 (function_bloque -> LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET .)


state 66

    (28) function_bloque_primo -> function_bloque_primo function_statement .

    RCURLY_BRACKET  reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    ID              reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    IF              reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    PRINT           reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    FOR             reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    RETURN          reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    WHILE           reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    FIGURE          reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    INT             reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    FLOAT           reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    STRING          reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)
    BOOLEAN         reduce using rule 28 (function_bloque_primo -> function_bloque_primo function_statement .)


state 67

    (30) function_statement -> assigment .

    RCURLY_BRACKET  reduce using rule 30 (function_statement -> assigment .)
    ID              reduce using rule 30 (function_statement -> assigment .)
    IF              reduce using rule 30 (function_statement -> assigment .)
    PRINT           reduce using rule 30 (function_statement -> assigment .)
    FOR             reduce using rule 30 (function_statement -> assigment .)
    RETURN          reduce using rule 30 (function_statement -> assigment .)
    WHILE           reduce using rule 30 (function_statement -> assigment .)
    FIGURE          reduce using rule 30 (function_statement -> assigment .)
    INT             reduce using rule 30 (function_statement -> assigment .)
    FLOAT           reduce using rule 30 (function_statement -> assigment .)
    STRING          reduce using rule 30 (function_statement -> assigment .)
    BOOLEAN         reduce using rule 30 (function_statement -> assigment .)


state 68

    (31) function_statement -> if .

    RCURLY_BRACKET  reduce using rule 31 (function_statement -> if .)
    ID              reduce using rule 31 (function_statement -> if .)
    IF              reduce using rule 31 (function_statement -> if .)
    PRINT           reduce using rule 31 (function_statement -> if .)
    FOR             reduce using rule 31 (function_statement -> if .)
    RETURN          reduce using rule 31 (function_statement -> if .)
    WHILE           reduce using rule 31 (function_statement -> if .)
    FIGURE          reduce using rule 31 (function_statement -> if .)
    INT             reduce using rule 31 (function_statement -> if .)
    FLOAT           reduce using rule 31 (function_statement -> if .)
    STRING          reduce using rule 31 (function_statement -> if .)
    BOOLEAN         reduce using rule 31 (function_statement -> if .)


state 69

    (32) function_statement -> printer .

    RCURLY_BRACKET  reduce using rule 32 (function_statement -> printer .)
    ID              reduce using rule 32 (function_statement -> printer .)
    IF              reduce using rule 32 (function_statement -> printer .)
    PRINT           reduce using rule 32 (function_statement -> printer .)
    FOR             reduce using rule 32 (function_statement -> printer .)
    RETURN          reduce using rule 32 (function_statement -> printer .)
    WHILE           reduce using rule 32 (function_statement -> printer .)
    FIGURE          reduce using rule 32 (function_statement -> printer .)
    INT             reduce using rule 32 (function_statement -> printer .)
    FLOAT           reduce using rule 32 (function_statement -> printer .)
    STRING          reduce using rule 32 (function_statement -> printer .)
    BOOLEAN         reduce using rule 32 (function_statement -> printer .)


state 70

    (33) function_statement -> increment .

    RCURLY_BRACKET  reduce using rule 33 (function_statement -> increment .)
    ID              reduce using rule 33 (function_statement -> increment .)
    IF              reduce using rule 33 (function_statement -> increment .)
    PRINT           reduce using rule 33 (function_statement -> increment .)
    FOR             reduce using rule 33 (function_statement -> increment .)
    RETURN          reduce using rule 33 (function_statement -> increment .)
    WHILE           reduce using rule 33 (function_statement -> increment .)
    FIGURE          reduce using rule 33 (function_statement -> increment .)
    INT             reduce using rule 33 (function_statement -> increment .)
    FLOAT           reduce using rule 33 (function_statement -> increment .)
    STRING          reduce using rule 33 (function_statement -> increment .)
    BOOLEAN         reduce using rule 33 (function_statement -> increment .)


state 71

    (34) function_statement -> for .

    RCURLY_BRACKET  reduce using rule 34 (function_statement -> for .)
    ID              reduce using rule 34 (function_statement -> for .)
    IF              reduce using rule 34 (function_statement -> for .)
    PRINT           reduce using rule 34 (function_statement -> for .)
    FOR             reduce using rule 34 (function_statement -> for .)
    RETURN          reduce using rule 34 (function_statement -> for .)
    WHILE           reduce using rule 34 (function_statement -> for .)
    FIGURE          reduce using rule 34 (function_statement -> for .)
    INT             reduce using rule 34 (function_statement -> for .)
    FLOAT           reduce using rule 34 (function_statement -> for .)
    STRING          reduce using rule 34 (function_statement -> for .)
    BOOLEAN         reduce using rule 34 (function_statement -> for .)


state 72

    (35) function_statement -> return .

    RCURLY_BRACKET  reduce using rule 35 (function_statement -> return .)
    ID              reduce using rule 35 (function_statement -> return .)
    IF              reduce using rule 35 (function_statement -> return .)
    PRINT           reduce using rule 35 (function_statement -> return .)
    FOR             reduce using rule 35 (function_statement -> return .)
    RETURN          reduce using rule 35 (function_statement -> return .)
    WHILE           reduce using rule 35 (function_statement -> return .)
    FIGURE          reduce using rule 35 (function_statement -> return .)
    INT             reduce using rule 35 (function_statement -> return .)
    FLOAT           reduce using rule 35 (function_statement -> return .)
    STRING          reduce using rule 35 (function_statement -> return .)
    BOOLEAN         reduce using rule 35 (function_statement -> return .)


state 73

    (36) function_statement -> function_call .

    RCURLY_BRACKET  reduce using rule 36 (function_statement -> function_call .)
    ID              reduce using rule 36 (function_statement -> function_call .)
    IF              reduce using rule 36 (function_statement -> function_call .)
    PRINT           reduce using rule 36 (function_statement -> function_call .)
    FOR             reduce using rule 36 (function_statement -> function_call .)
    RETURN          reduce using rule 36 (function_statement -> function_call .)
    WHILE           reduce using rule 36 (function_statement -> function_call .)
    FIGURE          reduce using rule 36 (function_statement -> function_call .)
    INT             reduce using rule 36 (function_statement -> function_call .)
    FLOAT           reduce using rule 36 (function_statement -> function_call .)
    STRING          reduce using rule 36 (function_statement -> function_call .)
    BOOLEAN         reduce using rule 36 (function_statement -> function_call .)


state 74

    (37) function_statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 37 (function_statement -> fun_esp .)
    ID              reduce using rule 37 (function_statement -> fun_esp .)
    IF              reduce using rule 37 (function_statement -> fun_esp .)
    PRINT           reduce using rule 37 (function_statement -> fun_esp .)
    FOR             reduce using rule 37 (function_statement -> fun_esp .)
    RETURN          reduce using rule 37 (function_statement -> fun_esp .)
    WHILE           reduce using rule 37 (function_statement -> fun_esp .)
    FIGURE          reduce using rule 37 (function_statement -> fun_esp .)
    INT             reduce using rule 37 (function_statement -> fun_esp .)
    FLOAT           reduce using rule 37 (function_statement -> fun_esp .)
    STRING          reduce using rule 37 (function_statement -> fun_esp .)
    BOOLEAN         reduce using rule 37 (function_statement -> fun_esp .)


state 75

    (38) function_statement -> vars .

    RCURLY_BRACKET  reduce using rule 38 (function_statement -> vars .)
    ID              reduce using rule 38 (function_statement -> vars .)
    IF              reduce using rule 38 (function_statement -> vars .)
    PRINT           reduce using rule 38 (function_statement -> vars .)
    FOR             reduce using rule 38 (function_statement -> vars .)
    RETURN          reduce using rule 38 (function_statement -> vars .)
    WHILE           reduce using rule 38 (function_statement -> vars .)
    FIGURE          reduce using rule 38 (function_statement -> vars .)
    INT             reduce using rule 38 (function_statement -> vars .)
    FLOAT           reduce using rule 38 (function_statement -> vars .)
    STRING          reduce using rule 38 (function_statement -> vars .)
    BOOLEAN         reduce using rule 38 (function_statement -> vars .)


state 76

    (39) function_statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 39 (function_statement -> while_loop .)
    ID              reduce using rule 39 (function_statement -> while_loop .)
    IF              reduce using rule 39 (function_statement -> while_loop .)
    PRINT           reduce using rule 39 (function_statement -> while_loop .)
    FOR             reduce using rule 39 (function_statement -> while_loop .)
    RETURN          reduce using rule 39 (function_statement -> while_loop .)
    WHILE           reduce using rule 39 (function_statement -> while_loop .)
    FIGURE          reduce using rule 39 (function_statement -> while_loop .)
    INT             reduce using rule 39 (function_statement -> while_loop .)
    FLOAT           reduce using rule 39 (function_statement -> while_loop .)
    STRING          reduce using rule 39 (function_statement -> while_loop .)
    BOOLEAN         reduce using rule 39 (function_statement -> while_loop .)


state 77

    (52) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (53) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (66) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (79) function_call -> ID . create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (110) push_varID_to_Stack -> . epsilon
    (84) create_era -> . epsilon
    (135) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 90
    OP_EQUALS       reduce using rule 135 (epsilon -> .)
    OP_PLUS_EQUALS  reduce using rule 135 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_LPAREN       reduce using rule 135 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 89
    create_era                     shift and go to state 91
    epsilon                        shift and go to state 92

state 78

    (55) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (56) if -> IF . OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_LPAREN       shift and go to state 93


state 79

    (62) printer -> PRINT . OP_LPAREN impression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 94


state 80

    (72) for -> FOR . OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    OP_LPAREN       shift and go to state 95


state 81

    (77) return -> RETURN . mega_expression return_quadruple SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 96
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 82

    (119) fun_esp -> figure_creation .

    RCURLY_BRACKET  reduce using rule 119 (fun_esp -> figure_creation .)
    ID              reduce using rule 119 (fun_esp -> figure_creation .)
    IF              reduce using rule 119 (fun_esp -> figure_creation .)
    PRINT           reduce using rule 119 (fun_esp -> figure_creation .)
    FOR             reduce using rule 119 (fun_esp -> figure_creation .)
    RETURN          reduce using rule 119 (fun_esp -> figure_creation .)
    WHILE           reduce using rule 119 (fun_esp -> figure_creation .)
    FIGURE          reduce using rule 119 (fun_esp -> figure_creation .)
    INT             reduce using rule 119 (fun_esp -> figure_creation .)
    FLOAT           reduce using rule 119 (fun_esp -> figure_creation .)
    STRING          reduce using rule 119 (fun_esp -> figure_creation .)
    BOOLEAN         reduce using rule 119 (fun_esp -> figure_creation .)


state 83

    (73) while_loop -> WHILE . loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (74) loop_jumpCount -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)

    loop_jumpCount                 shift and go to state 108
    epsilon                        shift and go to state 109

state 84

    (120) figure_creation -> FIGURE . ID OP_TWO_POINTS figure POSSESS bloque_figura

    ID              shift and go to state 110


state 85

    (23) function_parameters -> type save_type ID pushTo_varsTable . function_parameters_prime
    (25) function_parameters_prime -> . COMA type save_type ID pushTo_varsTable function_parameters_prime
    (26) function_parameters_prime -> . epsilon
    (135) epsilon -> .

    COMA            shift and go to state 112
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    function_parameters_prime      shift and go to state 111
    epsilon                        shift and go to state 113

state 86

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature . function_bloque add_NumVars function
    (27) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 52

    function_bloque                shift and go to state 114

state 87

    (12) pushTo_functionSignature -> epsilon .

    LCURLY_BRACKET  reduce using rule 12 (pushTo_functionSignature -> epsilon .)


state 88

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature . function_bloque add_NumVars function
    (27) function_bloque -> . LCURLY_BRACKET function_bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 52

    function_bloque                shift and go to state 115

state 89

    (52) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (66) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_EQUALS       shift and go to state 116
    OP_PLUS_EQUALS  shift and go to state 117
    OP_MINUS_EQUALS shift and go to state 118
    OP_PLUS         shift and go to state 119
    OP_MINUS        shift and go to state 120


state 90

    (53) assigment -> ID OP_LSQUARE_PAREN . VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    VAR_INT         shift and go to state 121


state 91

    (79) function_call -> ID create_era . OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON

    OP_LPAREN       shift and go to state 122


state 92

    (110) push_varID_to_Stack -> epsilon .
    (84) create_era -> epsilon .

    OP_EQUALS       reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_LPAREN       reduce using rule 84 (create_era -> epsilon .)


state 93

    (55) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (56) if -> IF OP_LPAREN . mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 123
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 94

    (62) printer -> PRINT OP_LPAREN . impression OP_RPAREN SEMICOLON
    (63) impression -> . mega_expression printer_quadruple
    (64) impression -> . mega_expression printer_quadruple COMA impression
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    impression                     shift and go to state 124
    mega_expression                shift and go to state 125
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 95

    (72) for -> FOR OP_LPAREN . assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (52) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (53) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    ID              shift and go to state 127

    assigment                      shift and go to state 126

state 96

    (77) return -> RETURN mega_expression . return_quadruple SEMICOLON
    (78) return_quadruple -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    return_quadruple               shift and go to state 128
    epsilon                        shift and go to state 129

state 97

    (87) mega_expression -> super_expression . check_symbol_megaexp
    (88) mega_expression -> super_expression . AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> super_expression . OR push_symbol super_expression check_symbol_megaexp
    (90) check_symbol_megaexp -> . epsilon
    (135) epsilon -> .

    AND             shift and go to state 131
    OR              shift and go to state 132
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 130
    epsilon                        shift and go to state 133

state 98

    (91) super_expression -> expression . check_symbol_superexp
    (92) super_expression -> expression . OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> expression . OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> expression . OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> expression . OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> expression . OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> expression . OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    OP_GREATER_THAN shift and go to state 135
    OP_LESS_THAN    shift and go to state 136
    OP_GREATER_EQUALS_THAN shift and go to state 137
    OP_LESS_EQUALS_THAN shift and go to state 138
    OP_EQUALS_TWO   shift and go to state 139
    OP_NOT_EQUALS   shift and go to state 140
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 134
    epsilon                        shift and go to state 141

state 99

    (99) expression -> term . check_symbol_exp
    (100) expression -> term . check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> term . check_symbol_exp OP_MINUS push_symbol expression
    (103) check_symbol_exp -> . epsilon
    (135) epsilon -> .

    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_exp               shift and go to state 142
    epsilon                        shift and go to state 143

state 100

    (104) term -> fact . check_symbol_term
    (105) term -> fact . check_symbol_term OP_DIVISION push_symbol term
    (106) term -> fact . check_symbol_term OP_TIMES push_symbol term
    (107) check_symbol_term -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_term              shift and go to state 144
    epsilon                        shift and go to state 145

state 101

    (108) fact -> var_cte .

    OP_DIVISION     reduce using rule 108 (fact -> var_cte .)
    OP_TIMES        reduce using rule 108 (fact -> var_cte .)
    OP_PLUS         reduce using rule 108 (fact -> var_cte .)
    OP_MINUS        reduce using rule 108 (fact -> var_cte .)
    OP_GREATER_THAN reduce using rule 108 (fact -> var_cte .)
    OP_LESS_THAN    reduce using rule 108 (fact -> var_cte .)
    OP_GREATER_EQUALS_THAN reduce using rule 108 (fact -> var_cte .)
    OP_LESS_EQUALS_THAN reduce using rule 108 (fact -> var_cte .)
    OP_EQUALS_TWO   reduce using rule 108 (fact -> var_cte .)
    OP_NOT_EQUALS   reduce using rule 108 (fact -> var_cte .)
    AND             reduce using rule 108 (fact -> var_cte .)
    OR              reduce using rule 108 (fact -> var_cte .)
    SEMICOLON       reduce using rule 108 (fact -> var_cte .)
    OP_RPAREN       reduce using rule 108 (fact -> var_cte .)
    COMA            reduce using rule 108 (fact -> var_cte .)


state 102

    (109) fact -> OP_LPAREN . push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (111) push_bottle_bottom -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_bottle_bottom             shift and go to state 146
    epsilon                        shift and go to state 147

state 103

    (113) var_cte -> ID . push_varID_to_Stack
    (110) push_varID_to_Stack -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 148
    epsilon                        shift and go to state 149

state 104

    (114) var_cte -> VAR_INT . push_cte_toTable
    (118) push_cte_toTable -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    push_cte_toTable               shift and go to state 150
    epsilon                        shift and go to state 151

state 105

    (115) var_cte -> VAR_FLOAT . push_cte_toTable
    (118) push_cte_toTable -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    push_cte_toTable               shift and go to state 152
    epsilon                        shift and go to state 151

state 106

    (116) var_cte -> VAR_STRING . push_cte_toTable
    (118) push_cte_toTable -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    push_cte_toTable               shift and go to state 153
    epsilon                        shift and go to state 151

state 107

    (117) var_cte -> VAR_BOOLEAN . push_cte_toTable
    (118) push_cte_toTable -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    push_cte_toTable               shift and go to state 154
    epsilon                        shift and go to state 151

state 108

    (73) while_loop -> WHILE loop_jumpCount . OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill

    OP_LPAREN       shift and go to state 155


state 109

    (74) loop_jumpCount -> epsilon .

    OP_LPAREN       reduce using rule 74 (loop_jumpCount -> epsilon .)
    ID              reduce using rule 74 (loop_jumpCount -> epsilon .)
    VAR_INT         reduce using rule 74 (loop_jumpCount -> epsilon .)
    VAR_FLOAT       reduce using rule 74 (loop_jumpCount -> epsilon .)
    VAR_STRING      reduce using rule 74 (loop_jumpCount -> epsilon .)
    VAR_BOOLEAN     reduce using rule 74 (loop_jumpCount -> epsilon .)


state 110

    (120) figure_creation -> FIGURE ID . OP_TWO_POINTS figure POSSESS bloque_figura

    OP_TWO_POINTS   shift and go to state 156


state 111

    (23) function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime .

    OP_RPAREN       reduce using rule 23 (function_parameters -> type save_type ID pushTo_varsTable function_parameters_prime .)


state 112

    (25) function_parameters_prime -> COMA . type save_type ID pushTo_varsTable function_parameters_prime
    (19) type -> . INT
    (20) type -> . FLOAT
    (21) type -> . STRING
    (22) type -> . BOOLEAN

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    STRING          shift and go to state 10
    BOOLEAN         shift and go to state 11

    type                           shift and go to state 157

state 113

    (26) function_parameters_prime -> epsilon .

    OP_RPAREN       reduce using rule 26 (function_parameters_prime -> epsilon .)


state 114

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque . add_NumVars function
    (13) add_NumVars -> . epsilon
    (135) epsilon -> .

    FUNCTION        reduce using rule 135 (epsilon -> .)
    MAIN            reduce using rule 135 (epsilon -> .)

    add_NumVars                    shift and go to state 158
    epsilon                        shift and go to state 159

state 115

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque . add_NumVars function
    (13) add_NumVars -> . epsilon
    (135) epsilon -> .

    FUNCTION        reduce using rule 135 (epsilon -> .)
    MAIN            reduce using rule 135 (epsilon -> .)

    add_NumVars                    shift and go to state 160
    epsilon                        shift and go to state 159

state 116

    (52) assigment -> ID push_varID_to_Stack OP_EQUALS . push_symbol mega_expression equals_quadruple SEMICOLON
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 161
    epsilon                        shift and go to state 162

state 117

    (66) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 163
    epsilon                        shift and go to state 162

state 118

    (67) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS . push_symbol mega_expression increment_equals SEMICOLON
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 164
    epsilon                        shift and go to state 162

state 119

    (68) increment -> ID push_varID_to_Stack OP_PLUS . OP_PLUS incrementByOne SEMICOLON

    OP_PLUS         shift and go to state 165


state 120

    (69) increment -> ID push_varID_to_Stack OP_MINUS . OP_MINUS incrementByOne SEMICOLON

    OP_MINUS        shift and go to state 166


state 121

    (53) assigment -> ID OP_LSQUARE_PAREN VAR_INT . OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON

    OP_RSQUARE_PAREN shift and go to state 167


state 122

    (79) function_call -> ID create_era OP_LPAREN . function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (80) function_call_parameters -> . mega_expression create_param function_call_parameters_prime
    (81) function_call_parameters -> . epsilon
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (135) epsilon -> .
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    function_call_parameters       shift and go to state 168
    mega_expression                shift and go to state 169
    epsilon                        shift and go to state 170
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 123

    (55) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (56) if -> IF OP_LPAREN mega_expression . OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto

    OP_RPAREN       shift and go to state 171


state 124

    (62) printer -> PRINT OP_LPAREN impression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 172


state 125

    (63) impression -> mega_expression . printer_quadruple
    (64) impression -> mega_expression . printer_quadruple COMA impression
    (65) printer_quadruple -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    printer_quadruple              shift and go to state 173
    epsilon                        shift and go to state 174

state 126

    (72) for -> FOR OP_LPAREN assigment . loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (74) loop_jumpCount -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    loop_jumpCount                 shift and go to state 175
    epsilon                        shift and go to state 109

state 127

    (52) assigment -> ID . push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (53) assigment -> ID . OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (110) push_varID_to_Stack -> . epsilon
    (135) epsilon -> .

    OP_LSQUARE_PAREN shift and go to state 90
    OP_EQUALS       reduce using rule 135 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 176
    epsilon                        shift and go to state 149

state 128

    (77) return -> RETURN mega_expression return_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 177


state 129

    (78) return_quadruple -> epsilon .

    SEMICOLON       reduce using rule 78 (return_quadruple -> epsilon .)


state 130

    (87) mega_expression -> super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 87 (mega_expression -> super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 87 (mega_expression -> super_expression check_symbol_megaexp .)
    COMA            reduce using rule 87 (mega_expression -> super_expression check_symbol_megaexp .)


state 131

    (88) mega_expression -> super_expression AND . push_symbol super_expression check_symbol_megaexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 178
    epsilon                        shift and go to state 162

state 132

    (89) mega_expression -> super_expression OR . push_symbol super_expression check_symbol_megaexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 179
    epsilon                        shift and go to state 162

state 133

    (90) check_symbol_megaexp -> epsilon .

    SEMICOLON       reduce using rule 90 (check_symbol_megaexp -> epsilon .)
    OP_RPAREN       reduce using rule 90 (check_symbol_megaexp -> epsilon .)
    COMA            reduce using rule 90 (check_symbol_megaexp -> epsilon .)


state 134

    (91) super_expression -> expression check_symbol_superexp .

    AND             reduce using rule 91 (super_expression -> expression check_symbol_superexp .)
    OR              reduce using rule 91 (super_expression -> expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 91 (super_expression -> expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 91 (super_expression -> expression check_symbol_superexp .)
    COMA            reduce using rule 91 (super_expression -> expression check_symbol_superexp .)


state 135

    (92) super_expression -> expression OP_GREATER_THAN . push_symbol expression check_symbol_superexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 180
    epsilon                        shift and go to state 162

state 136

    (93) super_expression -> expression OP_LESS_THAN . push_symbol expression check_symbol_superexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 181
    epsilon                        shift and go to state 162

state 137

    (94) super_expression -> expression OP_GREATER_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 182
    epsilon                        shift and go to state 162

state 138

    (95) super_expression -> expression OP_LESS_EQUALS_THAN . push_symbol expression check_symbol_superexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 183
    epsilon                        shift and go to state 162

state 139

    (96) super_expression -> expression OP_EQUALS_TWO . push_symbol expression check_symbol_superexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 184
    epsilon                        shift and go to state 162

state 140

    (97) super_expression -> expression OP_NOT_EQUALS . push_symbol expression check_symbol_superexp
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 185
    epsilon                        shift and go to state 162

state 141

    (98) check_symbol_superexp -> epsilon .

    AND             reduce using rule 98 (check_symbol_superexp -> epsilon .)
    OR              reduce using rule 98 (check_symbol_superexp -> epsilon .)
    SEMICOLON       reduce using rule 98 (check_symbol_superexp -> epsilon .)
    OP_RPAREN       reduce using rule 98 (check_symbol_superexp -> epsilon .)
    COMA            reduce using rule 98 (check_symbol_superexp -> epsilon .)


state 142

    (99) expression -> term check_symbol_exp .
    (100) expression -> term check_symbol_exp . OP_PLUS push_symbol expression
    (101) expression -> term check_symbol_exp . OP_MINUS push_symbol expression

    OP_GREATER_THAN reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_LESS_THAN    reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_GREATER_EQUALS_THAN reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_LESS_EQUALS_THAN reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_EQUALS_TWO   reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_NOT_EQUALS   reduce using rule 99 (expression -> term check_symbol_exp .)
    AND             reduce using rule 99 (expression -> term check_symbol_exp .)
    OR              reduce using rule 99 (expression -> term check_symbol_exp .)
    SEMICOLON       reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_RPAREN       reduce using rule 99 (expression -> term check_symbol_exp .)
    COMA            reduce using rule 99 (expression -> term check_symbol_exp .)
    OP_PLUS         shift and go to state 186
    OP_MINUS        shift and go to state 187


state 143

    (103) check_symbol_exp -> epsilon .

    OP_PLUS         reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_MINUS        reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_GREATER_THAN reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_LESS_THAN    reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 103 (check_symbol_exp -> epsilon .)
    AND             reduce using rule 103 (check_symbol_exp -> epsilon .)
    OR              reduce using rule 103 (check_symbol_exp -> epsilon .)
    SEMICOLON       reduce using rule 103 (check_symbol_exp -> epsilon .)
    OP_RPAREN       reduce using rule 103 (check_symbol_exp -> epsilon .)
    COMA            reduce using rule 103 (check_symbol_exp -> epsilon .)


state 144

    (104) term -> fact check_symbol_term .
    (105) term -> fact check_symbol_term . OP_DIVISION push_symbol term
    (106) term -> fact check_symbol_term . OP_TIMES push_symbol term

    OP_PLUS         reduce using rule 104 (term -> fact check_symbol_term .)
    OP_MINUS        reduce using rule 104 (term -> fact check_symbol_term .)
    OP_GREATER_THAN reduce using rule 104 (term -> fact check_symbol_term .)
    OP_LESS_THAN    reduce using rule 104 (term -> fact check_symbol_term .)
    OP_GREATER_EQUALS_THAN reduce using rule 104 (term -> fact check_symbol_term .)
    OP_LESS_EQUALS_THAN reduce using rule 104 (term -> fact check_symbol_term .)
    OP_EQUALS_TWO   reduce using rule 104 (term -> fact check_symbol_term .)
    OP_NOT_EQUALS   reduce using rule 104 (term -> fact check_symbol_term .)
    AND             reduce using rule 104 (term -> fact check_symbol_term .)
    OR              reduce using rule 104 (term -> fact check_symbol_term .)
    SEMICOLON       reduce using rule 104 (term -> fact check_symbol_term .)
    OP_RPAREN       reduce using rule 104 (term -> fact check_symbol_term .)
    COMA            reduce using rule 104 (term -> fact check_symbol_term .)
    OP_DIVISION     shift and go to state 188
    OP_TIMES        shift and go to state 189


state 145

    (107) check_symbol_term -> epsilon .

    OP_DIVISION     reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_TIMES        reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_PLUS         reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_MINUS        reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_GREATER_THAN reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_LESS_THAN    reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 107 (check_symbol_term -> epsilon .)
    AND             reduce using rule 107 (check_symbol_term -> epsilon .)
    OR              reduce using rule 107 (check_symbol_term -> epsilon .)
    SEMICOLON       reduce using rule 107 (check_symbol_term -> epsilon .)
    OP_RPAREN       reduce using rule 107 (check_symbol_term -> epsilon .)
    COMA            reduce using rule 107 (check_symbol_term -> epsilon .)


state 146

    (109) fact -> OP_LPAREN push_bottle_bottom . mega_expression OP_RPAREN remove_bottle_bottom
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 190
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 147

    (111) push_bottle_bottom -> epsilon .

    OP_LPAREN       reduce using rule 111 (push_bottle_bottom -> epsilon .)
    ID              reduce using rule 111 (push_bottle_bottom -> epsilon .)
    VAR_INT         reduce using rule 111 (push_bottle_bottom -> epsilon .)
    VAR_FLOAT       reduce using rule 111 (push_bottle_bottom -> epsilon .)
    VAR_STRING      reduce using rule 111 (push_bottle_bottom -> epsilon .)
    VAR_BOOLEAN     reduce using rule 111 (push_bottle_bottom -> epsilon .)


state 148

    (113) var_cte -> ID push_varID_to_Stack .

    OP_DIVISION     reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_TIMES        reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_PLUS         reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_MINUS        reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_THAN reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_THAN    reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_GREATER_EQUALS_THAN reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_LESS_EQUALS_THAN reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_EQUALS_TWO   reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_NOT_EQUALS   reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    AND             reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OR              reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    SEMICOLON       reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    OP_RPAREN       reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)
    COMA            reduce using rule 113 (var_cte -> ID push_varID_to_Stack .)


state 149

    (110) push_varID_to_Stack -> epsilon .

    OP_DIVISION     reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_TIMES        reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_PLUS         reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_MINUS        reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_THAN reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_LESS_THAN    reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    AND             reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OR              reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    SEMICOLON       reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_RPAREN       reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    COMA            reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_EQUALS       reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_PLUS_EQUALS  reduce using rule 110 (push_varID_to_Stack -> epsilon .)
    OP_MINUS_EQUALS reduce using rule 110 (push_varID_to_Stack -> epsilon .)


state 150

    (114) var_cte -> VAR_INT push_cte_toTable .

    OP_DIVISION     reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_TIMES        reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_PLUS         reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_MINUS        reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    AND             reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OR              reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    SEMICOLON       reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    OP_RPAREN       reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)
    COMA            reduce using rule 114 (var_cte -> VAR_INT push_cte_toTable .)


state 151

    (118) push_cte_toTable -> epsilon .

    OP_DIVISION     reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_TIMES        reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_PLUS         reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_MINUS        reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_GREATER_THAN reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_LESS_THAN    reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 118 (push_cte_toTable -> epsilon .)
    AND             reduce using rule 118 (push_cte_toTable -> epsilon .)
    OR              reduce using rule 118 (push_cte_toTable -> epsilon .)
    SEMICOLON       reduce using rule 118 (push_cte_toTable -> epsilon .)
    OP_RPAREN       reduce using rule 118 (push_cte_toTable -> epsilon .)
    COMA            reduce using rule 118 (push_cte_toTable -> epsilon .)


state 152

    (115) var_cte -> VAR_FLOAT push_cte_toTable .

    OP_DIVISION     reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_TIMES        reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_PLUS         reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_MINUS        reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    AND             reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OR              reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    SEMICOLON       reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    OP_RPAREN       reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)
    COMA            reduce using rule 115 (var_cte -> VAR_FLOAT push_cte_toTable .)


state 153

    (116) var_cte -> VAR_STRING push_cte_toTable .

    OP_DIVISION     reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_TIMES        reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_PLUS         reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_MINUS        reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    AND             reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OR              reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    SEMICOLON       reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    OP_RPAREN       reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)
    COMA            reduce using rule 116 (var_cte -> VAR_STRING push_cte_toTable .)


state 154

    (117) var_cte -> VAR_BOOLEAN push_cte_toTable .

    OP_DIVISION     reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_TIMES        reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_PLUS         reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_MINUS        reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_GREATER_THAN reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_LESS_THAN    reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_GREATER_EQUALS_THAN reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_LESS_EQUALS_THAN reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_EQUALS_TWO   reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_NOT_EQUALS   reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    AND             reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OR              reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    SEMICOLON       reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    OP_RPAREN       reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)
    COMA            reduce using rule 117 (var_cte -> VAR_BOOLEAN push_cte_toTable .)


state 155

    (73) while_loop -> WHILE loop_jumpCount OP_LPAREN . mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 191
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 156

    (120) figure_creation -> FIGURE ID OP_TWO_POINTS . figure POSSESS bloque_figura
    (121) figure -> . POINT
    (122) figure -> . LINE
    (123) figure -> . SQUARE
    (124) figure -> . RECTANGLE
    (125) figure -> . TRIANGLE
    (126) figure -> . CIRCLE
    (127) figure -> . ARC

    POINT           shift and go to state 193
    LINE            shift and go to state 194
    SQUARE          shift and go to state 195
    RECTANGLE       shift and go to state 196
    TRIANGLE        shift and go to state 197
    CIRCLE          shift and go to state 198
    ARC             shift and go to state 199

    figure                         shift and go to state 192

state 157

    (25) function_parameters_prime -> COMA type . save_type ID pushTo_varsTable function_parameters_prime
    (7) save_type -> . epsilon
    (135) epsilon -> .

    ID              reduce using rule 135 (epsilon -> .)

    save_type                      shift and go to state 200
    epsilon                        shift and go to state 15

state 158

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars . function
    (8) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (9) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (10) function -> . epsilon
    (135) epsilon -> .

    FUNCTION        shift and go to state 17
    MAIN            reduce using rule 135 (epsilon -> .)

    function                       shift and go to state 201
    epsilon                        shift and go to state 18

state 159

    (13) add_NumVars -> epsilon .

    FUNCTION        reduce using rule 13 (add_NumVars -> epsilon .)
    MAIN            reduce using rule 13 (add_NumVars -> epsilon .)


state 160

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars . function
    (8) function -> . FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (9) function -> . FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function
    (10) function -> . epsilon
    (135) epsilon -> .

    FUNCTION        shift and go to state 17
    MAIN            reduce using rule 135 (epsilon -> .)

    function                       shift and go to state 202
    epsilon                        shift and go to state 18

state 161

    (52) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol . mega_expression equals_quadruple SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 203
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 162

    (102) push_symbol -> epsilon .

    OP_LPAREN       reduce using rule 102 (push_symbol -> epsilon .)
    ID              reduce using rule 102 (push_symbol -> epsilon .)
    VAR_INT         reduce using rule 102 (push_symbol -> epsilon .)
    VAR_FLOAT       reduce using rule 102 (push_symbol -> epsilon .)
    VAR_STRING      reduce using rule 102 (push_symbol -> epsilon .)
    VAR_BOOLEAN     reduce using rule 102 (push_symbol -> epsilon .)


state 163

    (66) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 204
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 164

    (67) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol . mega_expression increment_equals SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 205
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 165

    (68) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS . incrementByOne SEMICOLON
    (70) incrementByOne -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    incrementByOne                 shift and go to state 206
    epsilon                        shift and go to state 207

state 166

    (69) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS . incrementByOne SEMICOLON
    (70) incrementByOne -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    incrementByOne                 shift and go to state 208
    epsilon                        shift and go to state 207

state 167

    (53) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN . OP_EQUALS mega_expression SEMICOLON

    OP_EQUALS       shift and go to state 209


state 168

    (79) function_call -> ID create_era OP_LPAREN function_call_parameters . OP_RPAREN create_gosub SEMICOLON

    OP_RPAREN       shift and go to state 210


state 169

    (80) function_call_parameters -> mega_expression . create_param function_call_parameters_prime
    (85) create_param -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    create_param                   shift and go to state 211
    epsilon                        shift and go to state 212

state 170

    (81) function_call_parameters -> epsilon .

    OP_RPAREN       reduce using rule 81 (function_call_parameters -> epsilon .)


state 171

    (55) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF1
    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN . if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (57) if_gotoF_quadruple -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    if_gotoF_quadruple             shift and go to state 213
    epsilon                        shift and go to state 214

state 172

    (62) printer -> PRINT OP_LPAREN impression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 173

    (63) impression -> mega_expression printer_quadruple .
    (64) impression -> mega_expression printer_quadruple . COMA impression

    OP_RPAREN       reduce using rule 63 (impression -> mega_expression printer_quadruple .)
    COMA            shift and go to state 216


state 174

    (65) printer_quadruple -> epsilon .

    COMA            reduce using rule 65 (printer_quadruple -> epsilon .)
    OP_RPAREN       reduce using rule 65 (printer_quadruple -> epsilon .)


state 175

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount . mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 217
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 176

    (52) assigment -> ID push_varID_to_Stack . OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON

    OP_EQUALS       shift and go to state 116


state 177

    (77) return -> RETURN mega_expression return_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    ID              reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    IF              reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    PRINT           reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FOR             reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    RETURN          reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    WHILE           reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FIGURE          reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    INT             reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    FLOAT           reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    STRING          reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 77 (return -> RETURN mega_expression return_quadruple SEMICOLON .)


state 178

    (88) mega_expression -> super_expression AND push_symbol . super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    super_expression               shift and go to state 218
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 179

    (89) mega_expression -> super_expression OR push_symbol . super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    super_expression               shift and go to state 219
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 180

    (92) super_expression -> expression OP_GREATER_THAN push_symbol . expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    expression                     shift and go to state 220
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 181

    (93) super_expression -> expression OP_LESS_THAN push_symbol . expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    expression                     shift and go to state 221
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 182

    (94) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    expression                     shift and go to state 222
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 183

    (95) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol . expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    expression                     shift and go to state 223
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 184

    (96) super_expression -> expression OP_EQUALS_TWO push_symbol . expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    expression                     shift and go to state 224
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 185

    (97) super_expression -> expression OP_NOT_EQUALS push_symbol . expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    expression                     shift and go to state 225
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 186

    (100) expression -> term check_symbol_exp OP_PLUS . push_symbol expression
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 226
    epsilon                        shift and go to state 162

state 187

    (101) expression -> term check_symbol_exp OP_MINUS . push_symbol expression
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 227
    epsilon                        shift and go to state 162

state 188

    (105) term -> fact check_symbol_term OP_DIVISION . push_symbol term
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 228
    epsilon                        shift and go to state 162

state 189

    (106) term -> fact check_symbol_term OP_TIMES . push_symbol term
    (102) push_symbol -> . epsilon
    (135) epsilon -> .

    OP_LPAREN       reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    VAR_INT         reduce using rule 135 (epsilon -> .)
    VAR_FLOAT       reduce using rule 135 (epsilon -> .)
    VAR_STRING      reduce using rule 135 (epsilon -> .)
    VAR_BOOLEAN     reduce using rule 135 (epsilon -> .)

    push_symbol                    shift and go to state 229
    epsilon                        shift and go to state 162

state 190

    (109) fact -> OP_LPAREN push_bottle_bottom mega_expression . OP_RPAREN remove_bottle_bottom

    OP_RPAREN       shift and go to state 230


state 191

    (73) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression . OP_RPAREN loop_gotoF bloque loop_fill

    OP_RPAREN       shift and go to state 231


state 192

    (120) figure_creation -> FIGURE ID OP_TWO_POINTS figure . POSSESS bloque_figura

    POSSESS         shift and go to state 232


state 193

    (121) figure -> POINT .

    POSSESS         reduce using rule 121 (figure -> POINT .)


state 194

    (122) figure -> LINE .

    POSSESS         reduce using rule 122 (figure -> LINE .)


state 195

    (123) figure -> SQUARE .

    POSSESS         reduce using rule 123 (figure -> SQUARE .)


state 196

    (124) figure -> RECTANGLE .

    POSSESS         reduce using rule 124 (figure -> RECTANGLE .)


state 197

    (125) figure -> TRIANGLE .

    POSSESS         reduce using rule 125 (figure -> TRIANGLE .)


state 198

    (126) figure -> CIRCLE .

    POSSESS         reduce using rule 126 (figure -> CIRCLE .)


state 199

    (127) figure -> ARC .

    POSSESS         reduce using rule 127 (figure -> ARC .)


state 200

    (25) function_parameters_prime -> COMA type save_type . ID pushTo_varsTable function_parameters_prime

    ID              shift and go to state 233


state 201

    (8) function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .

    MAIN            reduce using rule 8 (function -> FUNCTION type ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .)


state 202

    (9) function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .

    MAIN            reduce using rule 9 (function -> FUNCTION VOID ID pushTo_FunctionDir OP_LPAREN function_parameters OP_RPAREN add_Function_FirstQuadruple pushTo_functionSignature function_bloque add_NumVars function .)


state 203

    (52) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression . equals_quadruple SEMICOLON
    (54) equals_quadruple -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    equals_quadruple               shift and go to state 234
    epsilon                        shift and go to state 235

state 204

    (66) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (71) increment_equals -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    increment_equals               shift and go to state 236
    epsilon                        shift and go to state 237

state 205

    (67) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression . increment_equals SEMICOLON
    (71) increment_equals -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    increment_equals               shift and go to state 238
    epsilon                        shift and go to state 237

state 206

    (68) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 239


state 207

    (70) incrementByOne -> epsilon .

    SEMICOLON       reduce using rule 70 (incrementByOne -> epsilon .)


state 208

    (69) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne . SEMICOLON

    SEMICOLON       shift and go to state 240


state 209

    (53) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS . mega_expression SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 241
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 210

    (79) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN . create_gosub SEMICOLON
    (86) create_gosub -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)

    create_gosub                   shift and go to state 242
    epsilon                        shift and go to state 243

state 211

    (80) function_call_parameters -> mega_expression create_param . function_call_parameters_prime
    (82) function_call_parameters_prime -> . COMA mega_expression create_param function_call_parameters_prime
    (83) function_call_parameters_prime -> . epsilon
    (135) epsilon -> .

    COMA            shift and go to state 245
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    function_call_parameters_prime shift and go to state 244
    epsilon                        shift and go to state 246

state 212

    (85) create_param -> epsilon .

    COMA            reduce using rule 85 (create_param -> epsilon .)
    OP_RPAREN       reduce using rule 85 (create_param -> epsilon .)


state 213

    (55) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF1
    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple . bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (40) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 248

    bloque                         shift and go to state 247

state 214

    (57) if_gotoF_quadruple -> epsilon .

    LCURLY_BRACKET  reduce using rule 57 (if_gotoF_quadruple -> epsilon .)


state 215

    (62) printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    ID              reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    IF              reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    PRINT           reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FOR             reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FIGURE          reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    INT             reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    FLOAT           reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    STRING          reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 62 (printer -> PRINT OP_LPAREN impression OP_RPAREN SEMICOLON .)


state 216

    (64) impression -> mega_expression printer_quadruple COMA . impression
    (63) impression -> . mega_expression printer_quadruple
    (64) impression -> . mega_expression printer_quadruple COMA impression
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 125
    impression                     shift and go to state 249
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 217

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression . SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill

    SEMICOLON       shift and go to state 250


state 218

    (88) mega_expression -> super_expression AND push_symbol super_expression . check_symbol_megaexp
    (90) check_symbol_megaexp -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 251
    epsilon                        shift and go to state 133

state 219

    (89) mega_expression -> super_expression OR push_symbol super_expression . check_symbol_megaexp
    (90) check_symbol_megaexp -> . epsilon
    (135) epsilon -> .

    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_megaexp           shift and go to state 252
    epsilon                        shift and go to state 133

state 220

    (92) super_expression -> expression OP_GREATER_THAN push_symbol expression . check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 253
    epsilon                        shift and go to state 141

state 221

    (93) super_expression -> expression OP_LESS_THAN push_symbol expression . check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 254
    epsilon                        shift and go to state 141

state 222

    (94) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 255
    epsilon                        shift and go to state 141

state 223

    (95) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression . check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 256
    epsilon                        shift and go to state 141

state 224

    (96) super_expression -> expression OP_EQUALS_TWO push_symbol expression . check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 257
    epsilon                        shift and go to state 141

state 225

    (97) super_expression -> expression OP_NOT_EQUALS push_symbol expression . check_symbol_superexp
    (98) check_symbol_superexp -> . epsilon
    (135) epsilon -> .

    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    check_symbol_superexp          shift and go to state 258
    epsilon                        shift and go to state 141

state 226

    (100) expression -> term check_symbol_exp OP_PLUS push_symbol . expression
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    term                           shift and go to state 99
    expression                     shift and go to state 259
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 227

    (101) expression -> term check_symbol_exp OP_MINUS push_symbol . expression
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    term                           shift and go to state 99
    expression                     shift and go to state 260
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 228

    (105) term -> fact check_symbol_term OP_DIVISION push_symbol . term
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    fact                           shift and go to state 100
    term                           shift and go to state 261
    var_cte                        shift and go to state 101

state 229

    (106) term -> fact check_symbol_term OP_TIMES push_symbol . term
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    fact                           shift and go to state 100
    term                           shift and go to state 262
    var_cte                        shift and go to state 101

state 230

    (109) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN . remove_bottle_bottom
    (112) remove_bottle_bottom -> . epsilon
    (135) epsilon -> .

    OP_DIVISION     reduce using rule 135 (epsilon -> .)
    OP_TIMES        reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)
    OP_GREATER_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_THAN    reduce using rule 135 (epsilon -> .)
    OP_GREATER_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_LESS_EQUALS_THAN reduce using rule 135 (epsilon -> .)
    OP_EQUALS_TWO   reduce using rule 135 (epsilon -> .)
    OP_NOT_EQUALS   reduce using rule 135 (epsilon -> .)
    AND             reduce using rule 135 (epsilon -> .)
    OR              reduce using rule 135 (epsilon -> .)
    SEMICOLON       reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)
    COMA            reduce using rule 135 (epsilon -> .)

    remove_bottle_bottom           shift and go to state 263
    epsilon                        shift and go to state 264

state 231

    (73) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN . loop_gotoF bloque loop_fill
    (75) loop_gotoF -> . epsilon
    (135) epsilon -> .

    LCURLY_BRACKET  reduce using rule 135 (epsilon -> .)

    loop_gotoF                     shift and go to state 265
    epsilon                        shift and go to state 266

state 232

    (120) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS . bloque_figura
    (128) bloque_figura -> . LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 268

    bloque_figura                  shift and go to state 267

state 233

    (25) function_parameters_prime -> COMA type save_type ID . pushTo_varsTable function_parameters_prime
    (6) pushTo_varsTable -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    pushTo_varsTable               shift and go to state 269
    epsilon                        shift and go to state 25

state 234

    (52) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple . SEMICOLON

    SEMICOLON       shift and go to state 270


state 235

    (54) equals_quadruple -> epsilon .

    SEMICOLON       reduce using rule 54 (equals_quadruple -> epsilon .)


state 236

    (66) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 271


state 237

    (71) increment_equals -> epsilon .

    SEMICOLON       reduce using rule 71 (increment_equals -> epsilon .)


state 238

    (67) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals . SEMICOLON

    SEMICOLON       shift and go to state 272


state 239

    (68) increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    ID              reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    IF              reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FIGURE          reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    INT             reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 68 (increment -> ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON .)


state 240

    (69) increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .

    RCURLY_BRACKET  reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    ID              reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    IF              reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    PRINT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FOR             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    RETURN          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    WHILE           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FIGURE          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    INT             reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    FLOAT           reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    STRING          reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    BOOLEAN         reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)
    OP_RPAREN       reduce using rule 69 (increment -> ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON .)


state 241

    (53) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 273


state 242

    (79) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub . SEMICOLON

    SEMICOLON       shift and go to state 274


state 243

    (86) create_gosub -> epsilon .

    SEMICOLON       reduce using rule 86 (create_gosub -> epsilon .)


state 244

    (80) function_call_parameters -> mega_expression create_param function_call_parameters_prime .

    OP_RPAREN       reduce using rule 80 (function_call_parameters -> mega_expression create_param function_call_parameters_prime .)


state 245

    (82) function_call_parameters_prime -> COMA . mega_expression create_param function_call_parameters_prime
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 275
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 246

    (83) function_call_parameters_prime -> epsilon .

    OP_RPAREN       reduce using rule 83 (function_call_parameters_prime -> epsilon .)


state 247

    (55) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF1
    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque . fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (58) fill_if_gotoF1 -> . epsilon
    (59) fill_if_gotoF2 -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)
    INT             reduce using rule 135 (epsilon -> .)
    FLOAT           reduce using rule 135 (epsilon -> .)
    STRING          reduce using rule 135 (epsilon -> .)
    BOOLEAN         reduce using rule 135 (epsilon -> .)
    ELSE            reduce using rule 135 (epsilon -> .)

    fill_if_gotoF1                 shift and go to state 276
    fill_if_gotoF2                 shift and go to state 277
    epsilon                        shift and go to state 278

state 248

    (40) bloque -> LCURLY_BRACKET . bloque_primo RCURLY_BRACKET
    (41) bloque_primo -> . bloque_primo statement
    (42) bloque_primo -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)

    bloque_primo                   shift and go to state 279
    epsilon                        shift and go to state 280

state 249

    (64) impression -> mega_expression printer_quadruple COMA impression .

    OP_RPAREN       reduce using rule 64 (impression -> mega_expression printer_quadruple COMA impression .)


state 250

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON . loop_gotoF increment OP_RPAREN bloque loop_fill
    (75) loop_gotoF -> . epsilon
    (135) epsilon -> .

    ID              reduce using rule 135 (epsilon -> .)

    loop_gotoF                     shift and go to state 281
    epsilon                        shift and go to state 266

state 251

    (88) mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 88 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 88 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 88 (mega_expression -> super_expression AND push_symbol super_expression check_symbol_megaexp .)


state 252

    (89) mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .

    SEMICOLON       reduce using rule 89 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    OP_RPAREN       reduce using rule 89 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)
    COMA            reduce using rule 89 (mega_expression -> super_expression OR push_symbol super_expression check_symbol_megaexp .)


state 253

    (92) super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 92 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 92 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 92 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 92 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 92 (super_expression -> expression OP_GREATER_THAN push_symbol expression check_symbol_superexp .)


state 254

    (93) super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 93 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 93 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 93 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 93 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 93 (super_expression -> expression OP_LESS_THAN push_symbol expression check_symbol_superexp .)


state 255

    (94) super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 94 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 94 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 94 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 94 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 94 (super_expression -> expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 256

    (95) super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .

    AND             reduce using rule 95 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 95 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 95 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 95 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 95 (super_expression -> expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp .)


state 257

    (96) super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .

    AND             reduce using rule 96 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 96 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 96 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 96 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 96 (super_expression -> expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp .)


state 258

    (97) super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .

    AND             reduce using rule 97 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OR              reduce using rule 97 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    SEMICOLON       reduce using rule 97 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    OP_RPAREN       reduce using rule 97 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)
    COMA            reduce using rule 97 (super_expression -> expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp .)


state 259

    (100) expression -> term check_symbol_exp OP_PLUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    AND             reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OR              reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    SEMICOLON       reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    OP_RPAREN       reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)
    COMA            reduce using rule 100 (expression -> term check_symbol_exp OP_PLUS push_symbol expression .)


state 260

    (101) expression -> term check_symbol_exp OP_MINUS push_symbol expression .

    OP_GREATER_THAN reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_THAN    reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_GREATER_EQUALS_THAN reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_LESS_EQUALS_THAN reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_EQUALS_TWO   reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_NOT_EQUALS   reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    AND             reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OR              reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    SEMICOLON       reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    OP_RPAREN       reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)
    COMA            reduce using rule 101 (expression -> term check_symbol_exp OP_MINUS push_symbol expression .)


state 261

    (105) term -> fact check_symbol_term OP_DIVISION push_symbol term .

    OP_PLUS         reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_MINUS        reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_THAN reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_THAN    reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    AND             reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OR              reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    SEMICOLON       reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    OP_RPAREN       reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)
    COMA            reduce using rule 105 (term -> fact check_symbol_term OP_DIVISION push_symbol term .)


state 262

    (106) term -> fact check_symbol_term OP_TIMES push_symbol term .

    OP_PLUS         reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_MINUS        reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_THAN reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_THAN    reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_GREATER_EQUALS_THAN reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_LESS_EQUALS_THAN reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_EQUALS_TWO   reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_NOT_EQUALS   reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    AND             reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OR              reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    SEMICOLON       reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    OP_RPAREN       reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)
    COMA            reduce using rule 106 (term -> fact check_symbol_term OP_TIMES push_symbol term .)


state 263

    (109) fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .

    OP_DIVISION     reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_TIMES        reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_PLUS         reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_MINUS        reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_THAN reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_THAN    reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_GREATER_EQUALS_THAN reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_LESS_EQUALS_THAN reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_EQUALS_TWO   reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_NOT_EQUALS   reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    AND             reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OR              reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    SEMICOLON       reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    OP_RPAREN       reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)
    COMA            reduce using rule 109 (fact -> OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom .)


state 264

    (112) remove_bottle_bottom -> epsilon .

    OP_DIVISION     reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_TIMES        reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_PLUS         reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_MINUS        reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_THAN reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_LESS_THAN    reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_GREATER_EQUALS_THAN reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_LESS_EQUALS_THAN reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_EQUALS_TWO   reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_NOT_EQUALS   reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    AND             reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OR              reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    SEMICOLON       reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    OP_RPAREN       reduce using rule 112 (remove_bottle_bottom -> epsilon .)
    COMA            reduce using rule 112 (remove_bottle_bottom -> epsilon .)


state 265

    (73) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF . bloque loop_fill
    (40) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 248

    bloque                         shift and go to state 282

state 266

    (75) loop_gotoF -> epsilon .

    LCURLY_BRACKET  reduce using rule 75 (loop_gotoF -> epsilon .)
    ID              reduce using rule 75 (loop_gotoF -> epsilon .)


state 267

    (120) figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .

    RCURLY_BRACKET  reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    ID              reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    IF              reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    PRINT           reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FOR             reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    RETURN          reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    WHILE           reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FIGURE          reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    INT             reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    FLOAT           reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    STRING          reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)
    BOOLEAN         reduce using rule 120 (figure_creation -> FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura .)


state 268

    (128) bloque_figura -> LCURLY_BRACKET . bloque_figura_primo RCURLY_BRACKET
    (129) bloque_figura_primo -> . bloque_figura_primo figura_attr
    (130) bloque_figura_primo -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    COLOR           reduce using rule 135 (epsilon -> .)
    SIZE            reduce using rule 135 (epsilon -> .)
    VECTOR          reduce using rule 135 (epsilon -> .)

    bloque_figura_primo            shift and go to state 283
    epsilon                        shift and go to state 284

state 269

    (25) function_parameters_prime -> COMA type save_type ID pushTo_varsTable . function_parameters_prime
    (25) function_parameters_prime -> . COMA type save_type ID pushTo_varsTable function_parameters_prime
    (26) function_parameters_prime -> . epsilon
    (135) epsilon -> .

    COMA            shift and go to state 112
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    function_parameters_prime      shift and go to state 285
    epsilon                        shift and go to state 113

state 270

    (52) assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .

    RCURLY_BRACKET  reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    ID              reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    IF              reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    PRINT           reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FOR             reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    RETURN          reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    WHILE           reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FIGURE          reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    INT             reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    FLOAT           reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    STRING          reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    BOOLEAN         reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    OP_LPAREN       reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_INT         reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_FLOAT       reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_STRING      reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 52 (assigment -> ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON .)


state 271

    (66) increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FIGURE          reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 66 (increment -> ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 272

    (67) increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .

    RCURLY_BRACKET  reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    ID              reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    IF              reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    PRINT           reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FOR             reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    RETURN          reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    WHILE           reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FIGURE          reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    INT             reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    FLOAT           reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    STRING          reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    BOOLEAN         reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)
    OP_RPAREN       reduce using rule 67 (increment -> ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON .)


state 273

    (53) assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    ID              reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    IF              reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    PRINT           reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FOR             reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    RETURN          reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    WHILE           reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FIGURE          reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    INT             reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    FLOAT           reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    STRING          reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    BOOLEAN         reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    OP_LPAREN       reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_INT         reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_FLOAT       reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_STRING      reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)
    VAR_BOOLEAN     reduce using rule 53 (assigment -> ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON .)


state 274

    (79) function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .

    RCURLY_BRACKET  reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    ID              reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    IF              reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    PRINT           reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FOR             reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    RETURN          reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    WHILE           reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FIGURE          reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    INT             reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    FLOAT           reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    STRING          reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)
    BOOLEAN         reduce using rule 79 (function_call -> ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON .)


state 275

    (82) function_call_parameters_prime -> COMA mega_expression . create_param function_call_parameters_prime
    (85) create_param -> . epsilon
    (135) epsilon -> .

    COMA            reduce using rule 135 (epsilon -> .)
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    create_param                   shift and go to state 286
    epsilon                        shift and go to state 212

state 276

    (55) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .

    RCURLY_BRACKET  reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    ID              reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    IF              reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    PRINT           reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FOR             reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    RETURN          reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    WHILE           reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FIGURE          reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    INT             reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    FLOAT           reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    STRING          reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)
    BOOLEAN         reduce using rule 55 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1 .)


state 277

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 . if_goto_quadruple ELSE bloque fill_if_goto
    (61) if_goto_quadruple -> . epsilon
    (135) epsilon -> .

    ELSE            reduce using rule 135 (epsilon -> .)

    if_goto_quadruple              shift and go to state 287
    epsilon                        shift and go to state 288

state 278

    (58) fill_if_gotoF1 -> epsilon .
    (59) fill_if_gotoF2 -> epsilon .

    RCURLY_BRACKET  reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    ID              reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    IF              reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    PRINT           reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    FOR             reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    RETURN          reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    WHILE           reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    FIGURE          reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    INT             reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    FLOAT           reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    STRING          reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    BOOLEAN         reduce using rule 58 (fill_if_gotoF1 -> epsilon .)
    ELSE            reduce using rule 59 (fill_if_gotoF2 -> epsilon .)


state 279

    (40) bloque -> LCURLY_BRACKET bloque_primo . RCURLY_BRACKET
    (41) bloque_primo -> bloque_primo . statement
    (43) statement -> . assigment
    (44) statement -> . if
    (45) statement -> . printer
    (46) statement -> . increment
    (47) statement -> . for
    (48) statement -> . return
    (49) statement -> . function_call
    (50) statement -> . fun_esp
    (51) statement -> . while_loop
    (52) assigment -> . ID push_varID_to_Stack OP_EQUALS push_symbol mega_expression equals_quadruple SEMICOLON
    (53) assigment -> . ID OP_LSQUARE_PAREN VAR_INT OP_RSQUARE_PAREN OP_EQUALS mega_expression SEMICOLON
    (55) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF1
    (56) if -> . IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto
    (62) printer -> . PRINT OP_LPAREN impression OP_RPAREN SEMICOLON
    (66) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (72) for -> . FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill
    (77) return -> . RETURN mega_expression return_quadruple SEMICOLON
    (79) function_call -> . ID create_era OP_LPAREN function_call_parameters OP_RPAREN create_gosub SEMICOLON
    (119) fun_esp -> . figure_creation
    (73) while_loop -> . WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill
    (120) figure_creation -> . FIGURE ID OP_TWO_POINTS figure POSSESS bloque_figura

    RCURLY_BRACKET  shift and go to state 289
    ID              shift and go to state 77
    IF              shift and go to state 78
    PRINT           shift and go to state 79
    FOR             shift and go to state 80
    RETURN          shift and go to state 81
    WHILE           shift and go to state 83
    FIGURE          shift and go to state 84

    statement                      shift and go to state 290
    assigment                      shift and go to state 291
    if                             shift and go to state 292
    printer                        shift and go to state 293
    increment                      shift and go to state 294
    for                            shift and go to state 295
    return                         shift and go to state 296
    function_call                  shift and go to state 297
    fun_esp                        shift and go to state 298
    while_loop                     shift and go to state 299
    figure_creation                shift and go to state 82

state 280

    (42) bloque_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 42 (bloque_primo -> epsilon .)
    ID              reduce using rule 42 (bloque_primo -> epsilon .)
    IF              reduce using rule 42 (bloque_primo -> epsilon .)
    PRINT           reduce using rule 42 (bloque_primo -> epsilon .)
    FOR             reduce using rule 42 (bloque_primo -> epsilon .)
    RETURN          reduce using rule 42 (bloque_primo -> epsilon .)
    WHILE           reduce using rule 42 (bloque_primo -> epsilon .)
    FIGURE          reduce using rule 42 (bloque_primo -> epsilon .)


state 281

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF . increment OP_RPAREN bloque loop_fill
    (66) increment -> . ID push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> . ID push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> . ID push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> . ID push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON

    ID              shift and go to state 301

    increment                      shift and go to state 300

state 282

    (73) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque . loop_fill
    (76) loop_fill -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)
    INT             reduce using rule 135 (epsilon -> .)
    FLOAT           reduce using rule 135 (epsilon -> .)
    STRING          reduce using rule 135 (epsilon -> .)
    BOOLEAN         reduce using rule 135 (epsilon -> .)

    loop_fill                      shift and go to state 302
    epsilon                        shift and go to state 303

state 283

    (128) bloque_figura -> LCURLY_BRACKET bloque_figura_primo . RCURLY_BRACKET
    (129) bloque_figura_primo -> bloque_figura_primo . figura_attr
    (131) figura_attr -> . vector
    (132) figura_attr -> . COLOR OP_TWO_POINTS ID SEMICOLON
    (133) figura_attr -> . SIZE OP_TWO_POINTS mega_expression SEMICOLON
    (134) vector -> . VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    RCURLY_BRACKET  shift and go to state 304
    COLOR           shift and go to state 307
    SIZE            shift and go to state 308
    VECTOR          shift and go to state 309

    figura_attr                    shift and go to state 305
    vector                         shift and go to state 306

state 284

    (130) bloque_figura_primo -> epsilon .

    RCURLY_BRACKET  reduce using rule 130 (bloque_figura_primo -> epsilon .)
    COLOR           reduce using rule 130 (bloque_figura_primo -> epsilon .)
    SIZE            reduce using rule 130 (bloque_figura_primo -> epsilon .)
    VECTOR          reduce using rule 130 (bloque_figura_primo -> epsilon .)


state 285

    (25) function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime .

    OP_RPAREN       reduce using rule 25 (function_parameters_prime -> COMA type save_type ID pushTo_varsTable function_parameters_prime .)


state 286

    (82) function_call_parameters_prime -> COMA mega_expression create_param . function_call_parameters_prime
    (82) function_call_parameters_prime -> . COMA mega_expression create_param function_call_parameters_prime
    (83) function_call_parameters_prime -> . epsilon
    (135) epsilon -> .

    COMA            shift and go to state 245
    OP_RPAREN       reduce using rule 135 (epsilon -> .)

    function_call_parameters_prime shift and go to state 310
    epsilon                        shift and go to state 246

state 287

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple . ELSE bloque fill_if_goto

    ELSE            shift and go to state 311


state 288

    (61) if_goto_quadruple -> epsilon .

    ELSE            reduce using rule 61 (if_goto_quadruple -> epsilon .)


state 289

    (40) bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .

    ELSE            reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RCURLY_BRACKET  reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    ID              reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    IF              reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FOR             reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    INT             reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    STRING          reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 40 (bloque -> LCURLY_BRACKET bloque_primo RCURLY_BRACKET .)


state 290

    (41) bloque_primo -> bloque_primo statement .

    RCURLY_BRACKET  reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    ID              reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    IF              reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    PRINT           reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    FOR             reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    RETURN          reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    WHILE           reduce using rule 41 (bloque_primo -> bloque_primo statement .)
    FIGURE          reduce using rule 41 (bloque_primo -> bloque_primo statement .)


state 291

    (43) statement -> assigment .

    RCURLY_BRACKET  reduce using rule 43 (statement -> assigment .)
    ID              reduce using rule 43 (statement -> assigment .)
    IF              reduce using rule 43 (statement -> assigment .)
    PRINT           reduce using rule 43 (statement -> assigment .)
    FOR             reduce using rule 43 (statement -> assigment .)
    RETURN          reduce using rule 43 (statement -> assigment .)
    WHILE           reduce using rule 43 (statement -> assigment .)
    FIGURE          reduce using rule 43 (statement -> assigment .)


state 292

    (44) statement -> if .

    RCURLY_BRACKET  reduce using rule 44 (statement -> if .)
    ID              reduce using rule 44 (statement -> if .)
    IF              reduce using rule 44 (statement -> if .)
    PRINT           reduce using rule 44 (statement -> if .)
    FOR             reduce using rule 44 (statement -> if .)
    RETURN          reduce using rule 44 (statement -> if .)
    WHILE           reduce using rule 44 (statement -> if .)
    FIGURE          reduce using rule 44 (statement -> if .)


state 293

    (45) statement -> printer .

    RCURLY_BRACKET  reduce using rule 45 (statement -> printer .)
    ID              reduce using rule 45 (statement -> printer .)
    IF              reduce using rule 45 (statement -> printer .)
    PRINT           reduce using rule 45 (statement -> printer .)
    FOR             reduce using rule 45 (statement -> printer .)
    RETURN          reduce using rule 45 (statement -> printer .)
    WHILE           reduce using rule 45 (statement -> printer .)
    FIGURE          reduce using rule 45 (statement -> printer .)


state 294

    (46) statement -> increment .

    RCURLY_BRACKET  reduce using rule 46 (statement -> increment .)
    ID              reduce using rule 46 (statement -> increment .)
    IF              reduce using rule 46 (statement -> increment .)
    PRINT           reduce using rule 46 (statement -> increment .)
    FOR             reduce using rule 46 (statement -> increment .)
    RETURN          reduce using rule 46 (statement -> increment .)
    WHILE           reduce using rule 46 (statement -> increment .)
    FIGURE          reduce using rule 46 (statement -> increment .)


state 295

    (47) statement -> for .

    RCURLY_BRACKET  reduce using rule 47 (statement -> for .)
    ID              reduce using rule 47 (statement -> for .)
    IF              reduce using rule 47 (statement -> for .)
    PRINT           reduce using rule 47 (statement -> for .)
    FOR             reduce using rule 47 (statement -> for .)
    RETURN          reduce using rule 47 (statement -> for .)
    WHILE           reduce using rule 47 (statement -> for .)
    FIGURE          reduce using rule 47 (statement -> for .)


state 296

    (48) statement -> return .

    RCURLY_BRACKET  reduce using rule 48 (statement -> return .)
    ID              reduce using rule 48 (statement -> return .)
    IF              reduce using rule 48 (statement -> return .)
    PRINT           reduce using rule 48 (statement -> return .)
    FOR             reduce using rule 48 (statement -> return .)
    RETURN          reduce using rule 48 (statement -> return .)
    WHILE           reduce using rule 48 (statement -> return .)
    FIGURE          reduce using rule 48 (statement -> return .)


state 297

    (49) statement -> function_call .

    RCURLY_BRACKET  reduce using rule 49 (statement -> function_call .)
    ID              reduce using rule 49 (statement -> function_call .)
    IF              reduce using rule 49 (statement -> function_call .)
    PRINT           reduce using rule 49 (statement -> function_call .)
    FOR             reduce using rule 49 (statement -> function_call .)
    RETURN          reduce using rule 49 (statement -> function_call .)
    WHILE           reduce using rule 49 (statement -> function_call .)
    FIGURE          reduce using rule 49 (statement -> function_call .)


state 298

    (50) statement -> fun_esp .

    RCURLY_BRACKET  reduce using rule 50 (statement -> fun_esp .)
    ID              reduce using rule 50 (statement -> fun_esp .)
    IF              reduce using rule 50 (statement -> fun_esp .)
    PRINT           reduce using rule 50 (statement -> fun_esp .)
    FOR             reduce using rule 50 (statement -> fun_esp .)
    RETURN          reduce using rule 50 (statement -> fun_esp .)
    WHILE           reduce using rule 50 (statement -> fun_esp .)
    FIGURE          reduce using rule 50 (statement -> fun_esp .)


state 299

    (51) statement -> while_loop .

    RCURLY_BRACKET  reduce using rule 51 (statement -> while_loop .)
    ID              reduce using rule 51 (statement -> while_loop .)
    IF              reduce using rule 51 (statement -> while_loop .)
    PRINT           reduce using rule 51 (statement -> while_loop .)
    FOR             reduce using rule 51 (statement -> while_loop .)
    RETURN          reduce using rule 51 (statement -> while_loop .)
    WHILE           reduce using rule 51 (statement -> while_loop .)
    FIGURE          reduce using rule 51 (statement -> while_loop .)


state 300

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment . OP_RPAREN bloque loop_fill

    OP_RPAREN       shift and go to state 312


state 301

    (66) increment -> ID . push_varID_to_Stack OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> ID . push_varID_to_Stack OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID . push_varID_to_Stack OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> ID . push_varID_to_Stack OP_MINUS OP_MINUS incrementByOne SEMICOLON
    (110) push_varID_to_Stack -> . epsilon
    (135) epsilon -> .

    OP_PLUS_EQUALS  reduce using rule 135 (epsilon -> .)
    OP_MINUS_EQUALS reduce using rule 135 (epsilon -> .)
    OP_PLUS         reduce using rule 135 (epsilon -> .)
    OP_MINUS        reduce using rule 135 (epsilon -> .)

    push_varID_to_Stack            shift and go to state 313
    epsilon                        shift and go to state 149

state 302

    (73) while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    ID              reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    IF              reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    PRINT           reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FOR             reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    RETURN          reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    WHILE           reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FIGURE          reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    INT             reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    FLOAT           reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    STRING          reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)
    BOOLEAN         reduce using rule 73 (while_loop -> WHILE loop_jumpCount OP_LPAREN mega_expression OP_RPAREN loop_gotoF bloque loop_fill .)


state 303

    (76) loop_fill -> epsilon .

    RCURLY_BRACKET  reduce using rule 76 (loop_fill -> epsilon .)
    ID              reduce using rule 76 (loop_fill -> epsilon .)
    IF              reduce using rule 76 (loop_fill -> epsilon .)
    PRINT           reduce using rule 76 (loop_fill -> epsilon .)
    FOR             reduce using rule 76 (loop_fill -> epsilon .)
    RETURN          reduce using rule 76 (loop_fill -> epsilon .)
    WHILE           reduce using rule 76 (loop_fill -> epsilon .)
    FIGURE          reduce using rule 76 (loop_fill -> epsilon .)
    INT             reduce using rule 76 (loop_fill -> epsilon .)
    FLOAT           reduce using rule 76 (loop_fill -> epsilon .)
    STRING          reduce using rule 76 (loop_fill -> epsilon .)
    BOOLEAN         reduce using rule 76 (loop_fill -> epsilon .)


state 304

    (128) bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .

    RCURLY_BRACKET  reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    ID              reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    IF              reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    PRINT           reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FOR             reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    RETURN          reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    WHILE           reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FIGURE          reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    INT             reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    FLOAT           reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    STRING          reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)
    BOOLEAN         reduce using rule 128 (bloque_figura -> LCURLY_BRACKET bloque_figura_primo RCURLY_BRACKET .)


state 305

    (129) bloque_figura_primo -> bloque_figura_primo figura_attr .

    RCURLY_BRACKET  reduce using rule 129 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    COLOR           reduce using rule 129 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    SIZE            reduce using rule 129 (bloque_figura_primo -> bloque_figura_primo figura_attr .)
    VECTOR          reduce using rule 129 (bloque_figura_primo -> bloque_figura_primo figura_attr .)


state 306

    (131) figura_attr -> vector .

    RCURLY_BRACKET  reduce using rule 131 (figura_attr -> vector .)
    COLOR           reduce using rule 131 (figura_attr -> vector .)
    SIZE            reduce using rule 131 (figura_attr -> vector .)
    VECTOR          reduce using rule 131 (figura_attr -> vector .)


state 307

    (132) figura_attr -> COLOR . OP_TWO_POINTS ID SEMICOLON

    OP_TWO_POINTS   shift and go to state 314


state 308

    (133) figura_attr -> SIZE . OP_TWO_POINTS mega_expression SEMICOLON

    OP_TWO_POINTS   shift and go to state 315


state 309

    (134) vector -> VECTOR . ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    ID              shift and go to state 316


state 310

    (82) function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime .

    OP_RPAREN       reduce using rule 82 (function_call_parameters_prime -> COMA mega_expression create_param function_call_parameters_prime .)


state 311

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE . bloque fill_if_goto
    (40) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 248

    bloque                         shift and go to state 317

state 312

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN . bloque loop_fill
    (40) bloque -> . LCURLY_BRACKET bloque_primo RCURLY_BRACKET

    LCURLY_BRACKET  shift and go to state 248

    bloque                         shift and go to state 318

state 313

    (66) increment -> ID push_varID_to_Stack . OP_PLUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (67) increment -> ID push_varID_to_Stack . OP_MINUS_EQUALS push_symbol mega_expression increment_equals SEMICOLON
    (68) increment -> ID push_varID_to_Stack . OP_PLUS OP_PLUS incrementByOne SEMICOLON
    (69) increment -> ID push_varID_to_Stack . OP_MINUS OP_MINUS incrementByOne SEMICOLON

    OP_PLUS_EQUALS  shift and go to state 117
    OP_MINUS_EQUALS shift and go to state 118
    OP_PLUS         shift and go to state 119
    OP_MINUS        shift and go to state 120


state 314

    (132) figura_attr -> COLOR OP_TWO_POINTS . ID SEMICOLON

    ID              shift and go to state 319


state 315

    (133) figura_attr -> SIZE OP_TWO_POINTS . mega_expression SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 320
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 316

    (134) vector -> VECTOR ID . OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_TWO_POINTS   shift and go to state 321


state 317

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque . fill_if_goto
    (60) fill_if_goto -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)
    INT             reduce using rule 135 (epsilon -> .)
    FLOAT           reduce using rule 135 (epsilon -> .)
    STRING          reduce using rule 135 (epsilon -> .)
    BOOLEAN         reduce using rule 135 (epsilon -> .)

    fill_if_goto                   shift and go to state 322
    epsilon                        shift and go to state 323

state 318

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque . loop_fill
    (76) loop_fill -> . epsilon
    (135) epsilon -> .

    RCURLY_BRACKET  reduce using rule 135 (epsilon -> .)
    ID              reduce using rule 135 (epsilon -> .)
    IF              reduce using rule 135 (epsilon -> .)
    PRINT           reduce using rule 135 (epsilon -> .)
    FOR             reduce using rule 135 (epsilon -> .)
    RETURN          reduce using rule 135 (epsilon -> .)
    WHILE           reduce using rule 135 (epsilon -> .)
    FIGURE          reduce using rule 135 (epsilon -> .)
    INT             reduce using rule 135 (epsilon -> .)
    FLOAT           reduce using rule 135 (epsilon -> .)
    STRING          reduce using rule 135 (epsilon -> .)
    BOOLEAN         reduce using rule 135 (epsilon -> .)

    loop_fill                      shift and go to state 324
    epsilon                        shift and go to state 303

state 319

    (132) figura_attr -> COLOR OP_TWO_POINTS ID . SEMICOLON

    SEMICOLON       shift and go to state 325


state 320

    (133) figura_attr -> SIZE OP_TWO_POINTS mega_expression . SEMICOLON

    SEMICOLON       shift and go to state 326


state 321

    (134) vector -> VECTOR ID OP_TWO_POINTS . OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON

    OP_LPAREN       shift and go to state 327


state 322

    (56) if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .

    RCURLY_BRACKET  reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    ID              reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    IF              reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    PRINT           reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FOR             reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    RETURN          reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    WHILE           reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FIGURE          reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    INT             reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    FLOAT           reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    STRING          reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)
    BOOLEAN         reduce using rule 56 (if -> IF OP_LPAREN mega_expression OP_RPAREN if_gotoF_quadruple bloque fill_if_gotoF2 if_goto_quadruple ELSE bloque fill_if_goto .)


state 323

    (60) fill_if_goto -> epsilon .

    RCURLY_BRACKET  reduce using rule 60 (fill_if_goto -> epsilon .)
    ID              reduce using rule 60 (fill_if_goto -> epsilon .)
    IF              reduce using rule 60 (fill_if_goto -> epsilon .)
    PRINT           reduce using rule 60 (fill_if_goto -> epsilon .)
    FOR             reduce using rule 60 (fill_if_goto -> epsilon .)
    RETURN          reduce using rule 60 (fill_if_goto -> epsilon .)
    WHILE           reduce using rule 60 (fill_if_goto -> epsilon .)
    FIGURE          reduce using rule 60 (fill_if_goto -> epsilon .)
    INT             reduce using rule 60 (fill_if_goto -> epsilon .)
    FLOAT           reduce using rule 60 (fill_if_goto -> epsilon .)
    STRING          reduce using rule 60 (fill_if_goto -> epsilon .)
    BOOLEAN         reduce using rule 60 (fill_if_goto -> epsilon .)


state 324

    (72) for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .

    RCURLY_BRACKET  reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    ID              reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    IF              reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    PRINT           reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FOR             reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    RETURN          reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    WHILE           reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FIGURE          reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    INT             reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    FLOAT           reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    STRING          reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)
    BOOLEAN         reduce using rule 72 (for -> FOR OP_LPAREN assigment loop_jumpCount mega_expression SEMICOLON loop_gotoF increment OP_RPAREN bloque loop_fill .)


state 325

    (132) figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .

    RCURLY_BRACKET  reduce using rule 132 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    COLOR           reduce using rule 132 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    SIZE            reduce using rule 132 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)
    VECTOR          reduce using rule 132 (figura_attr -> COLOR OP_TWO_POINTS ID SEMICOLON .)


state 326

    (133) figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .

    RCURLY_BRACKET  reduce using rule 133 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    COLOR           reduce using rule 133 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    SIZE            reduce using rule 133 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)
    VECTOR          reduce using rule 133 (figura_attr -> SIZE OP_TWO_POINTS mega_expression SEMICOLON .)


state 327

    (134) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN . mega_expression COMA mega_expression OP_RPAREN SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 328
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 328

    (134) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression . COMA mega_expression OP_RPAREN SEMICOLON

    COMA            shift and go to state 329


state 329

    (134) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA . mega_expression OP_RPAREN SEMICOLON
    (87) mega_expression -> . super_expression check_symbol_megaexp
    (88) mega_expression -> . super_expression AND push_symbol super_expression check_symbol_megaexp
    (89) mega_expression -> . super_expression OR push_symbol super_expression check_symbol_megaexp
    (91) super_expression -> . expression check_symbol_superexp
    (92) super_expression -> . expression OP_GREATER_THAN push_symbol expression check_symbol_superexp
    (93) super_expression -> . expression OP_LESS_THAN push_symbol expression check_symbol_superexp
    (94) super_expression -> . expression OP_GREATER_EQUALS_THAN push_symbol expression check_symbol_superexp
    (95) super_expression -> . expression OP_LESS_EQUALS_THAN push_symbol expression check_symbol_superexp
    (96) super_expression -> . expression OP_EQUALS_TWO push_symbol expression check_symbol_superexp
    (97) super_expression -> . expression OP_NOT_EQUALS push_symbol expression check_symbol_superexp
    (99) expression -> . term check_symbol_exp
    (100) expression -> . term check_symbol_exp OP_PLUS push_symbol expression
    (101) expression -> . term check_symbol_exp OP_MINUS push_symbol expression
    (104) term -> . fact check_symbol_term
    (105) term -> . fact check_symbol_term OP_DIVISION push_symbol term
    (106) term -> . fact check_symbol_term OP_TIMES push_symbol term
    (108) fact -> . var_cte
    (109) fact -> . OP_LPAREN push_bottle_bottom mega_expression OP_RPAREN remove_bottle_bottom
    (113) var_cte -> . ID push_varID_to_Stack
    (114) var_cte -> . VAR_INT push_cte_toTable
    (115) var_cte -> . VAR_FLOAT push_cte_toTable
    (116) var_cte -> . VAR_STRING push_cte_toTable
    (117) var_cte -> . VAR_BOOLEAN push_cte_toTable

    OP_LPAREN       shift and go to state 102
    ID              shift and go to state 103
    VAR_INT         shift and go to state 104
    VAR_FLOAT       shift and go to state 105
    VAR_STRING      shift and go to state 106
    VAR_BOOLEAN     shift and go to state 107

    mega_expression                shift and go to state 330
    super_expression               shift and go to state 97
    expression                     shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    var_cte                        shift and go to state 101

state 330

    (134) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression . OP_RPAREN SEMICOLON

    OP_RPAREN       shift and go to state 331


state 331

    (134) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 332


state 332

    (134) vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .

    RCURLY_BRACKET  reduce using rule 134 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    COLOR           reduce using rule 134 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    SIZE            reduce using rule 134 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)
    VECTOR          reduce using rule 134 (vector -> VECTOR ID OP_TWO_POINTS OP_LPAREN mega_expression COMA mega_expression OP_RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 37 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 37 resolved as shift
WARNING: shift/reduce conflict for STRING in state 37 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 37 resolved as shift
WARNING: shift/reduce conflict for RCURLY_BRACKET in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for FIGURE in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 57 resolved as shift
